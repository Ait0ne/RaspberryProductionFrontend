{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nimport 'firebase/messaging';\nvar config = {\n  apiKey: \"AIzaSyABugTRykVjU3cO3nkANbnArtyZ_TPix1Q\",\n  authDomain: \"raspberry-dacc1.firebaseapp.com\",\n  databaseURL: \"https://raspberry-dacc1.firebaseio.com\",\n  projectId: \"raspberry-dacc1\",\n  storageBucket: \"raspberry-dacc1.appspot.com\",\n  messagingSenderId: \"435336134829\",\n  appId: \"1:435336134829:web:36258d0b8bdb9bf9810624\",\n  measurementId: \"G-E4XKDDZNWV\"\n};\nexport var createUserProfileDocument = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(userAuth, data) {\n    var userRef, snapshot, displayName, email, createdAt;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (userAuth) {\n              _context.next = 2;\n              break;\n            }\n\n            return _context.abrupt(\"return\");\n\n          case 2:\n            userRef = firestore.doc(\"users/\".concat(userAuth.uid));\n            _context.next = 5;\n            return userRef.get();\n\n          case 5:\n            snapshot = _context.sent;\n\n            if (snapshot.exists) {\n              _context.next = 17;\n              break;\n            }\n\n            displayName = userAuth.displayName, email = userAuth.email;\n            createdAt = new Date();\n            _context.prev = 9;\n            _context.next = 12;\n            return userRef.set(_objectSpread({\n              displayName: displayName,\n              email: email,\n              createdAt: createdAt\n            }, data));\n\n          case 12:\n            _context.next = 17;\n            break;\n\n          case 14:\n            _context.prev = 14;\n            _context.t0 = _context[\"catch\"](9);\n            console.log('error creating user', _context.t0.message);\n\n          case 17:\n            return _context.abrupt(\"return\", userRef);\n\n          case 18:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[9, 14]]);\n  }));\n\n  return function createUserProfileDocument(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nif (!firebase.apps.length) {\n  firebase.initializeApp(config);\n}\n\nexport var Fire = function Fire() {\n  if (!firebase.apps.length) {\n    firebase.initializeApp(config);\n  }\n};\n_c = Fire;\nexport var sendMessage = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(message, channel, token) {\n    var channelRef, snapshot, chatRef, pushMessage, response, result;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            channelRef = firestore.collection('Chat').doc(\"\".concat(channel));\n            _context2.next = 3;\n            return channelRef.get();\n\n          case 3:\n            snapshot = _context2.sent;\n\n            if (snapshot.exists) {\n              _context2.next = 7;\n              break;\n            }\n\n            _context2.next = 7;\n            return channelRef.set({\n              name: channel\n            });\n\n          case 7:\n            chatRef = firestore.collection('Chat').doc(\"\".concat(channel)).collection(\"messages\").doc(\"\".concat(new Date()));\n            _context2.prev = 8;\n            _context2.next = 11;\n            return channelRef.update({\n              userMessages: true,\n              text: message,\n              time: new Date()\n            });\n\n          case 11:\n            _context2.next = 13;\n            return chatRef.set({\n              id: new Date(),\n              text: message,\n              createdAt: new Date().getTime(),\n              user: {\n                id: channel\n              }\n            });\n\n          case 13:\n            _context2.next = 18;\n            break;\n\n          case 15:\n            _context2.prev = 15;\n            _context2.t0 = _context2[\"catch\"](8);\n            alert(_context2.t0.message);\n\n          case 18:\n            if (!token) {\n              _context2.next = 27;\n              break;\n            }\n\n            pushMessage = {\n              \"token\": \"dpgLNzuETNuJzqayROO8hI:APA91bFCjE-Ku5FYHbJxdSc-5UtFp5v6tNAcHB1Kf88w58IdON_vuhySeWwuBGwoCdnpFyBJcYSJAowCNsFoLV9lj0ZRaQr3HnLhQmekh6qienx7aGImyONwU0nssj14kmdpHE-63SSa\",\n              \"notification\": {\n                \"title\": \"\".concat(channel),\n                \"body\": \"\".concat(message)\n              }\n            };\n            _context2.next = 22;\n            return fetch(\"http://localhost:5000/push\", {\n              method: 'post',\n              headers: {\n                'Content-type': 'application/json'\n              },\n              body: JSON.stringify({\n                message: pushMessage,\n                token: token\n              })\n            });\n\n          case 22:\n            response = _context2.sent;\n            _context2.next = 25;\n            return response.json();\n\n          case 25:\n            result = _context2.sent;\n            console.log(result);\n\n          case 27:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[8, 15]]);\n  }));\n\n  return function sendMessage(_x3, _x4, _x5) {\n    return _ref2.apply(this, arguments);\n  };\n}();\nexport var auth = firebase.auth();\nexport var firestore = firebase.firestore();\nvar provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport var signInwithGoogle = function signInwithGoogle() {\n  return auth.signInWithPopup(provider);\n};\nvar facebookProvider = new firebase.auth.FacebookAuthProvider();\nfacebookProvider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport var signInWithFacebook = function signInWithFacebook() {\n  return auth.signInWithPopup(facebookProvider)[\"catch\"](function (err) {\n    return alert('Your account is associated with a different Login method!');\n  });\n};\nexport default firebase;\n\nvar _c;\n\n$RefreshReg$(_c, \"Fire\");","map":{"version":3,"sources":["C:/Users/bonaf/Desktop/Projects/Ecommerce/Malinka/frontend/malinka/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","createUserProfileDocument","userAuth","data","userRef","firestore","doc","uid","get","snapshot","exists","displayName","email","createdAt","Date","set","console","log","message","apps","length","initializeApp","Fire","sendMessage","channel","token","channelRef","collection","name","chatRef","update","userMessages","text","time","id","getTime","user","alert","pushMessage","fetch","method","headers","body","JSON","stringify","response","json","result","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInwithGoogle","signInWithPopup","facebookProvider","FacebookAuthProvider","signInWithFacebook","err"],"mappings":"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","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\nimport 'firebase/messaging';\r\n\r\nconst config = {\r\n    apiKey: \"AIzaSyABugTRykVjU3cO3nkANbnArtyZ_TPix1Q\",\r\n    authDomain: \"raspberry-dacc1.firebaseapp.com\",\r\n    databaseURL: \"https://raspberry-dacc1.firebaseio.com\",\r\n    projectId: \"raspberry-dacc1\",\r\n    storageBucket: \"raspberry-dacc1.appspot.com\",\r\n    messagingSenderId: \"435336134829\",\r\n    appId: \"1:435336134829:web:36258d0b8bdb9bf9810624\",\r\n    measurementId: \"G-E4XKDDZNWV\"\r\n};\r\n\r\nexport const createUserProfileDocument = async (userAuth,data) => {\r\n    if (!userAuth) return;\r\n\r\n    const userRef = firestore.doc(`users/${userAuth.uid}`);\r\n    const snapshot = await userRef.get();\r\n\r\n    if (!snapshot.exists) {\r\n        const {displayName,email} = userAuth;\r\n        const createdAt = new Date()\r\n        try{\r\n            await userRef.set({\r\n                displayName,\r\n                email,\r\n                createdAt,\r\n                ...data,\r\n            })\r\n        \r\n        } catch (err) {\r\n            console.log('error creating user', err.message)\r\n        }\r\n    }\r\n    return userRef;\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nif (!firebase.apps.length) {\r\n    firebase.initializeApp(config);\r\n\r\n}\r\n\r\n\r\nexport const Fire = () => {\r\n        if (!firebase.apps.length) {\r\n            firebase.initializeApp(config)\r\n        }\r\n\r\n} \r\n\r\nexport const sendMessage = async (message, channel, token) => {\r\n\r\n    const channelRef = firestore.collection('Chat').doc(`${channel}`)\r\n    const snapshot = await channelRef.get();\r\n\r\n    if (!snapshot.exists) {\r\n        await channelRef.set({name:channel})\r\n    }\r\n    const chatRef = firestore.collection('Chat').doc(`${channel}`).collection(`messages`).doc(`${new Date()}`)\r\n    try {\r\n        await channelRef.update({\r\n            userMessages:true,\r\n            text:message,\r\n            time:new Date()\r\n        })\r\n        await chatRef.set({\r\n            id:new Date(),\r\n            text:message,\r\n            createdAt: new Date().getTime(),\r\n            user: {id:channel}\r\n        })\r\n    } catch (err) {\r\n        alert(err.message)\r\n    }\r\n    if (token) {\r\n        const pushMessage = {\r\n            \"token\" : \"dpgLNzuETNuJzqayROO8hI:APA91bFCjE-Ku5FYHbJxdSc-5UtFp5v6tNAcHB1Kf88w58IdON_vuhySeWwuBGwoCdnpFyBJcYSJAowCNsFoLV9lj0ZRaQr3HnLhQmekh6qienx7aGImyONwU0nssj14kmdpHE-63SSa\",\r\n            \"notification\" : {\r\n                \"title\": `${channel}`,\r\n                \"body\": `${message}`\r\n            }\r\n        }\r\n        const response = await fetch(`http://localhost:5000/push`, {\r\n            method: 'post',\r\n            headers: {'Content-type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                message: pushMessage,\r\n                token\r\n            })\r\n            })\r\n        const result = await response.json()\r\n        console.log(result)\r\n    }\r\n\r\n\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const auth = firebase.auth();\r\nexport const firestore =firebase.firestore();\r\n\r\n\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\nprovider.setCustomParameters({prompt:'select_account'});\r\nexport const signInwithGoogle = () => auth.signInWithPopup(provider);\r\n\r\nconst facebookProvider = new firebase.auth.FacebookAuthProvider();\r\nfacebookProvider.setCustomParameters({prompt:'select_account'});\r\nexport const signInWithFacebook = () => auth.signInWithPopup(facebookProvider)\r\n.catch(err => alert('Your account is associated with a different Login method!'))\r\n\r\nexport default firebase;\r\n"]},"metadata":{},"sourceType":"module"}