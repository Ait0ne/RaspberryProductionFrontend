{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\bonaf\\\\Desktop\\\\Projects\\\\Ecommerce\\\\Malinka\\\\frontend\\\\malinka\\\\components\\\\ClickOutside\\\\ClickOutside.component.jsx\",\n    _s2 = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useEffect, useRef } from \"react\";\n\nvar ClickOutside = function ClickOutside(_ref) {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  var children = _ref.children,\n      onClick = _ref.onClick;\n  var refs = React.Children.map(children, _s(function () {\n    _s();\n\n    return useRef();\n  }, \"J9pzIsEOVEZ74gjFtMkCj+5Po7s=\"));\n\n  var handleClick = function handleClick(e) {\n    var isOutside = refs.every(function (ref) {\n      console.log(ref.current, e.target);\n\n      if (e.target === __jsx(\"div\", {\n        className: \"cart-item-remove-button\",\n        onClick: function onClick() {\n          return clearItemFromCart(cartItem);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 8,\n          columnNumber: 24\n        }\n      }, \"\\u2715\")) {\n        return False;\n      }\n\n      return !ref.current.contains(e.target);\n    });\n\n    if (isOutside) {\n      onClick();\n    }\n  };\n\n  useEffect(function () {\n    document.addEventListener(\"click\", handleClick);\n    return function () {\n      document.removeEventListener(\"click\", handleClick);\n    };\n  });\n  return React.Children.map(children, function (element, idx) {\n    return React.cloneElement(element, {\n      ref: refs[idx]\n    });\n  });\n};\n\n_s2(ClickOutside, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = ClickOutside;\nexport default ClickOutside;\n\nvar _c;\n\n$RefreshReg$(_c, \"ClickOutside\");","map":{"version":3,"sources":["C:/Users/bonaf/Desktop/Projects/Ecommerce/Malinka/frontend/malinka/components/ClickOutside/ClickOutside.component.jsx"],"names":["React","useEffect","useRef","ClickOutside","children","onClick","refs","Children","map","handleClick","e","isOutside","every","ref","console","log","current","target","clearItemFromCart","cartItem","False","contains","document","addEventListener","removeEventListener","element","idx","cloneElement"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,QAAyC,OAAzC;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,OAA2B;AAAA;;AAAA;;AAAA,MAAxBC,QAAwB,QAAxBA,QAAwB;AAAA,MAAdC,OAAc,QAAdA,OAAc;AAC9C,MAAMC,IAAI,GAAGN,KAAK,CAACO,QAAN,CAAeC,GAAf,CAAmBJ,QAAnB,KAA6B;AAAA;;AAAA,WAAMF,MAAM,EAAZ;AAAA,GAA7B,kCAAb;;AACA,MAAMO,WAAW,GAAG,SAAdA,WAAc,CAAAC,CAAC,EAAI;AACvB,QAAMC,SAAS,GAAGL,IAAI,CAACM,KAAL,CAAW,UAAAC,GAAG,EAAI;AAChCC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,OAAhB,EAAyBN,CAAC,CAACO,MAA3B;;AACA,UAAIP,CAAC,CAACO,MAAF,KAAW;AAAK,QAAA,SAAS,EAAC,yBAAf;AAAyC,QAAA,OAAO,EAAE;AAAA,iBAAMC,iBAAiB,CAACC,QAAD,CAAvB;AAAA,SAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAf,EACA;AAAC,eAAOC,KAAP;AAAa;;AAChB,aAAO,CAACP,GAAG,CAACG,OAAJ,CAAYK,QAAZ,CAAqBX,CAAC,CAACO,MAAvB,CAAR;AAED,KANiB,CAAlB;;AAQA,QAAIN,SAAJ,EAAe;AACbN,MAAAA,OAAO;AACR;AACF,GAZD;;AAcAJ,EAAAA,SAAS,CAAC,YAAM;AACdqB,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,OAA1B,EAAmCd,WAAnC;AAEA,WAAO,YAAM;AACXa,MAAAA,QAAQ,CAACE,mBAAT,CAA6B,OAA7B,EAAsCf,WAAtC;AACD,KAFD;AAGD,GANQ,CAAT;AAQA,SAAOT,KAAK,CAACO,QAAN,CAAeC,GAAf,CAAmBJ,QAAnB,EAA6B,UAACqB,OAAD,EAAUC,GAAV;AAAA,WAClC1B,KAAK,CAAC2B,YAAN,CAAmBF,OAAnB,EAA4B;AAAEZ,MAAAA,GAAG,EAAEP,IAAI,CAACoB,GAAD;AAAX,KAA5B,CADkC;AAAA,GAA7B,CAAP;AAGD,CA3BD;;IAAMvB,Y;;KAAAA,Y;AA6BN,eAAeA,YAAf","sourcesContent":["import React, { useEffect, useRef } from \"react\";\r\n\r\nconst ClickOutside = ({ children, onClick }) => {\r\n  const refs = React.Children.map(children, () => useRef());\r\n  const handleClick = e => {\r\n    const isOutside = refs.every(ref => {\r\n        console.log(ref.current, e.target)\r\n        if (e.target===<div className='cart-item-remove-button' onClick={() => clearItemFromCart(cartItem)}>&#10005;</div>)\r\n        {return False}\r\n      return !ref.current.contains(e.target);\r\n\r\n    });\r\n    \r\n    if (isOutside) {\r\n      onClick();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.addEventListener(\"click\", handleClick);\r\n\r\n    return () => {\r\n      document.removeEventListener(\"click\", handleClick);\r\n    };\r\n  });\r\n\r\n  return React.Children.map(children, (element, idx) =>\r\n    React.cloneElement(element, { ref: refs[idx] })\r\n  );\r\n}\r\n\r\nexport default ClickOutside;"]},"metadata":{},"sourceType":"module"}