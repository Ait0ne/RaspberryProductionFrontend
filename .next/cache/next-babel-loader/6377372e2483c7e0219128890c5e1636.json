{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bonaf\\\\Desktop\\\\Projects\\\\Ecommerce\\\\Malinka\\\\frontend\\\\malinka\\\\client\\\\components\\\\stripe-button\\\\stripe-button.component.jsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport StripeCheckout from 'react-stripe-checkout';\nimport axios from 'axios';\nimport API_URL from '../../routes';\nimport { connect } from 'react-redux';\nimport { clearCart } from '../../src/redux/cart/cart.actions';\n\nconst StripeCheckoutButton = ({\n  price,\n  currentUser,\n  cartItems\n}) => {\n  const order = `${cartItems.map(cartItem => `${cartItem.name}: ${cartItem.quantity}\\n`)}`;\n\n  const onToken = token => {\n    axios({\n      url: 'http://localhost:1337/orders',\n      method: 'post',\n      data: {\n        amount: priceForStripe,\n        status: pending,\n        name: currentUser.email,\n        createdAt: new Date(),\n        OrderDetails: order,\n        token\n      }\n    }).then(response => {\n      alert('Payment successful');\n      console.log(response);\n    }).catch(error => {\n      console.log('Payment error: ', JSON.parse(error));\n      alert('There was an issue with your payment.');\n    });\n  };\n\n  const priceForStripe = price * 100;\n  const publishablekey = 'pk_test_cjTqGCwCgH7H6f2eJRaVcr5R00XHFNsn39';\n  return __jsx(StripeCheckout, {\n    label: \"Pay Now\",\n    name: \"TestShop\",\n    billingAddress: true,\n    shippingAddress: true,\n    description: `Your total is ${price}`,\n    amount: priceForStripe,\n    panelLabel: \"Pay Now\",\n    token: onToken,\n    stripeKey: publishablekey,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  });\n};\n\nconst mapDispatchToProps = dispatch => ({\n  clearCart: () => dispatch(clearCart())\n});\n\nexport default connect(null, mapDispatchToProps)(StripeCheckoutButton);","map":{"version":3,"sources":["C:/Users/bonaf/Desktop/Projects/Ecommerce/Malinka/frontend/malinka/client/components/stripe-button/stripe-button.component.jsx"],"names":["React","StripeCheckout","axios","API_URL","connect","clearCart","StripeCheckoutButton","price","currentUser","cartItems","order","map","cartItem","name","quantity","onToken","token","url","method","data","amount","priceForStripe","status","pending","email","createdAt","Date","OrderDetails","then","response","alert","console","log","catch","error","JSON","parse","publishablekey","mapDispatchToProps","dispatch"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,uBAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,cAApB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,SAAR,QAAwB,mCAAxB;;AAEA,MAAMC,oBAAoB,GAAG,CAAE;AAAEC,EAAAA,KAAF;AAASC,EAAAA,WAAT;AAAsBC,EAAAA;AAAtB,CAAF,KAAyC;AAClE,QAAMC,KAAK,GAAI,GAAED,SAAS,CAACE,GAAV,CAAcC,QAAQ,IAAG,GAAEA,QAAQ,CAACC,IAAK,KAAID,QAAQ,CAACE,QAAS,IAA/D,CAAoE,EAArF;;AACA,QAAMC,OAAO,GAAGC,KAAK,IAAI;AACrBd,IAAAA,KAAK,CAAC;AACFe,MAAAA,GAAG,EAAE,8BADH;AAEFC,MAAAA,MAAM,EAAE,MAFN;AAGFC,MAAAA,IAAI,EAAE;AACFC,QAAAA,MAAM,EAAEC,cADN;AAEFC,QAAAA,MAAM,EAAEC,OAFN;AAGFV,QAAAA,IAAI,EAAEL,WAAW,CAACgB,KAHhB;AAIFC,QAAAA,SAAS,EAAE,IAAIC,IAAJ,EAJT;AAKFC,QAAAA,YAAY,EAAEjB,KALZ;AAMFM,QAAAA;AANE;AAHJ,KAAD,CAAL,CAWGY,IAXH,CAWQC,QAAQ,IAAI;AAChBC,MAAAA,KAAK,CAAC,oBAAD,CAAL;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AACH,KAdD,EAcGI,KAdH,CAcSC,KAAK,IAAI;AACdH,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BG,IAAI,CAACC,KAAL,CAAWF,KAAX,CAA/B;AACAJ,MAAAA,KAAK,CAAC,uCAAD,CAAL;AACH,KAjBD;AAkBH,GAnBD;;AAqBA,QAAMT,cAAc,GAAGd,KAAK,GAAG,GAA/B;AAEA,QAAM8B,cAAc,GAAG,4CAAvB;AACA,SACI,MAAC,cAAD;AACI,IAAA,KAAK,EAAG,SADZ;AAEI,IAAA,IAAI,EAAG,UAFX;AAGI,IAAA,cAAc,MAHlB;AAII,IAAA,eAAe,MAJnB;AAKI,IAAA,WAAW,EAAK,iBAAgB9B,KAAM,EAL1C;AAMI,IAAA,MAAM,EAAIc,cANd;AAOI,IAAA,UAAU,EAAC,SAPf;AAQI,IAAA,KAAK,EAAEN,OARX;AASI,IAAA,SAAS,EAAEsB,cATf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAaH,CAvCD;;AA0CA,MAAMC,kBAAkB,GAAGC,QAAQ,KAAI;AACnClC,EAAAA,SAAS,EAAE,MAAMkC,QAAQ,CAAClC,SAAS,EAAV;AADU,CAAJ,CAAnC;;AAIA,eAAeD,OAAO,CAAC,IAAD,EAAOkC,kBAAP,CAAP,CAAkChC,oBAAlC,CAAf","sourcesContent":["import React from 'react';\r\nimport StripeCheckout from 'react-stripe-checkout';\r\nimport axios from 'axios';\r\nimport API_URL from '../../routes';\r\nimport {connect} from 'react-redux';\r\nimport {clearCart} from '../../src/redux/cart/cart.actions'\r\n\r\nconst StripeCheckoutButton = ( { price, currentUser, cartItems } ) => {\r\n    const order = `${cartItems.map(cartItem=>`${cartItem.name}: ${cartItem.quantity}\\n`)}`\r\n    const onToken = token => {\r\n        axios({\r\n            url: 'http://localhost:1337/orders',\r\n            method: 'post',\r\n            data: {\r\n                amount: priceForStripe,\r\n                status: pending,\r\n                name: currentUser.email,\r\n                createdAt: new Date(),\r\n                OrderDetails: order,\r\n                token\r\n            }\r\n        }).then(response => {\r\n            alert('Payment successful')\r\n            console.log(response)\r\n        }).catch(error => {\r\n            console.log('Payment error: ', JSON.parse(error))\r\n            alert('There was an issue with your payment.')\r\n        })\r\n    }\r\n\r\n    const priceForStripe = price * 100\r\n    \t\r\n    const publishablekey = 'pk_test_cjTqGCwCgH7H6f2eJRaVcr5R00XHFNsn39'\r\n    return (\r\n        <StripeCheckout \r\n            label = 'Pay Now'\r\n            name = 'TestShop'\r\n            billingAddress\r\n            shippingAddress\r\n            description = {`Your total is ${price}`}\r\n            amount = {priceForStripe}\r\n            panelLabel='Pay Now'\r\n            token={onToken}\r\n            stripeKey={publishablekey}\r\n        />\r\n    )\r\n}\r\n\r\n\r\nconst mapDispatchToProps = dispatch=> ({\r\n    clearCart: () => dispatch(clearCart())\r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(StripeCheckoutButton)"]},"metadata":{},"sourceType":"module"}