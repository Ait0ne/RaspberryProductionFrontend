{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport logger from 'redux-logger';\nimport persistReducer from './root-reducer';\nimport { createWrapper } from 'next-redux-wrapper';\nimport { persistStore } from 'redux-persist';\nconst middlewares = [logger]; // const makestore = context => createStore(persistReducer,applyMiddleware(...middlewares));\n\nconst makeConfiguredStore = reducer => createStore(reducer, applyMiddleware(logger));\n\nconst makestore = context => {\n  const store = makeConfiguredStore(persistReducer);\n  store.__persistor = persistStore(store);\n  return store;\n};\n\nconst wrapper = createWrapper(makestore, {\n  debug: true\n});\nexport default wrapper;","map":{"version":3,"sources":["C:/Users/bonaf/Desktop/Projects/Ecommerce/Malinka/frontend/malinka/src/redux/store.js"],"names":["createStore","applyMiddleware","logger","persistReducer","createWrapper","persistStore","middlewares","makeConfiguredStore","reducer","makestore","context","store","__persistor","wrapper","debug"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,cAAP,MAA2B,gBAA3B;AACA,SAAQC,aAAR,QAA4B,oBAA5B;AACA,SAAQC,YAAR,QAA2B,eAA3B;AAEA,MAAMC,WAAW,GAAG,CAACJ,MAAD,CAApB,C,CAEA;;AAEA,MAAMK,mBAAmB,GAAIC,OAAD,IACxBR,WAAW,CAACQ,OAAD,EAAUP,eAAe,CAACC,MAAD,CAAzB,CADf;;AAGA,MAAMO,SAAS,GAAIC,OAAD,IAAa;AAGvB,QAAMC,KAAK,GAAGJ,mBAAmB,CAACJ,cAAD,CAAjC;AAEAQ,EAAAA,KAAK,CAACC,WAAN,GAAoBP,YAAY,CAACM,KAAD,CAAhC;AAEA,SAAOA,KAAP;AAEP,CATD;;AAaA,MAAME,OAAO,GAAGT,aAAa,CAACK,SAAD,EAAY;AAACK,EAAAA,KAAK,EAAE;AAAR,CAAZ,CAA7B;AAEA,eAAeD,OAAf","sourcesContent":["import { createStore, applyMiddleware } from 'redux';\r\nimport logger from 'redux-logger';\r\nimport persistReducer from './root-reducer';\r\nimport {createWrapper} from 'next-redux-wrapper';\r\nimport {persistStore} from 'redux-persist';\r\n\r\nconst middlewares = [logger];\r\n\r\n// const makestore = context => createStore(persistReducer,applyMiddleware(...middlewares));\r\n\r\nconst makeConfiguredStore = (reducer) =>\r\n    createStore(reducer, applyMiddleware(logger));\r\n\r\nconst makestore = (context) => {\r\n\r\n\r\n        const store = makeConfiguredStore(persistReducer);\r\n\r\n        store.__persistor = persistStore(store); \r\n\r\n        return store;\r\n\r\n};\r\n\r\n\r\n\r\nconst wrapper = createWrapper(makestore, {debug: true});\r\n\r\nexport default wrapper;"]},"metadata":{},"sourceType":"module"}