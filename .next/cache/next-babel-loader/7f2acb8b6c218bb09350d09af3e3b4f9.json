{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\bonaf\\\\Desktop\\\\Projects\\\\Ecommerce\\\\Malinka\\\\frontend\\\\malinka\\\\components\\\\cart-dropdown\\\\cart-dropdown.component.jsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useEffect, useRef } from 'react';\nimport Router from 'next/router';\nimport { connect } from 'react-redux';\nimport { toggleCartHidden as _toggleCartHidden } from '../../src/redux/cart/cart.actions';\nimport ScrollBar from 'react-scrollbars-custom';\nimport CartItem from '../cart-item/cart-item.component';\nimport ReactDOM from 'react-dom';\n\nvar CartDropdown = function CartDropdown(_ref) {\n  _s();\n\n  var cartItems = _ref.cartItems,\n      toggleCartHidden = _ref.toggleCartHidden,\n      total = _ref.total;\n  var dropdown = useRef(null);\n  useEffect(function () {\n    dropdown.current.focus();\n  });\n  return __jsx(\"div\", {\n    className: \"cart-dropdown\",\n    onBlur: function onBlur() {\n      return toggleCartHidden();\n    },\n    tabIndex: \"0\",\n    ref: dropdown,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }, __jsx(ScrollBar, {\n    style: {\n      height: '280px',\n      width: '240px'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"cart-items\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 17\n    }\n  }, cartItems.length ? cartItems.map(function (cartItem) {\n    return __jsx(CartItem, {\n      key: cartItem.id,\n      cartItem: cartItem,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 51\n      }\n    });\n  }) : __jsx(\"span\", {\n    className: \"empty-message\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 25\n    }\n  }, \"Your cart is empty\"))), __jsx(\"span\", {\n    className: \"cart-dropdown-total\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }\n  }, \"Total: $\", total), __jsx(\"button\", {\n    className: \"checkout-button\",\n    type: \"button\",\n    onClick: function onClick() {\n      Router.push('/checkout');\n      toggleCartHidden();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }, \"GO TO CHECKOUT\"));\n};\n\n_s(CartDropdown, \"oEql9k6VaEeCBYyABqSWphJKZGE=\");\n\n_c = CartDropdown;\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    cartItems: state.cart.cartItems,\n    total: state.cart.cartItems.reduce(function (sum, cartItem) {\n      return sum + cartItem.price * cartItem.quantity;\n    }, 0)\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    toggleCartHidden: function toggleCartHidden() {\n      return dispatch(_toggleCartHidden());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CartDropdown);\n\nvar _c;\n\n$RefreshReg$(_c, \"CartDropdown\");","map":{"version":3,"sources":["C:/Users/bonaf/Desktop/Projects/Ecommerce/Malinka/frontend/malinka/components/cart-dropdown/cart-dropdown.component.jsx"],"names":["React","useEffect","useRef","Router","connect","toggleCartHidden","ScrollBar","CartItem","ReactDOM","CartDropdown","cartItems","total","dropdown","current","focus","height","width","length","map","cartItem","id","push","mapStateToProps","state","cart","reduce","sum","price","quantity","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, {useEffect, useRef} from 'react';\r\nimport Router from 'next/router';\r\nimport {connect} from 'react-redux';\r\nimport {toggleCartHidden}  from '../../src/redux/cart/cart.actions';\r\nimport ScrollBar from 'react-scrollbars-custom';\r\nimport CartItem from '../cart-item/cart-item.component';\r\nimport ReactDOM from 'react-dom'\r\n\r\nconst CartDropdown = ({cartItems,toggleCartHidden, total}) => {\r\n    const dropdown = useRef(null)\r\n    useEffect(()=> {\r\n        dropdown.current.focus()\r\n    })\r\n\r\n    return (\r\n        <div className='cart-dropdown' onBlur={()=> toggleCartHidden()}  tabIndex='0' ref={dropdown}>\r\n            <ScrollBar  style={{height:'280px', width: '240px'}}>\r\n                <div className='cart-items' >\r\n                    {   cartItems.length ?\r\n                        cartItems.map(cartItem => <CartItem key={cartItem.id} cartItem={cartItem}/>)\r\n                        : \r\n                        <span className='empty-message'>Your cart is empty</span>\r\n                    }\r\n                </div>\r\n            </ScrollBar>\r\n                <span className='cart-dropdown-total'>Total: ${total}</span>\r\n            <button \r\n            className='checkout-button' \r\n            type='button'\r\n            onClick={() => {\r\n                Router.push('/checkout')\r\n                toggleCartHidden()\r\n            }}\r\n            >\r\n                GO TO CHECKOUT\r\n            </button> \r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    cartItems: state.cart.cartItems,\r\n    total: state.cart.cartItems.reduce((sum, cartItem) => \r\n    sum + cartItem.price*cartItem.quantity, 0\r\n    )\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    toggleCartHidden: () => dispatch(toggleCartHidden())\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(CartDropdown);"]},"metadata":{},"sourceType":"module"}