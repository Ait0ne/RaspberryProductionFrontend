{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\bonaf\\\\Desktop\\\\Projects\\\\Ecommerce\\\\Malinka\\\\frontend\\\\malinka\\\\client\\\\components\\\\cart-item\\\\cart-item.component.jsx\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { connect } from 'react-redux';\nimport { addItem as _addItem, removeItem as _removeItem, clearItemFromCart as _clearItemFromCart } from '../../src/redux/cart/cart.actions';\nimport API_URL, { UPLOAD_URL } from '../../routes';\nimport Link from 'next/link';\n\nvar CartItem = function CartItem(_ref) {\n  var cartItem = _ref.cartItem,\n      addItem = _ref.addItem,\n      removeItem = _ref.removeItem,\n      clearItemFromCart = _ref.clearItemFromCart;\n  return __jsx(\"div\", {\n    className: \"cart-item\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"cart-item-image-container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }\n  }, __jsx(\"img\", {\n    className: \"cart-item-image\",\n    alt: \"item-image\",\n    src: \"\".concat(UPLOAD_URL).concat(cartItem.gallery[0].formats.thumbnail.url),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 17\n    }\n  })), __jsx(\"div\", {\n    className: \"cart-item-content\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }\n  }, __jsx(Link, {\n    href: \"/itemgallery/[item]\",\n    as: \"/itemgallery/\".concat(cartItem.id),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 17\n    }\n  }, __jsx(\"span\", {\n    className: \"cart-item-name\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 85\n    }\n  }, cartItem.name)), __jsx(\"div\", {\n    className: \"cart-item-quantity\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 17\n    }\n  }, __jsx(\"div\", {\n    className: \"cart-item-arrow\",\n    onClick: function onClick() {\n      return removeItem(cartItem);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 21\n    }\n  }, \"\\u276E\"), __jsx(\"span\", {\n    className: \"cart-item-value\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 21\n    }\n  }, cartItem.quantity), __jsx(\"div\", {\n    className: \"cart-item-arrow\",\n    onClick: function onClick() {\n      return addItem(cartItem);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 21\n    }\n  }, \"\\u276F\"), __jsx(\"span\", {\n    className: \"cart-item-price\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 21\n    }\n  }, \"$\", cartItem.price), __jsx(\"div\", {\n    className: \"cart-item-remove-button\",\n    onClick: function onClick() {\n      return setTimeout(function () {\n        return clearItemFromCart(cartItem);\n      }, 100);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 21\n    }\n  }, \"\\u2715\"))));\n};\n\n_c = CartItem;\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    addItem: function addItem(item) {\n      return dispatch(_addItem(item));\n    },\n    removeItem: function removeItem(item) {\n      return dispatch(_removeItem(item));\n    },\n    clearItemFromCart: function clearItemFromCart(item) {\n      return dispatch(_clearItemFromCart(item));\n    }\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(CartItem);\n\nvar _c;\n\n$RefreshReg$(_c, \"CartItem\");","map":{"version":3,"sources":["C:/Users/bonaf/Desktop/Projects/Ecommerce/Malinka/frontend/malinka/client/components/cart-item/cart-item.component.jsx"],"names":["connect","addItem","removeItem","clearItemFromCart","API_URL","UPLOAD_URL","Link","CartItem","cartItem","gallery","formats","thumbnail","url","id","name","quantity","price","setTimeout","mapDispatchToProps","dispatch","item"],"mappings":";;;;;AAAA,SAAQA,OAAR,QAAsB,aAAtB;AACA,SAAQC,OAAO,IAAPA,QAAR,EAAgBC,UAAU,IAAVA,WAAhB,EAA2BC,iBAAiB,IAAjBA,kBAA3B,QAAmD,mCAAnD;AACA,OAAOC,OAAP,IAAiBC,UAAjB,QAAkC,cAAlC;AACA,OAAOC,IAAP,MAAiB,WAAjB;;AAGA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,OAAwD;AAAA,MAAtDC,QAAsD,QAAtDA,QAAsD;AAAA,MAA5CP,OAA4C,QAA5CA,OAA4C;AAAA,MAAnCC,UAAmC,QAAnCA,UAAmC;AAAA,MAAvBC,iBAAuB,QAAvBA,iBAAuB;AACrE,SACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAiC,IAAA,GAAG,EAAC,YAArC;AAAkD,IAAA,GAAG,YAAKE,UAAL,SAAkBG,QAAQ,CAACC,OAAT,CAAiB,CAAjB,EAAoBC,OAApB,CAA4BC,SAA5B,CAAsCC,GAAxD,CAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ,EAKI;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,qBAAX;AAAiC,IAAA,EAAE,yBAAkBJ,QAAQ,CAACK,EAA3B,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoE;AAAM,IAAA,SAAS,EAAC,gBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkCL,QAAQ,CAACM,IAA3C,CAApE,CADJ,EAEI;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAM,IAAA,SAAS,EAAC,iBAAhB;AAAkC,IAAA,OAAO,EAAE;AAAA,aAAMZ,UAAU,CAACM,QAAD,CAAhB;AAAA,KAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAEI;AAAM,IAAA,SAAS,EAAC,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmCA,QAAQ,CAACO,QAA5C,CAFJ,EAGI;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAiC,IAAA,OAAO,EAAE;AAAA,aAAMd,OAAO,CAACO,QAAD,CAAb;AAAA,KAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,EAII;AAAM,IAAA,SAAS,EAAC,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAoCA,QAAQ,CAACQ,KAA7C,CAJJ,EAKI;AAAK,IAAA,SAAS,EAAC,yBAAf;AAAyC,IAAA,OAAO,EAAE;AAAA,aAAMC,UAAU,CAAC;AAAA,eAAMd,iBAAiB,CAACK,QAAD,CAAvB;AAAA,OAAD,EAAmC,GAAnC,CAAhB;AAAA,KAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ,CAFJ,CALJ,CADJ;AAkBH,CAnBD;;KAAMD,Q;;AAsBN,IAAMW,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,QAAQ;AAAA,SAAK;AACpClB,IAAAA,OAAO,EAAE,iBAAAmB,IAAI;AAAA,aAAID,QAAQ,CAAClB,QAAO,CAACmB,IAAD,CAAR,CAAZ;AAAA,KADuB;AAEpClB,IAAAA,UAAU,EAAE,oBAAAkB,IAAI;AAAA,aAAID,QAAQ,CAACjB,WAAU,CAACkB,IAAD,CAAX,CAAZ;AAAA,KAFoB;AAGpCjB,IAAAA,iBAAiB,EAAE,2BAAAiB,IAAI;AAAA,aAAID,QAAQ,CAAChB,kBAAiB,CAACiB,IAAD,CAAlB,CAAZ;AAAA;AAHa,GAAL;AAAA,CAAnC;;AAOA,eAAepB,OAAO,CAAC,IAAD,EAAOkB,kBAAP,CAAP,CAAkCX,QAAlC,CAAf","sourcesContent":["import {connect} from 'react-redux';\r\nimport {addItem,removeItem,clearItemFromCart} from '../../src/redux/cart/cart.actions';\r\nimport API_URL, {UPLOAD_URL} from '../../routes';\r\nimport Link from 'next/link';\r\n\r\n\r\nconst CartItem = ({cartItem, addItem, removeItem, clearItemFromCart}) => {\r\n    return (\r\n        <div className='cart-item'>\r\n            <div className='cart-item-image-container'>\r\n                \r\n                <img className='cart-item-image' alt='item-image' src={`${UPLOAD_URL}${cartItem.gallery[0].formats.thumbnail.url}`}/>\r\n            </div>\r\n            <div className='cart-item-content'>\r\n                <Link href='/itemgallery/[item]' as={`/itemgallery/${cartItem.id}`}><span className='cart-item-name'>{cartItem.name}</span></Link>\r\n                <div className='cart-item-quantity'>\r\n                    <div  className='cart-item-arrow' onClick={() => removeItem(cartItem)}>&#10094;</div>\r\n                    <span className='cart-item-value'>{cartItem.quantity}</span>\r\n                    <div className='cart-item-arrow' onClick={() => addItem(cartItem)}>&#10095;</div>\r\n                    <span className='cart-item-price'>${cartItem.price}</span>\r\n                    <div className='cart-item-remove-button' onClick={() => setTimeout(() => clearItemFromCart(cartItem),100)}>&#10005;</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    addItem: item => dispatch(addItem(item)),\r\n    removeItem: item => dispatch(removeItem(item)),\r\n    clearItemFromCart: item => dispatch(clearItemFromCart(item))\r\n           \r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(CartItem);\r\n\r\n"]},"metadata":{},"sourceType":"module"}