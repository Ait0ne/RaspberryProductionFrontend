{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\bonaf\\\\Desktop\\\\Projects\\\\Ecommerce\\\\Malinka\\\\frontend\\\\malinka\\\\client\\\\components\\\\stripe-button\\\\stripe-button.component.jsx\";\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport StripeCheckout from 'react-stripe-checkout';\nimport axios from 'axios';\nimport API_URL from '../../routes';\nimport { connect } from 'react-redux';\nimport { clearCart as _clearCart } from '../../src/redux/cart/cart.actions';\n\nvar StripeCheckoutButton = function StripeCheckoutButton(_ref) {\n  var price = _ref.price,\n      currentUser = _ref.currentUser,\n      cartItems = _ref.cartItems;\n  var order = \"\".concat(cartItems.map(function (cartItem) {\n    return \"\".concat(cartItem.name, \": \").concat(cartItem.quantity, \"\\n\");\n  }));\n\n  var onToken = function onToken(token) {\n    axios({\n      url: 'payments',\n      method: 'post',\n      data: {\n        amount: priceForStripe,\n        token: token\n      }\n    }).then(function (response) {\n      alert('Payment successful');\n      console.log(response); // fetch(`${API_URL}/orders`, {\n      //     method: 'post',\n      //     headers: {'Content-type': 'application/json'},\n      //     body: JSON.stringify({\n      //         status: pending,\n      //         name: currentUser.email,\n      //         createdAt: new Date(),\n      //         OrderDetails: order\n      //     })\n      //     })\n    })[\"catch\"](function (error) {\n      console.log('Payment error: ', JSON.parse(error));\n      alert('There was an issue with your payment.');\n    });\n  };\n\n  var priceForStripe = price * 100;\n  var publishablekey = 'pk_test_cjTqGCwCgH7H6f2eJRaVcr5R00XHFNsn39';\n  return __jsx(StripeCheckout, {\n    label: \"Pay Now\",\n    name: \"TestShop\",\n    billingAddress: true,\n    shippingAddress: true,\n    description: \"Your total is \".concat(price),\n    amount: priceForStripe,\n    panelLabel: \"Pay Now\",\n    token: onToken,\n    stripeKey: publishablekey,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  });\n};\n\n_c = StripeCheckoutButton;\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    clearCart: function clearCart() {\n      return dispatch(_clearCart());\n    }\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(StripeCheckoutButton);\n\nvar _c;\n\n$RefreshReg$(_c, \"StripeCheckoutButton\");","map":{"version":3,"sources":["C:/Users/bonaf/Desktop/Projects/Ecommerce/Malinka/frontend/malinka/client/components/stripe-button/stripe-button.component.jsx"],"names":["React","StripeCheckout","axios","API_URL","connect","clearCart","StripeCheckoutButton","price","currentUser","cartItems","order","map","cartItem","name","quantity","onToken","token","url","method","data","amount","priceForStripe","then","response","alert","console","log","error","JSON","parse","publishablekey","mapDispatchToProps","dispatch"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,uBAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,cAApB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,SAAS,IAATA,UAAR,QAAwB,mCAAxB;;AAEA,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,OAAyC;AAAA,MAArCC,KAAqC,QAArCA,KAAqC;AAAA,MAA9BC,WAA8B,QAA9BA,WAA8B;AAAA,MAAjBC,SAAiB,QAAjBA,SAAiB;AAClE,MAAMC,KAAK,aAAMD,SAAS,CAACE,GAAV,CAAc,UAAAC,QAAQ;AAAA,qBAAKA,QAAQ,CAACC,IAAd,eAAuBD,QAAQ,CAACE,QAAhC;AAAA,GAAtB,CAAN,CAAX;;AACA,MAAMC,OAAO,GAAG,SAAVA,OAAU,CAAAC,KAAK,EAAI;AACrBd,IAAAA,KAAK,CAAC;AACFe,MAAAA,GAAG,EAAE,UADH;AAEFC,MAAAA,MAAM,EAAE,MAFN;AAGFC,MAAAA,IAAI,EAAE;AACFC,QAAAA,MAAM,EAAEC,cADN;AAEFL,QAAAA,KAAK,EAALA;AAFE;AAHJ,KAAD,CAAL,CAOGM,IAPH,CAOQ,UAAAC,QAAQ,EAAI;AAChBC,MAAAA,KAAK,CAAC,oBAAD,CAAL;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ,EAFgB,CAGhB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH,KApBD,WAoBS,UAAAI,KAAK,EAAI;AACdF,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BE,IAAI,CAACC,KAAL,CAAWF,KAAX,CAA/B;AACAH,MAAAA,KAAK,CAAC,uCAAD,CAAL;AACH,KAvBD;AAwBH,GAzBD;;AA2BA,MAAMH,cAAc,GAAGd,KAAK,GAAG,GAA/B;AAEA,MAAMuB,cAAc,GAAG,4CAAvB;AACA,SACI,MAAC,cAAD;AACI,IAAA,KAAK,EAAG,SADZ;AAEI,IAAA,IAAI,EAAG,UAFX;AAGI,IAAA,cAAc,MAHlB;AAII,IAAA,eAAe,MAJnB;AAKI,IAAA,WAAW,0BAAqBvB,KAArB,CALf;AAMI,IAAA,MAAM,EAAIc,cANd;AAOI,IAAA,UAAU,EAAC,SAPf;AAQI,IAAA,KAAK,EAAEN,OARX;AASI,IAAA,SAAS,EAAEe,cATf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAaH,CA7CD;;KAAMxB,oB;;AAgDN,IAAMyB,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,QAAQ;AAAA,SAAI;AACnC3B,IAAAA,SAAS,EAAE;AAAA,aAAM2B,QAAQ,CAAC3B,UAAS,EAAV,CAAd;AAAA;AADwB,GAAJ;AAAA,CAAnC;;AAIA,eAAeD,OAAO,CAAC,IAAD,EAAO2B,kBAAP,CAAP,CAAkCzB,oBAAlC,CAAf","sourcesContent":["import React from 'react';\r\nimport StripeCheckout from 'react-stripe-checkout';\r\nimport axios from 'axios';\r\nimport API_URL from '../../routes';\r\nimport {connect} from 'react-redux';\r\nimport {clearCart} from '../../src/redux/cart/cart.actions'\r\n\r\nconst StripeCheckoutButton = ( { price, currentUser, cartItems } ) => {\r\n    const order = `${cartItems.map(cartItem=>`${cartItem.name}: ${cartItem.quantity}\\n`)}`\r\n    const onToken = token => {\r\n        axios({\r\n            url: 'payments',\r\n            method: 'post',\r\n            data: {\r\n                amount: priceForStripe,\r\n                token\r\n            }\r\n        }).then(response => {\r\n            alert('Payment successful')\r\n            console.log(response)\r\n            // fetch(`${API_URL}/orders`, {\r\n            //     method: 'post',\r\n            //     headers: {'Content-type': 'application/json'},\r\n            //     body: JSON.stringify({\r\n            //         status: pending,\r\n            //         name: currentUser.email,\r\n            //         createdAt: new Date(),\r\n            //         OrderDetails: order\r\n            //     })\r\n            //     })\r\n        }).catch(error => {\r\n            console.log('Payment error: ', JSON.parse(error))\r\n            alert('There was an issue with your payment.')\r\n        })\r\n    }\r\n\r\n    const priceForStripe = price * 100\r\n    \t\r\n    const publishablekey = 'pk_test_cjTqGCwCgH7H6f2eJRaVcr5R00XHFNsn39'\r\n    return (\r\n        <StripeCheckout \r\n            label = 'Pay Now'\r\n            name = 'TestShop'\r\n            billingAddress\r\n            shippingAddress\r\n            description = {`Your total is ${price}`}\r\n            amount = {priceForStripe}\r\n            panelLabel='Pay Now'\r\n            token={onToken}\r\n            stripeKey={publishablekey}\r\n        />\r\n    )\r\n}\r\n\r\n\r\nconst mapDispatchToProps = dispatch=> ({\r\n    clearCart: () => dispatch(clearCart())\r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(StripeCheckoutButton)"]},"metadata":{},"sourceType":"module"}