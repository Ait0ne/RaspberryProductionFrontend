{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bonaf\\\\Desktop\\\\Projects\\\\Ecommerce\\\\Malinka\\\\frontend\\\\malinka\\\\pages\\\\itemgallery\\\\[item].js\";\nvar __jsx = React.createElement;\nimport React, { useState, Fragment } from 'react';\nimport { useRouter } from 'next/router';\nimport API_URL from '../../routes';\nimport { addMultipleItems } from '../../src/redux/cart/cart.actions';\nimport { connect } from 'react-redux';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faAngleUp, faAngleDown } from '@fortawesome/free-solid-svg-icons';\nimport Footer from '../../components/Footer/footer.component';\nimport Scrollbar from 'react-scrollbars-custom';\n\nconst ItemPage = ({\n  item,\n  addMultipleItems\n}) => {\n  const {\n    0: quantity,\n    1: setQuantity\n  } = useState(1);\n  const {\n    0: currentImage,\n    1: setCurrentImage\n  } = useState(0);\n\n  const onIncrease = () => {\n    setQuantity(quantity + 1);\n  };\n\n  const onDecrease = () => {\n    if (quantity === 1) {\n      null;\n    } else {\n      setQuantity(quantity - 1);\n    }\n  };\n\n  return __jsx(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"item-details-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }\n  }, console.log(item), __jsx(\"div\", {\n    className: \"item-details\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 21\n    }\n  }, __jsx(\"div\", {\n    className: \"item-details-gallery\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 25\n    }\n  }, __jsx(\"div\", {\n    className: \"item-details-main-image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 29\n    }\n  }, __jsx(\"img\", {\n    alt: \"product-image\",\n    className: \"item-details-main-image-image\",\n    src: `${API_URL}${item.gallery[currentImage].url}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 33\n    }\n  })), __jsx(\"div\", {\n    className: \"item-details-thumbnails\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 29\n    }\n  }, item.gallery.slice(0, 3).map((image, index) => __jsx(\"img\", {\n    key: image.id,\n    className: \"item-details-thumbnails-image\",\n    alt: \"image-thumbnail\",\n    src: `${API_URL}${image.formats.thumbnail.url}`,\n    onClick: () => setCurrentImage(index),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 37\n    }\n  })))), __jsx(\"div\", {\n    className: \"item-details-text-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 25\n    }\n  }, __jsx(\"div\", {\n    className: \"item-details-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 29\n    }\n  }, item.name), __jsx(\"div\", {\n    className: \"item-details-price\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 29\n    }\n  }, __jsx(\"span\", {\n    className: \"item-details-previous-price\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 33\n    }\n  }, item.price * 1.2), __jsx(\"span\", {\n    className: \"item-details-current-price\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 33\n    }\n  }, item.price)), __jsx(\"div\", {\n    className: \"item-details-description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 29\n    }\n  }, item.description), __jsx(\"div\", {\n    className: \"item-details-categories\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 29\n    }\n  }, \"CATEGORIES: \", item.categories.map((category, index) => __jsx(\"span\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 77\n    }\n  }, category.name, \" \"))), __jsx(\"div\", {\n    className: \"item-details-add-to-cart\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 29\n    }\n  }, __jsx(\"div\", {\n    className: \"item-details-quantity\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 33\n    }\n  }, __jsx(\"div\", {\n    className: \"item-details-quantity-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 33\n    }\n  }, quantity), __jsx(\"div\", {\n    className: \"item-details-quantity-navigation\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 37\n    }\n  }, __jsx(\"div\", {\n    className: \"item-details-quantity-arrows\",\n    onClick: onIncrease,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 41\n    }\n  }, __jsx(FontAwesomeIcon, {\n    icon: faAngleUp,\n    size: \"lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 108\n    }\n  })), __jsx(\"div\", {\n    className: \"item-details-quantity-arrows\",\n    onClick: onDecrease,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 41\n    }\n  }, __jsx(FontAwesomeIcon, {\n    icon: faAngleDown,\n    size: \"lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 108\n    }\n  })))), __jsx(\"button\", {\n    type: \"button\",\n    className: \"item-details-add-to-cart-button\",\n    onClick: () => addMultipleItems([item, quantity]),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 33\n    }\n  }, \"ADD TO CART\")), __jsx(\"div\", {\n    className: \"item-comment-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 29\n    }\n  }, __jsx(Scrollbar, {\n    style: {\n      height: '280px',\n      width: '80%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 33\n    }\n  }, item.comments.map(comment => {\n    return __jsx(\"div\", {\n      key: comment.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 45\n      }\n    }, __jsx(\"div\", {\n      className: \"item-comment-name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 49\n      }\n    }, comment.name), __jsx(\"div\", {\n      className: \"item-comment-date\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 49\n      }\n    }, comment.date), __jsx(\"div\", {\n      className: \"item-comment-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 49\n      }\n    }, comment.text));\n  })))))), __jsx(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 17\n    }\n  }));\n};\n\nItemPage.getInitialProps = async ({\n  query\n}) => {\n  const resBouqet = await fetch(`${API_URL}/bouquets/${query.item}`);\n  const dataBouqet = await resBouqet.json();\n  return {\n    item: dataBouqet\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  addMultipleItems: item => dispatch(addMultipleItems(item))\n}); // export async function getServerSideProps(){\n//         const resBouqet = await fetch(`${API_URL}/bouquets/12`)\n//         const item = await resBouqet.json()\n//         return {props: {item}}\n//     }    \n\n\nexport default connect(null, mapDispatchToProps)(ItemPage);","map":{"version":3,"sources":["C:/Users/bonaf/Desktop/Projects/Ecommerce/Malinka/frontend/malinka/pages/itemgallery/[item].js"],"names":["React","useState","Fragment","useRouter","API_URL","addMultipleItems","connect","FontAwesomeIcon","faAngleUp","faAngleDown","Footer","Scrollbar","ItemPage","item","quantity","setQuantity","currentImage","setCurrentImage","onIncrease","onDecrease","console","log","gallery","url","slice","map","image","index","id","formats","thumbnail","name","price","description","categories","category","height","width","comments","comment","date","text","getInitialProps","query","resBouqet","fetch","dataBouqet","json","mapDispatchToProps","dispatch"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,QAAzB,QAAwC,OAAxC;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,OAAP,MAAoB,cAApB;AACA,SAAQC,gBAAR,QAA+B,mCAA/B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,eAAR,QAA8B,gCAA9B;AACA,SAAQC,SAAR,EAAmBC,WAAnB,QAAqC,mCAArC;AACA,OAAOC,MAAP,MAAoB,0CAApB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;;AAEA,MAAMC,QAAQ,GAAE,CAAC;AAACC,EAAAA,IAAD;AAAOR,EAAAA;AAAP,CAAD,KAA8B;AAEtC,QAAM;AAAA,OAACS,QAAD;AAAA,OAAWC;AAAX,MAA0Bd,QAAQ,CAAC,CAAD,CAAxC;AACA,QAAM;AAAA,OAACe,YAAD;AAAA,OAAeC;AAAf,MAAkChB,QAAQ,CAAC,CAAD,CAAhD;;AAEA,QAAMiB,UAAU,GAAG,MAAM;AACrBH,IAAAA,WAAW,CAACD,QAAQ,GAAC,CAAV,CAAX;AACH,GAFD;;AAIA,QAAMK,UAAU,GAAG,MAAM;AACrB,QAAIL,QAAQ,KAAG,CAAf,EAAkB;AACd;AACH,KAFD,MAEO;AACHC,MAAAA,WAAW,CAACD,QAAQ,GAAC,CAAV,CAAX;AACH;AACJ,GAND;;AAQA,SACI,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKM,OAAO,CAACC,GAAR,CAAYR,IAAZ,CADL,EAEI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAM,IAAA,GAAG,EAAC,eAAV;AAA0B,IAAA,SAAS,EAAC,+BAApC;AAAoE,IAAA,GAAG,EAAG,GAAET,OAAQ,GAAES,IAAI,CAACS,OAAL,CAAaN,YAAb,EAA2BO,GAAI,EAArH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,EAII;AAAK,IAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKV,IAAI,CAACS,OAAL,CAAaE,KAAb,CAAmB,CAAnB,EAAqB,CAArB,EAAwBC,GAAxB,CAA4B,CAACC,KAAD,EAAOC,KAAP,KACzB;AAAK,IAAA,GAAG,EAAED,KAAK,CAACE,EAAhB;AACA,IAAA,SAAS,EAAC,+BADV;AAEA,IAAA,GAAG,EAAC,iBAFJ;AAGA,IAAA,GAAG,EAAG,GAAExB,OAAQ,GAAEsB,KAAK,CAACG,OAAN,CAAcC,SAAd,CAAwBP,GAAI,EAH9C;AAIA,IAAA,OAAO,EAAE,MAAMN,eAAe,CAACU,KAAD,CAJ9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,CADL,CAJJ,CADJ,EAgBI;AAAK,IAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKd,IAAI,CAACkB,IADV,CADJ,EAII;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAM,IAAA,SAAS,EAAC,6BAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+ClB,IAAI,CAACmB,KAAL,GAAW,GAA1D,CADJ,EAEI;AAAM,IAAA,SAAS,EAAC,4BAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8CnB,IAAI,CAACmB,KAAnD,CAFJ,CAJJ,EAQI;AAAK,IAAA,SAAS,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKnB,IAAI,CAACoB,WADV,CARJ,EAWI;AAAK,IAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEQpB,IAAI,CAACqB,UAAL,CAAgBT,GAAhB,CAAoB,CAACU,QAAD,EAAUR,KAAV,KAAoB;AAAM,IAAA,GAAG,EAAEA,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmBQ,QAAQ,CAACJ,IAA5B,MAAxC,CAFR,CAXJ,EAgBI;AAAK,IAAA,SAAS,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAK,IAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6CjB,QAA7C,CADA,EAEI;AAAK,IAAA,SAAS,EAAC,kCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,8BAAf;AAA8C,IAAA,OAAO,EAAEI,UAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmE,MAAC,eAAD;AAAiB,IAAA,IAAI,EAAEV,SAAvB;AAAkC,IAAA,IAAI,EAAC,IAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAnE,CADJ,EAEI;AAAK,IAAA,SAAS,EAAC,8BAAf;AAA8C,IAAA,OAAO,EAAEW,UAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmE,MAAC,eAAD;AAAiB,IAAA,IAAI,EAAEV,WAAvB;AAAoC,IAAA,IAAI,EAAC,IAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAnE,CAFJ,CAFJ,CADJ,EAQI;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,SAAS,EAAC,iCAAhC;AAAkE,IAAA,OAAO,EAAE,MAAMJ,gBAAgB,CAAC,CAACQ,IAAD,EAAMC,QAAN,CAAD,CAAjG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBARJ,CAhBJ,EA4BI;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,SAAD;AAAW,IAAA,KAAK,EAAE;AAACsB,MAAAA,MAAM,EAAC,OAAR;AAAiBC,MAAAA,KAAK,EAAE;AAAxB,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKxB,IAAI,CAACyB,QAAL,CAAcb,GAAd,CAAmBc,OAAD,IAAa;AAC5B,WACI;AAAK,MAAA,GAAG,EAAEA,OAAO,CAACX,EAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKW,OAAO,CAACR,IADb,CADJ,EAII;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKQ,OAAO,CAACC,IADb,CAJJ,EAOI;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKD,OAAO,CAACE,IADb,CAPJ,CADJ;AAeH,GAhBA,CADL,CADJ,CA5BJ,CAhBJ,CAFJ,CADJ,EAuEI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAvEJ,CADJ;AA2EH,CA5FL;;AA8FA7B,QAAQ,CAAC8B,eAAT,GAA2B,OAAO;AAACC,EAAAA;AAAD,CAAP,KAAmB;AAC1C,QAAMC,SAAS,GAAG,MAAMC,KAAK,CAAE,GAAEzC,OAAQ,aAAYuC,KAAK,CAAC9B,IAAK,EAAnC,CAA7B;AACA,QAAMiC,UAAU,GAAG,MAAMF,SAAS,CAACG,IAAV,EAAzB;AACA,SAAO;AAAClC,IAAAA,IAAI,EAAEiC;AAAP,GAAP;AACH,CAJD;;AAMA,MAAME,kBAAkB,GAAGC,QAAQ,KAAK;AACpC5C,EAAAA,gBAAgB,EAAEQ,IAAI,IAAIoC,QAAQ,CAAC5C,gBAAgB,CAACQ,IAAD,CAAjB;AADE,CAAL,CAAnC,C,CAIA;AACA;AACA;AACA;AAEA;;;AAEA,eAAeP,OAAO,CAAC,IAAD,EAAO0C,kBAAP,CAAP,CAAkCpC,QAAlC,CAAf","sourcesContent":["import React, {useState, Fragment} from 'react';\r\nimport { useRouter } from 'next/router';\r\nimport API_URL from '../../routes';\r\nimport {addMultipleItems} from '../../src/redux/cart/cart.actions';\r\nimport {connect} from 'react-redux';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {faAngleUp, faAngleDown} from '@fortawesome/free-solid-svg-icons';\r\nimport Footer  from '../../components/Footer/footer.component';\r\nimport Scrollbar from 'react-scrollbars-custom';\r\n\r\nconst ItemPage =({item, addMultipleItems}) => {\r\n\r\n        const [quantity, setQuantity] = useState(1)\r\n        const [currentImage, setCurrentImage] = useState(0)\r\n\r\n        const onIncrease = () => {\r\n            setQuantity(quantity+1)\r\n        }\r\n\r\n        const onDecrease = () => {\r\n            if (quantity===1) {\r\n                null\r\n            } else {\r\n                setQuantity(quantity-1)\r\n            }\r\n        }\r\n\r\n        return (\r\n            <Fragment>\r\n                <div className='item-details-container'>\r\n                    {console.log(item)}\r\n                    <div className='item-details'>\r\n                        <div className='item-details-gallery'>\r\n                            <div className='item-details-main-image'>\r\n                                <img  alt='product-image' className='item-details-main-image-image' src={`${API_URL}${item.gallery[currentImage].url}`} />\r\n                            </div>\r\n                            <div className='item-details-thumbnails'>\r\n                                {item.gallery.slice(0,3).map((image,index) => \r\n                                    <img key={image.id} \r\n                                    className='item-details-thumbnails-image' \r\n                                    alt='image-thumbnail' \r\n                                    src={`${API_URL}${image.formats.thumbnail.url}`}\r\n                                    onClick={() => setCurrentImage(index)}\r\n                                    />\r\n                                    )}\r\n                            </div>\r\n                        </div>\r\n                        <div className='item-details-text-content'>\r\n                            <div className='item-details-name'>\r\n                                {item.name}\r\n                            </div>\r\n                            <div className='item-details-price'>\r\n                                <span className='item-details-previous-price'>{item.price*1.2}</span>\r\n                                <span className='item-details-current-price'>{item.price}</span>\r\n                            </div>\r\n                            <div className='item-details-description'>\r\n                                {item.description}\r\n                            </div>\r\n                            <div className='item-details-categories'>\r\n                                CATEGORIES: {\r\n                                    item.categories.map((category,index) => <span key={index}>{category.name} </span>)\r\n                                }\r\n                            </div>\r\n                            <div className='item-details-add-to-cart'>\r\n                                <div className='item-details-quantity'>\r\n                                <div className='item-details-quantity-text'>{quantity}</div>\r\n                                    <div className='item-details-quantity-navigation'>\r\n                                        <div className='item-details-quantity-arrows' onClick={onIncrease}><FontAwesomeIcon icon={faAngleUp} size='lg'/></div>\r\n                                        <div className='item-details-quantity-arrows' onClick={onDecrease}><FontAwesomeIcon icon={faAngleDown} size='lg'/></div>\r\n                                    </div>\r\n                                </div>\r\n                                <button type='button' className='item-details-add-to-cart-button' onClick={() => addMultipleItems([item,quantity])}>ADD TO CART</button>\r\n\r\n\r\n                            </div>\r\n                            <div className='item-comment-section'>\r\n                                <Scrollbar style={{height:'280px', width: '80%'}} >\r\n                                    {item.comments.map((comment) => {\r\n                                        return (\r\n                                            <div key={comment.id}>\r\n                                                <div className='item-comment-name'>\r\n                                                    {comment.name}\r\n                                                </div>\r\n                                                <div className='item-comment-date'>\r\n                                                    {comment.date}\r\n                                                </div>\r\n                                                <div className='item-comment-text'>\r\n                                                    {comment.text}\r\n                                                </div>\r\n                                                \r\n                                            </div>\r\n                                        )\r\n\r\n                                    })}\r\n                                </Scrollbar>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <Footer/>\r\n            </Fragment>\r\n        )\r\n    }\r\n\r\nItemPage.getInitialProps = async ({query}) => {\r\n    const resBouqet = await fetch(`${API_URL}/bouquets/${query.item}`)\r\n    const dataBouqet = await resBouqet.json()\r\n    return {item: dataBouqet}\r\n}    \r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    addMultipleItems: item => dispatch(addMultipleItems(item))\r\n})\r\n\r\n// export async function getServerSideProps(){\r\n//         const resBouqet = await fetch(`${API_URL}/bouquets/12`)\r\n//         const item = await resBouqet.json()\r\n//         return {props: {item}}\r\n\r\n//     }    \r\n\r\nexport default connect(null, mapDispatchToProps)(ItemPage);"]},"metadata":{},"sourceType":"module"}