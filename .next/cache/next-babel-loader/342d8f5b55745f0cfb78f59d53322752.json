{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport logger from 'redux-logger';\nimport persistReducer from './root-reducer';\nimport { createWrapper } from 'next-redux-wrapper';\nimport { persistStore } from 'redux-persist';\nconst middlewares = [logger]; // const makestore = context => createStore(persistReducer,applyMiddleware(...middlewares));\n\nconst makeConfiguredStore = reducer => createStore(reducer, applyMiddleware(logger));\n\nconst makestore = (initialState, {\n  isServer,\n  req,\n  debug,\n  storeKey\n}) => {\n  if (isServer) {\n    initialState = initialState;\n    return makeConfiguredStore(persistReducer);\n  } else {\n    const store = makeConfiguredStore(persistedReducer);\n    store.__persistor = persistStore(store); // Nasty hack\n\n    return store;\n  }\n};\n\nconst wrapper = createWrapper(makestore, {\n  debug: true\n});\nexport default wrapper;","map":{"version":3,"sources":["C:/Users/bonaf/Desktop/Projects/Ecommerce/Malinka/frontend/malinka/src/redux/store.js"],"names":["createStore","applyMiddleware","logger","persistReducer","createWrapper","persistStore","middlewares","makeConfiguredStore","reducer","makestore","initialState","isServer","req","debug","storeKey","store","persistedReducer","__persistor","wrapper"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,cAAP,MAA2B,gBAA3B;AACA,SAAQC,aAAR,QAA4B,oBAA5B;AACA,SAAQC,YAAR,QAA2B,eAA3B;AAEA,MAAMC,WAAW,GAAG,CAACJ,MAAD,CAApB,C,CAEA;;AAEA,MAAMK,mBAAmB,GAAIC,OAAD,IACxBR,WAAW,CAACQ,OAAD,EAAUP,eAAe,CAACC,MAAD,CAAzB,CADf;;AAGA,MAAMO,SAAS,GAAG,CAACC,YAAD,EAAe;AAACC,EAAAA,QAAD;AAAWC,EAAAA,GAAX;AAAgBC,EAAAA,KAAhB;AAAuBC,EAAAA;AAAvB,CAAf,KAAoD;AAElE,MAAIH,QAAJ,EAAc;AAEVD,IAAAA,YAAY,GAAGA,YAAf;AAEA,WAAOH,mBAAmB,CAACJ,cAAD,CAA1B;AAEH,GAND,MAMO;AAEH,UAAMY,KAAK,GAAGR,mBAAmB,CAACS,gBAAD,CAAjC;AAEAD,IAAAA,KAAK,CAACE,WAAN,GAAoBZ,YAAY,CAACU,KAAD,CAAhC,CAJG,CAIsC;;AAEzC,WAAOA,KAAP;AACH;AACJ,CAhBD;;AAoBA,MAAMG,OAAO,GAAGd,aAAa,CAACK,SAAD,EAAY;AAACI,EAAAA,KAAK,EAAE;AAAR,CAAZ,CAA7B;AAEA,eAAeK,OAAf","sourcesContent":["import { createStore, applyMiddleware } from 'redux';\r\nimport logger from 'redux-logger';\r\nimport persistReducer from './root-reducer';\r\nimport {createWrapper} from 'next-redux-wrapper';\r\nimport {persistStore} from 'redux-persist';\r\n\r\nconst middlewares = [logger];\r\n\r\n// const makestore = context => createStore(persistReducer,applyMiddleware(...middlewares));\r\n\r\nconst makeConfiguredStore = (reducer) =>\r\n    createStore(reducer, applyMiddleware(logger));\r\n\r\nconst makestore = (initialState, {isServer, req, debug, storeKey}) => {\r\n\r\n    if (isServer) {\r\n\r\n        initialState = initialState \r\n\r\n        return makeConfiguredStore(persistReducer);\r\n\r\n    } else {\r\n\r\n        const store = makeConfiguredStore(persistedReducer);\r\n\r\n        store.__persistor = persistStore(store); // Nasty hack\r\n\r\n        return store;\r\n    }\r\n};\r\n\r\n\r\n\r\nconst wrapper = createWrapper(makestore, {debug: true});\r\n\r\nexport default wrapper;"]},"metadata":{},"sourceType":"module"}