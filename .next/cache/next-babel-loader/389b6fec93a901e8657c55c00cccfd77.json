{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\bonaf\\\\Desktop\\\\Projects\\\\Ecommerce\\\\Malinka\\\\frontend\\\\malinka\\\\components\\\\Chat\\\\chat.component.jsx\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Fragment } from 'react';\nimport AreaInput from '../AreaInput/area-input.component';\nimport { sendMessage } from '../../firebase/firebase.utils';\nimport { connect } from 'react-redux';\nimport { setMessages as _setMessages } from '../../src/redux/chat/chat.actions';\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport { motion } from 'framer-motion';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArrowUp } from '@fortawesome/free-solid-svg-icons';\nimport ClickOutside from '../ClickOutside/ClickOutside.component';\n\nvar Chat = /*#__PURE__*/function (_React$Component) {\n  _inherits(Chat, _React$Component);\n\n  var _super = _createSuper(Chat);\n\n  function Chat() {\n    var _this;\n\n    _classCallCheck(this, Chat);\n\n    _this = _super.call(this);\n\n    _defineProperty(_assertThisInitialized(_this), \"unsubscribe\", function (channel) {\n      if (!firebase.apps.length) {\n        firebase.initializeApp({\n          apiKey: \"AIzaSyABugTRykVjU3cO3nkANbnArtyZ_TPix1Q\",\n          authDomain: \"raspberry-dacc1.firebaseapp.com\",\n          databaseURL: \"https://raspberry-dacc1.firebaseio.com\",\n          projectId: \"raspberry-dacc1\",\n          storageBucket: \"raspberry-dacc1.appspot.com\",\n          messagingSenderId: \"435336134829\",\n          appId: \"1:435336134829:web:36258d0b8bdb9bf9810624\",\n          measurementId: \"G-E4XKDDZNWV\"\n        });\n      }\n\n      firebase.firestore().collection('Chat').doc(\"\".concat(channel)).collection(\"messages\").where('createdAt', '>', 1590246123874).orderBy('createdAt', 'desc').onSnapshot(function (docs) {\n        var messages = [];\n        docs.forEach(function (doc) {\n          messages.push(doc.data());\n        });\n\n        _this.props.setMessages(messages);\n\n        if (_this.props.chatHidden) {\n          _this.props.setNewMessages(true);\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"listener\", /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(event) {\n        var userRef;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!(event.code === \"Enter\" || event.code === \"NumpadEnter\")) {\n                  _context.next = 6;\n                  break;\n                }\n\n                console.log(\"Enter key was pressed. Run your function.\");\n                _context.next = 4;\n                return sendMessage(_this.state.text, _this.props.channel);\n\n              case 4:\n                userRef = _context.sent;\n\n                _this.setState({\n                  text: ''\n                });\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSubmit\", /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(event) {\n        var userRef;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                event.preventDefault();\n                _context2.next = 3;\n                return sendMessage(_this.state.text, _this.props.channel);\n\n              case 3:\n                userRef = _context2.sent;\n\n                _this.setState({\n                  text: ''\n                });\n\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_this), \"handleChange\", function (event) {\n      _this.setState({\n        text: event.target.value\n      });\n    });\n\n    _this.state = {\n      text: ''\n    };\n    return _this;\n  }\n\n  _createClass(Chat, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var channel = this.props.channel;\n      this.unsubscribe(channel);\n      document.addEventListener(\"keydown\", this.listener);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      document.removeEventListener(\"keydown\", this.listener);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          messages = _this$props.messages,\n          channel = _this$props.channel;\n      return __jsx(motion.div, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }\n      }, __jsx(ClickOutside, {\n        onClick: function onClick() {\n          return _this2.props.toggle();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }\n      }, __jsx(motion.div, {\n        className: \"chat-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 17\n        }\n      }, __jsx(\"div\", {\n        className: \"chat-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }\n      }, __jsx(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 25\n        }\n      }, \"Company Name\")), __jsx(\"div\", {\n        className: \"messages-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }\n      }, messages ? messages.map(function (message) {\n        return __jsx(\"div\", {\n          className: \"\".concat(message.user.id === channel ? 'message-user' : 'message-support', \" chat-message\"),\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 48\n          }\n        }, message.text);\n      }) : null), __jsx(\"form\", {\n        onSubmit: this.handleSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }\n      }, __jsx(AreaInput, {\n        className: \"message-box\",\n        name: \"text\",\n        handleChange: this.handleChange,\n        value: this.state.text,\n        placeholder: \"Type your message here...\",\n        required: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 25\n        }\n      }), __jsx(\"button\", {\n        className: \"message-send-button\",\n        type: \"submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 25\n        }\n      }, __jsx(FontAwesomeIcon, {\n        className: \"message-send-button-icon\",\n        icon: faArrowUp,\n        size: \"lg\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 29\n        }\n      }))))));\n    }\n  }]);\n\n  return Chat;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    messages: state.chat.messages,\n    channel: state.chat.channel\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    setMessages: function setMessages(messages) {\n      return dispatch(_setMessages(messages));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Chat);","map":{"version":3,"sources":["C:/Users/bonaf/Desktop/Projects/Ecommerce/Malinka/frontend/malinka/components/Chat/chat.component.jsx"],"names":["React","Fragment","AreaInput","sendMessage","connect","setMessages","firebase","motion","FontAwesomeIcon","faArrowUp","ClickOutside","Chat","channel","apps","length","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","collection","doc","where","orderBy","onSnapshot","docs","messages","forEach","push","data","props","chatHidden","setNewMessages","event","code","console","log","state","text","userRef","setState","preventDefault","target","value","unsubscribe","document","addEventListener","listener","removeEventListener","toggle","map","message","user","id","handleSubmit","handleChange","Component","mapStateToProps","chat","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, {Fragment} from 'react'\r\nimport AreaInput from '../AreaInput/area-input.component';\r\nimport {sendMessage} from '../../firebase/firebase.utils';\r\nimport {connect} from 'react-redux'; \r\nimport {setMessages} from '../../src/redux/chat/chat.actions';\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport {motion} from 'framer-motion';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {faArrowUp} from '@fortawesome/free-solid-svg-icons';\r\nimport ClickOutside from '../ClickOutside/ClickOutside.component'\r\n\r\n\r\n\r\n\r\nclass  Chat extends React.Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            text:'',\r\n        }\r\n    }\r\n\r\n    unsubscribe = (channel) => {\r\n        \r\n            if (!firebase.apps.length) {\r\n                firebase.initializeApp({\r\n                    apiKey: \"AIzaSyABugTRykVjU3cO3nkANbnArtyZ_TPix1Q\",\r\n                    authDomain: \"raspberry-dacc1.firebaseapp.com\",\r\n                    databaseURL: \"https://raspberry-dacc1.firebaseio.com\",\r\n                    projectId: \"raspberry-dacc1\",\r\n                    storageBucket: \"raspberry-dacc1.appspot.com\",\r\n                    messagingSenderId: \"435336134829\",\r\n                    appId: \"1:435336134829:web:36258d0b8bdb9bf9810624\",\r\n                    measurementId: \"G-E4XKDDZNWV\"\r\n                })\r\n            }\r\n                 \r\n            \r\n        \r\n            firebase.firestore().collection('Chat').doc(`${channel}`).collection(`messages`).where('createdAt','>',1590246123874 ).orderBy('createdAt','desc')\r\n            .onSnapshot((docs) => {\r\n                const messages=[] \r\n                docs.forEach(function(doc) {\r\n                    messages.push(doc.data());\r\n                });\r\n                this.props.setMessages(messages)    \r\n                if (this.props.chatHidden) {\r\n                    this.props.setNewMessages(true)\r\n                }       \r\n            })\r\n                        \r\n        \r\n    }\r\n    listener = async event => {\r\n        if (event.code === \"Enter\" || event.code === \"NumpadEnter\") {\r\n          console.log(\"Enter key was pressed. Run your function.\");\r\n          const userRef = await sendMessage(this.state.text, this.props.channel);\r\n          this.setState({text:''})\r\n        }\r\n      };\r\n    componentDidMount() {\r\n        const {channel} = this.props\r\n        this.unsubscribe(channel)\r\n\r\n          document.addEventListener(\"keydown\", this.listener);\r\n    }\r\n\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener(\"keydown\", this.listener);\r\n    }\r\n\r\n    handleSubmit = async event => {\r\n        event.preventDefault();\r\n        const userRef = await sendMessage(this.state.text, this.props.channel);\r\n        this.setState({text:''})\r\n    }\r\n\r\n\r\n    handleChange = event => {\r\n\r\n\r\n            this.setState({text:event.target.value})\r\n\r\n    }\r\n    render () {\r\n        const {messages,channel} = this.props\r\n        return (\r\n            <motion.div>\r\n            <ClickOutside onClick={() => this.props.toggle()}>\r\n                <motion.div className='chat-container'>\r\n                    <div className='chat-title'>\r\n                        <p>Company Name</p>\r\n                    </div>\r\n                    <div className='messages-container' >\r\n                    {   messages ?\r\n                        messages.map(message=> <div className={`${message.user.id===channel ? 'message-user': 'message-support'} chat-message`}>{message.text}</div>)\r\n                        :null\r\n                    }\r\n                    </div>\r\n                    <form onSubmit={this.handleSubmit}>\r\n\r\n\r\n                        <AreaInput \r\n                        className='message-box'\r\n                        name='text'\r\n                        handleChange={this.handleChange}\r\n                        value={this.state.text}\r\n                        placeholder='Type your message here...'\r\n                        required\r\n                        />       \r\n\r\n                        <button className='message-send-button' type='submit'>\r\n                            <FontAwesomeIcon className='message-send-button-icon' icon={faArrowUp} size='lg'/>\r\n                        </button>\r\n\r\n                    </form>\r\n                </motion.div>\r\n            </ClickOutside>\r\n            </motion.div>\r\n    )}\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    messages: state.chat.messages,\r\n    channel: state.chat.channel\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    setMessages: messages => dispatch(setMessages(messages))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Chat);"]},"metadata":{},"sourceType":"module"}