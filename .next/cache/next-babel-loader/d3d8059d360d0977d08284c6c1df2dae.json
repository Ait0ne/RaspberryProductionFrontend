{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\bonaf\\\\Desktop\\\\Projects\\\\Ecommerce\\\\Malinka\\\\frontend\\\\malinka\\\\components\\\\Chat\\\\chat.component.jsx\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport AreaInput from '../AreaInput/area-input.component';\nimport { sendMessage, getMessages } from '../../firebase/firebase.utils';\nimport { connect } from 'react-redux';\nimport { setMessages as _setMessages } from '../../src/redux/chat/chat.actions';\n\nvar Chat = /*#__PURE__*/function (_React$Component) {\n  _inherits(Chat, _React$Component);\n\n  var _super = _createSuper(Chat);\n\n  function Chat() {\n    var _this;\n\n    _classCallCheck(this, Chat);\n\n    _this = _super.call(this);\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSubmit\", /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(event) {\n        var userRef;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                event.preventDefault();\n                _context.next = 3;\n                return sendMessage(_this.state.text, _this.props.channel);\n\n              case 3:\n                userRef = _context.sent;\n                console.log(userRef);\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_this), \"handleChange\", function (event) {\n      _this.setState({\n        text: event.target.value\n      });\n    });\n\n    _this.state = {\n      text: ''\n    };\n    return _this;\n  }\n\n  _createClass(Chat, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.setMessages(getMessages(this.props.channel));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          messages = _this$props.messages,\n          channel = _this$props.channel;\n      return __jsx(\"form\", {\n        onSubmit: this.handleSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }\n      }, __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 17\n        }\n      }, messages ? messages.map(function (message) {\n        return __jsx(\"p\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 48\n          }\n        }, message.text);\n      }) : null), __jsx(AreaInput, {\n        name: \"text\",\n        handleChange: this.handleChange,\n        value: this.state.text,\n        label: \"Your Review\",\n        required: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }\n      }), __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }\n      }, __jsx(\"button\", {\n        type: \"submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }\n      }, \"Send\")));\n    }\n  }]);\n\n  return Chat;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    messages: state.chat.messages,\n    channel: state.chat.channel\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    setMessages: function setMessages(messages) {\n      return dispatch(_setMessages(messages));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Chat);","map":{"version":3,"sources":["C:/Users/bonaf/Desktop/Projects/Ecommerce/Malinka/frontend/malinka/components/Chat/chat.component.jsx"],"names":["React","AreaInput","sendMessage","getMessages","connect","setMessages","Chat","event","preventDefault","state","text","props","channel","userRef","console","log","setState","target","value","messages","handleSubmit","map","message","handleChange","Component","mapStateToProps","chat","mapDispatchToProps","dispatch"],"mappings":";;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,mCAAtB;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,+BAAvC;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,WAAW,IAAXA,YAAR,QAA0B,mCAA1B;;IAEOC,I;;;;;AACH,kBAAc;AAAA;;AAAA;;AACV;;AADU;AAAA,0EAYC,iBAAMC,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AACXA,gBAAAA,KAAK,CAACC,cAAN;AADW;AAAA,uBAEWN,WAAW,CAAC,MAAKO,KAAL,CAAWC,IAAZ,EAAkB,MAAKC,KAAL,CAAWC,OAA7B,CAFtB;;AAAA;AAELC,gBAAAA,OAFK;AAGXC,gBAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;;AAHW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAZD;;AAAA;AAAA;AAAA;AAAA;;AAAA,mEAmBC,UAAAN,KAAK,EAAI;AAGhB,YAAKS,QAAL,CAAc;AAACN,QAAAA,IAAI,EAACH,KAAK,CAACU,MAAN,CAAaC;AAAnB,OAAd;AAEP,KAxBa;;AAEV,UAAKT,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAC;AADI,KAAb;AAFU;AAKb;;;;wCAEmB;AAChB,WAAKC,KAAL,CAAWN,WAAX,CAAuBF,WAAW,CAAC,KAAKQ,KAAL,CAAWC,OAAZ,CAAlC;AACH;;;6BAgBS;AAAA;;AAAA,wBACqB,KAAKD,KAD1B;AAAA,UACCQ,QADD,eACCA,QADD;AAAA,UACUP,OADV,eACUA,OADV;AAEN,aACI;AAAM,QAAA,QAAQ,EAAE,KAAKQ,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACQD,QAAQ,GACRA,QAAQ,CAACE,GAAT,CAAa,UAAAC,OAAO;AAAA,eAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAIA,OAAO,CAACZ,IAAZ,CAAH;AAAA,OAApB,CADQ,GAEP,IAHT,CADJ,EAQI,MAAC,SAAD;AACA,QAAA,IAAI,EAAC,MADL;AAEA,QAAA,YAAY,EAAE,KAAKa,YAFnB;AAGA,QAAA,KAAK,EAAE,KAAKd,KAAL,CAAWC,IAHlB;AAIA,QAAA,KAAK,EAAC,aAJN;AAKA,QAAA,QAAQ,MALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARJ,EAeI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,CAfJ,CADJ;AAsBF;;;;EAlDcV,KAAK,CAACwB,S;;AAqD1B,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAhB,KAAK;AAAA,SAAK;AAC9BU,IAAAA,QAAQ,EAAEV,KAAK,CAACiB,IAAN,CAAWP,QADS;AAE9BP,IAAAA,OAAO,EAAEH,KAAK,CAACiB,IAAN,CAAWd;AAFU,GAAL;AAAA,CAA7B;;AAKA,IAAMe,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,QAAQ;AAAA,SAAK;AACpCvB,IAAAA,WAAW,EAAE,qBAAAc,QAAQ;AAAA,aAAIS,QAAQ,CAACvB,YAAW,CAACc,QAAD,CAAZ,CAAZ;AAAA;AADe,GAAL;AAAA,CAAnC;;AAIA,eAAef,OAAO,CAACqB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CrB,IAA7C,CAAf","sourcesContent":["import React from 'react'\r\nimport AreaInput from '../AreaInput/area-input.component';\r\nimport {sendMessage, getMessages} from '../../firebase/firebase.utils';\r\nimport {connect} from 'react-redux'; \r\nimport {setMessages} from '../../src/redux/chat/chat.actions';\r\n\r\nclass  Chat extends React.Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            text:''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.setMessages(getMessages(this.props.channel))\r\n    }\r\n    \r\n\r\n    handleSubmit = async event => {\r\n        event.preventDefault();\r\n        const userRef = await sendMessage(this.state.text, this.props.channel);\r\n        console.log(userRef)\r\n    }\r\n\r\n\r\n    handleChange = event => {\r\n\r\n\r\n            this.setState({text:event.target.value})\r\n\r\n    }\r\n    render () {\r\n        const {messages,channel} = this.props\r\n        return (\r\n            <form onSubmit={this.handleSubmit}>\r\n                <div>\r\n                    {   messages ?\r\n                        messages.map(message=> <p>{message.text}</p>)\r\n                        :null\r\n                    }\r\n                </div>\r\n\r\n                <AreaInput \r\n                name='text'\r\n                handleChange={this.handleChange}\r\n                value={this.state.text}\r\n                label='Your Review'\r\n                required\r\n                />       \r\n                <div>\r\n                    <button type='submit'>\r\n                        Send\r\n                    </button>\r\n                </div>\r\n            </form>\r\n    )}\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    messages: state.chat.messages,\r\n    channel: state.chat.channel\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    setMessages: messages => dispatch(setMessages(messages))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Chat);"]},"metadata":{},"sourceType":"module"}