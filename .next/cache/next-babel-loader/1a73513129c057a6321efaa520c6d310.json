{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\bonaf\\\\Desktop\\\\Projects\\\\Ecommerce\\\\Malinka\\\\frontend\\\\malinka\\\\pages\\\\payment.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useEffect, useState, Fragment } from 'react';\nimport Router, { withRouter } from 'next/router';\nimport { connect } from 'react-redux';\nimport CartItem from '../components/cart-item/cart-item.component';\nimport StripeButton from '../components/stripe-button/stripe-button.component';\nimport Footer from '../components/Footer/footer.component';\n\nvar PaymentPage = function PaymentPage(_ref) {\n  _s();\n\n  var currentUser = _ref.currentUser,\n      cartItems = _ref.cartItems,\n      total = _ref.total;\n\n  var _useState = useState(''),\n      payMethod = _useState[0],\n      setPayMethod = _useState[1];\n\n  var _useState2 = useState(''),\n      deliveryMethod = _useState2[0],\n      setDeliveryMethod = _useState2[1];\n\n  var _useState3 = useState({\n    city: '',\n    address: ''\n  }),\n      deliveryAddress = _useState3[0],\n      setDeliveryAddress = _useState3[1]; // useEffect(()=>{\n  //     if (!currentUser) {\n  //         Router.back()\n  //     }\n  // })\n\n\n  var onMethodFormChange = function onMethodFormChange(event) {\n    setPayMethod(event.target.value);\n  };\n\n  var onDeliveryFormChange = function onDeliveryFormChange(event) {\n    setDeliveryMethod(event.target.value);\n  };\n\n  var onDeliveryAddressChange = function onDeliveryAddressChange(event) {\n    var _event$target = event.target,\n        name = _event$target.name,\n        value = _event$target.value;\n    setDeliveryAddress(_defineProperty({}, name, value));\n  };\n\n  return __jsx(Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, console.log(deliveryAddress), __jsx(\"div\", {\n    className: \"payment-page-container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"payment-page-main-content\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"payment-method-container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  }, __jsx(\"p\", {\n    className: \"payment-method-title\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 21\n    }\n  }, \"Choose payment method\"), __jsx(\"form\", {\n    className: \"payment-method-form\",\n    onChange: onMethodFormChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 21\n    }\n  }, __jsx(\"input\", {\n    type: \"radio\",\n    value: \"cash\",\n    name: \"payment-method\",\n    className: \"payment-method-radio\",\n    id: \"payment-method-cash\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 25\n    }\n  }), __jsx(\"label\", {\n    \"for\": \"payment-method-cash\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 25\n    }\n  }, \"Pay with Cash\"), __jsx(\"input\", {\n    type: \"radio\",\n    value: \"card\",\n    name: \"payment-method\",\n    className: \"payment-method-radio\",\n    id: \"payment-method-card\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 25\n    }\n  }), __jsx(\"label\", {\n    \"for\": \"payment-method-card\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 25\n    }\n  }, \"Pay online using card\"))), __jsx(\"div\", {\n    className: \"delivery-method-container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  }, __jsx(\"p\", {\n    className: \"delivery-method-title\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 21\n    }\n  }, \"Choose delivery method\"), __jsx(\"form\", {\n    className: \"delivery-method-form\",\n    onChange: onDeliveryFormChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 21\n    }\n  }, __jsx(\"input\", {\n    type: \"radio\",\n    value: \"delivery\",\n    name: \"delivery-method\",\n    className: \"delivery-method-radio\",\n    id: \"delivery-method-delivery\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 25\n    }\n  }), __jsx(\"label\", {\n    \"for\": \"delivery-method-delivery\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 25\n    }\n  }, \"Delivery\"), __jsx(\"input\", {\n    type: \"radio\",\n    value: \"pick-up\",\n    name: \"delivery-method\",\n    className: \"delivery-method-radio\",\n    id: \"delivery-method-pickup\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 25\n    }\n  }), __jsx(\"label\", {\n    \"for\": \"delivery-method-pickup\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 25\n    }\n  }, \"Pickup\")), deliveryMethod === 'delivery' ? __jsx(\"form\", {\n    className: \"delivery-address-form\",\n    onChange: onDeliveryAddressChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 21\n    }\n  }, __jsx(\"input\", {\n    type: \"text\",\n    value: deliveryAddress.city,\n    className: \"delivery-address-city\",\n    id: \"delivery-address-city\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 25\n    }\n  }), __jsx(\"label\", {\n    \"for\": \"delivery-address-city\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 25\n    }\n  }, \"City\"), __jsx(\"input\", {\n    type: \"text\",\n    value: deliveryAddress.address,\n    className: \"delivery-address-address\",\n    id: \"delivery-address-address\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 25\n    }\n  }), __jsx(\"label\", {\n    \"for\": \"delivery-address-address\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 25\n    }\n  }, \"Address\")) : null), __jsx(StripeButton, {\n    currentUser: currentUser,\n    price: total,\n    cartItems: cartItems,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  })), __jsx(\"div\", {\n    className: \"payment-page-cart-container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }, __jsx(\"p\", {\n    className: \"payment-page-cart-title\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  }, \"Your cart\"), cartItems.length ? cartItems.map(function (cartItem) {\n    return __jsx(CartItem, {\n      key: cartItem.id,\n      cartItem: cartItem,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 47\n      }\n    });\n  }) : __jsx(\"span\", {\n    className: \"empty-message\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 21\n    }\n  }, \"Your cart is empty\"), __jsx(\"div\", {\n    className: \"payment-page-cart-total\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }\n  }, __jsx(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 21\n    }\n  }, \"Total: $\", total)))), __jsx(Footer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }));\n};\n\n_s(PaymentPage, \"F7QXTtal4H8303+2sNoIO5CDmKk=\");\n\n_c = PaymentPage;\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    cartItems: state.cart.cartItems,\n    currentUser: state.user.currentUser,\n    total: state.cart.cartItems.reduce(function (sum, cartItem) {\n      return sum + cartItem.price * cartItem.quantity;\n    }, 0)\n  };\n};\n\nexport default withRouter(connect(mapStateToProps)(PaymentPage));\n\nvar _c;\n\n$RefreshReg$(_c, \"PaymentPage\");","map":{"version":3,"sources":["C:/Users/bonaf/Desktop/Projects/Ecommerce/Malinka/frontend/malinka/pages/payment.js"],"names":["React","useEffect","useState","Fragment","Router","withRouter","connect","CartItem","StripeButton","Footer","PaymentPage","currentUser","cartItems","total","payMethod","setPayMethod","deliveryMethod","setDeliveryMethod","city","address","deliveryAddress","setDeliveryAddress","onMethodFormChange","event","target","value","onDeliveryFormChange","onDeliveryAddressChange","name","console","log","length","map","cartItem","id","mapStateToProps","state","cart","user","reduce","sum","price","quantity"],"mappings":"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","sourcesContent":["import React, {useEffect, useState, Fragment} from 'react'\r\nimport Router, {withRouter} from 'next/router';\r\nimport {connect} from 'react-redux';\r\nimport CartItem from '../components/cart-item/cart-item.component'\r\nimport StripeButton from '../components/stripe-button/stripe-button.component'\r\nimport Footer from '../components/Footer/footer.component'\r\nconst PaymentPage =({currentUser, cartItems, total}) => {\r\n    const [payMethod, setPayMethod] = useState('')\r\n    const [deliveryMethod, setDeliveryMethod] = useState('')\r\n    const [deliveryAddress, setDeliveryAddress] = useState({city:'', address:''})\r\n    // useEffect(()=>{\r\n    //     if (!currentUser) {\r\n    //         Router.back()\r\n    //     }\r\n    // })\r\n\r\n    const onMethodFormChange = (event) => {\r\n        setPayMethod(event.target.value)\r\n    }\r\n    const onDeliveryFormChange = (event) => {\r\n        setDeliveryMethod(event.target.value)\r\n    }\r\n    const onDeliveryAddressChange = (event) => {\r\n        const {name, value} = event.target\r\n        setDeliveryAddress({[name]:value})\r\n    }\r\n\r\n\r\n    return (\r\n        \r\n        <Fragment>\r\n        {console.log(deliveryAddress)}\r\n        <div className='payment-page-container'>\r\n            <div className='payment-page-main-content'>\r\n\r\n                <div className='payment-method-container'>  \r\n                    <p className='payment-method-title'>Choose payment method</p>\r\n                    <form className='payment-method-form' onChange={onMethodFormChange}>\r\n                        <input type='radio' value='cash' name='payment-method' className='payment-method-radio' id = 'payment-method-cash'/>\r\n                        <label for='payment-method-cash'>Pay with Cash</label>\r\n                        <input type='radio' value='card' name='payment-method' className='payment-method-radio' id = 'payment-method-card'/>\r\n                        <label for='payment-method-card'>Pay online using card</label>\r\n                    </form>\r\n                </div>\r\n                <div className='delivery-method-container'>  \r\n                    <p className='delivery-method-title'>Choose delivery method</p>\r\n                    <form className='delivery-method-form' onChange={onDeliveryFormChange}>\r\n                        <input type='radio' value='delivery' name='delivery-method' className='delivery-method-radio' id = 'delivery-method-delivery'/>\r\n                        <label for='delivery-method-delivery'>Delivery</label>\r\n                        <input type='radio' value='pick-up' name='delivery-method' className='delivery-method-radio' id = 'delivery-method-pickup'/>\r\n                        <label for='delivery-method-pickup'>Pickup</label>\r\n                    </form>\r\n                    {\r\n                    deliveryMethod==='delivery'?\r\n                    <form className='delivery-address-form' onChange={onDeliveryAddressChange}>\r\n                        <input type='text' value={deliveryAddress.city} className='delivery-address-city' id='delivery-address-city'/>\r\n                        <label for='delivery-address-city'>City</label>\r\n                        <input type='text' value={deliveryAddress.address} className='delivery-address-address' id='delivery-address-address'/>\r\n                        <label for='delivery-address-address'>Address</label>\r\n                    </form>\r\n                    :null\r\n                }\r\n                </div>\r\n\r\n                <StripeButton currentUser={currentUser} price={total} cartItems={cartItems}/>\r\n            </div>\r\n            <div className='payment-page-cart-container'>\r\n                <p className='payment-page-cart-title'>Your cart</p>\r\n                {\r\n                    cartItems.length ?\r\n                    cartItems.map(cartItem => <CartItem key={cartItem.id} cartItem={cartItem}/>)\r\n                    : \r\n                    <span className='empty-message'>Your cart is empty</span>\r\n                \r\n                }\r\n                <div className='payment-page-cart-total'>\r\n                    <span>Total: ${total}</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <Footer/>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    cartItems: state.cart.cartItems,\r\n    currentUser: state.user.currentUser,\r\n    total: state.cart.cartItems.reduce((sum, cartItem) => \r\n    sum + cartItem.price*cartItem.quantity, 0\r\n    )\r\n})\r\n\r\nexport default withRouter(connect(mapStateToProps)(PaymentPage));"]},"metadata":{},"sourceType":"module"}