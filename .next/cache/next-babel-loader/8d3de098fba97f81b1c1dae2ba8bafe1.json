{"ast":null,"code":"import React, { useEffect } from \"react\";\n\nfunction ClickOutside({\n  children,\n  onClick\n}) {\n  const refs = React.Children.map(children, () => React.createRef());\n\n  const handleClick = e => {\n    const isOutside = refs.every(ref => {\n      return !ref.current.contains(e.target);\n    });\n\n    if (isOutside) {\n      onClick();\n    }\n  };\n\n  useEffect(() => {\n    document.addEventListener(\"click\", handleClick);\n    return function () {\n      document.removeEventListener(\"click\", handleClick);\n    };\n  });\n  return React.Children.map(children, (element, idx) => React.cloneElement(element, {\n    ref: refs[idx]\n  }));\n}\n\nexport default ClickOutside;","map":{"version":3,"sources":["C:/Users/bonaf/Desktop/Projects/Ecommerce/Malinka/frontend/malinka/components/ClickOutside/ClickOutside.component.jsx"],"names":["React","useEffect","ClickOutside","children","onClick","refs","Children","map","createRef","handleClick","e","isOutside","every","ref","current","contains","target","document","addEventListener","removeEventListener","element","idx","cloneElement"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,SAASC,YAAT,CAAsB;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAtB,EAA6C;AAC3C,QAAMC,IAAI,GAAGL,KAAK,CAACM,QAAN,CAAeC,GAAf,CAAmBJ,QAAnB,EAA6B,MAAMH,KAAK,CAACQ,SAAN,EAAnC,CAAb;;AACA,QAAMC,WAAW,GAAGC,CAAC,IAAI;AACvB,UAAMC,SAAS,GAAGN,IAAI,CAACO,KAAL,CAAWC,GAAG,IAAI;AAClC,aAAO,CAACA,GAAG,CAACC,OAAJ,CAAYC,QAAZ,CAAqBL,CAAC,CAACM,MAAvB,CAAR;AACD,KAFiB,CAAlB;;AAGA,QAAIL,SAAJ,EAAe;AACbP,MAAAA,OAAO;AACR;AACF,GAPD;;AASAH,EAAAA,SAAS,CAAC,MAAM;AACdgB,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,OAA1B,EAAmCT,WAAnC;AAEA,WAAO,YAAW;AAChBQ,MAAAA,QAAQ,CAACE,mBAAT,CAA6B,OAA7B,EAAsCV,WAAtC;AACD,KAFD;AAGD,GANQ,CAAT;AAQA,SAAOT,KAAK,CAACM,QAAN,CAAeC,GAAf,CAAmBJ,QAAnB,EAA6B,CAACiB,OAAD,EAAUC,GAAV,KAClCrB,KAAK,CAACsB,YAAN,CAAmBF,OAAnB,EAA4B;AAAEP,IAAAA,GAAG,EAAER,IAAI,CAACgB,GAAD;AAAX,GAA5B,CADK,CAAP;AAGD;;AAED,eAAenB,YAAf","sourcesContent":["import React, { useEffect } from \"react\";\r\n\r\nfunction ClickOutside({ children, onClick }) {\r\n  const refs = React.Children.map(children, () => React.createRef());\r\n  const handleClick = e => {\r\n    const isOutside = refs.every(ref => {\r\n      return !ref.current.contains(e.target);\r\n    });\r\n    if (isOutside) {\r\n      onClick();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.addEventListener(\"click\", handleClick);\r\n\r\n    return function() {\r\n      document.removeEventListener(\"click\", handleClick);\r\n    };\r\n  });\r\n\r\n  return React.Children.map(children, (element, idx) =>\r\n    React.cloneElement(element, { ref: refs[idx] })\r\n  );\r\n}\r\n\r\nexport default ClickOutside;"]},"metadata":{},"sourceType":"module"}