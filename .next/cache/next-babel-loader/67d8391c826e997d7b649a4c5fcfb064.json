{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { Fragment } from 'react';\nimport { Provider, connect } from 'react-redux';\nimport App from 'next/app'; // import wrapper  from '../src/redux/store';\n\nimport { config } from '@fortawesome/fontawesome-svg-core';\nimport '@fortawesome/fontawesome-svg-core/styles.css';\nimport Layout from '../components/Layout/layout.component';\nimport { persistStore } from 'redux-persist';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport withReduxStore from '../src/with-redux-store';\nimport './index.css';\nimport '../components/Slider/slider.styles.css';\nimport '../components/Header/header.styles.css';\nimport '../components/cart-icon/cart-icon.styles.css';\nimport '../components/sign-in/sign-in.styles.css';\nimport '../components/sign-up/sign-up.styles.css';\nimport '../components/FormInput/forminput.styles.css';\nimport './auth.css';\nimport '../components/cart-dropdown/cart-dropdown.styles.css';\nimport '../components/cart-item/cart-item.styles.css';\nimport '../components/Footer/footer.styles.css';\nimport './itemgallery/item.css';\nimport '../components/Review/review.styles.css';\nimport '../components/CheckoutItem/checkout-item.styles.css';\nimport './checkout.css';\nimport { AnimatePresence } from 'framer-motion';\nconfig.autoAddCss = false;\n\nclass MyApp extends App {\n  constructor(props) {\n    super(props);\n    this.persistor = persistStore(props.reduxStore);\n  } // static async getInitialProps({Component, ctx}) {\n  //     const pageProps = Component.getInitialProps ? await Component.getInitialProps(ctx) : {};\n  //     //Anything returned here can be accessed by the client\n  //     return {pageProps: pageProps};\n  // }\n\n\n  render() {\n    //pageProps that were returned  from 'getInitialProps' are stored in the props i.e. pageprops\n    const {\n      Component,\n      pageProps,\n      reduxStore\n    } = this.props;\n    return __jsx(Provider, {\n      store: reduxStore\n    }, __jsx(PersistGate, {\n      persistor: this.persistor\n    }, __jsx(AnimatePresence, {\n      exitBeforeEnter: true\n    }, __jsx(Layout, null, __jsx(Component, pageProps)))));\n  }\n\n}\n\nexport default withReduxStore(MyApp); // export default withReduxCookiePersist(makestore,{persistConfig : {\n//       whitelist: ['filter', 'cart', 'user']\n//   }})(MyApp);","map":null,"metadata":{},"sourceType":"module"}