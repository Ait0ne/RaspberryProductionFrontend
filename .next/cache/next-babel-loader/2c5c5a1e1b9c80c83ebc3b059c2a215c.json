{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bonaf\\\\Desktop\\\\Projects\\\\Ecommerce\\\\Malinka\\\\frontend\\\\malinka\\\\components\\\\cart-dropdown\\\\cart-dropdown.component.jsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Router from 'next/router';\nimport { connect } from 'react-redux';\nimport { toggleCartHidden } from '../../src/redux/cart/cart.actions';\n\nconst CartDropdown = ({\n  cartItems,\n  toggleCartHidden\n}) => {\n  return __jsx(\"div\", {\n    className: \"cart-dropdown\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"cart-items\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }\n  }, cartItems.length ? __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 21\n    }\n  }) : __jsx(\"span\", {\n    className: \"empty-message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 23\n    }\n  }, \"Your cart is empty\")), __jsx(\"button\", {\n    className: \"checkout-button\",\n    type: \"button\",\n    onClick: () => {\n      Router.push('/checkout');\n      toggleCartHidden();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }\n  }, \"GO TO CHECKOUT\"));\n};\n\nconst mapStateToProps = state => ({\n  cartItems: state.cart.cartItems\n});\n\nconst mapDispatchToProps = dispatch => ({\n  toggleCartHidden: () => dispatch(toggleCartHidden())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CartDropdown);","map":{"version":3,"sources":["C:/Users/bonaf/Desktop/Projects/Ecommerce/Malinka/frontend/malinka/components/cart-dropdown/cart-dropdown.component.jsx"],"names":["React","Router","connect","toggleCartHidden","CartDropdown","cartItems","length","push","mapStateToProps","state","cart","mapDispatchToProps","dispatch"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,gBAAR,QAAgC,mCAAhC;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAACC,EAAAA,SAAD;AAAWF,EAAAA;AAAX,CAAD,KAAkC;AACnD,SACI;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACUE,SAAS,CAACC,MAAV,GACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADE,GAIA;AAAM,IAAA,SAAS,EAAC,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BALV,CADJ,EAQI;AACA,IAAA,SAAS,EAAC,iBADV;AAEA,IAAA,IAAI,EAAC,QAFL;AAGA,IAAA,OAAO,EAAE,MAAM;AACXL,MAAAA,MAAM,CAACM,IAAP,CAAY,WAAZ;AACAJ,MAAAA,gBAAgB;AACnB,KAND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBARJ,CADJ;AAsBH,CAvBD;;AAyBA,MAAMK,eAAe,GAAGC,KAAK,KAAK;AAC9BJ,EAAAA,SAAS,EAAEI,KAAK,CAACC,IAAN,CAAWL;AADQ,CAAL,CAA7B;;AAIA,MAAMM,kBAAkB,GAAGC,QAAQ,KAAK;AACpCT,EAAAA,gBAAgB,EAAE,MAAMS,QAAQ,CAACT,gBAAgB,EAAjB;AADI,CAAL,CAAnC;;AAKA,eAAeD,OAAO,CAACM,eAAD,EAAiBG,kBAAjB,CAAP,CAA4CP,YAA5C,CAAf","sourcesContent":["import React from 'react';\r\nimport Router from 'next/router';\r\nimport {connect} from 'react-redux';\r\nimport {toggleCartHidden}  from '../../src/redux/cart/cart.actions'\r\n\r\nconst CartDropdown = ({cartItems,toggleCartHidden}) => {\r\n    return (\r\n        <div className='cart-dropdown'>\r\n            <div className='cart-items'>\r\n                    { cartItems.length ?\r\n                    <div>\r\n\r\n                    </div>\r\n                    : <span className='empty-message'>Your cart is empty</span>}               \r\n            </div>\r\n            <button \r\n            className='checkout-button' \r\n            type='button'\r\n            onClick={() => {\r\n                Router.push('/checkout')\r\n                toggleCartHidden()\r\n            }}\r\n            >\r\n                GO TO CHECKOUT\r\n            </button> \r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    cartItems: state.cart.cartItems\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    toggleCartHidden: () => dispatch(toggleCartHidden())\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(CartDropdown);"]},"metadata":{},"sourceType":"module"}