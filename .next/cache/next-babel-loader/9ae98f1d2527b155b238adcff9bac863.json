{"ast":null,"code":"var __jsx = React.createElement;\nimport CustomButton from '../CustomButton/CustomButton.component';\nimport Slider from '../Slider/Slider.component';\nimport { connect } from 'react-redux';\nimport { addItem } from '../../src/redux/cart/cart.actions';\nimport { motion } from 'framer-motion';\nimport React, { useState, useRef } from 'react';\nconst easing = [.6, -.05, .01, .99];\nconst fadeInUp = {\n  initial: {\n    y: 60,\n    opacity: 0\n  },\n  animate: {\n    y: 0,\n    opacity: 1,\n    transition: {\n      duration: .3,\n      ease: easing\n    }\n  }\n};\n\nconst Card = ({\n  item,\n  addItem,\n  index\n}) => {\n  const {\n    id,\n    name,\n    price,\n    gallery\n  } = item;\n\n  const toggleAnimation = () => {\n    let fly = document.getElementsByClassName('slider')[index];\n    let flyImages = fly.getElementsByClassName('slide');\n\n    for (let i = 0; i < flyImages.length; i++) {\n      if (flyImages[i].getBoundingClientRect().left === fly.getBoundingClientRect().left) {\n        fly = flyImages[i].querySelector('img');\n      }\n    }\n\n    let cart = document.querySelector('.cart-icon');\n    let disLeft = fly.getBoundingClientRect().left;\n    let disTop = fly.getBoundingClientRect().top;\n    let cartleft = cart.getBoundingClientRect().left;\n    let carttop = cart.getBoundingClientRect().top;\n    let flyCopy = fly.cloneNode(true);\n    flyCopy.style = `z-index: 1111; width:260px; border-radius:20px; opacity:0.8; position:fixed; top:${disTop}px;left:${disLeft}px;transition: left 2s, top 2s, width 2s, opacity 2s cubic-bezier(1, 1, 1, 1)`;\n    var rechange = document.body.appendChild(flyCopy);\n    setTimeout(function () {\n      flyCopy.style.left = cartleft + 'px';\n      flyCopy.style.top = carttop + 'px';\n      flyCopy.style.width = '40px';\n      flyCopy.style.opacity = '0';\n    }, 200);\n    setTimeout(function () {\n      rechange.parentNode.removeChild(rechange);\n    }, 2000);\n  };\n\n  return __jsx(motion.div, {\n    className: \"card\",\n    variants: fadeInUp\n  }, __jsx(motion.div, null, __jsx(Slider, {\n    images: gallery,\n    id: id\n  })), __jsx(\"div\", {\n    className: \"card-content\"\n  }, __jsx(\"div\", null, name), __jsx(\"div\", null, \" \", price, \" \")), __jsx(\"div\", null, __jsx(CustomButton, {\n    onClick: () => {\n      toggleAnimation();\n      addItem(item);\n    }\n  }, __jsx(\"img\", {\n    className: \"icon\",\n    alt: \"cart-icon\",\n    src: \"/icon.svg\"\n  }), \" \", __jsx(\"div\", null, \"Add to Cart\"))));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  addItem: item => dispatch(addItem(item))\n});\n\nexport default connect(null, mapDispatchToProps)(Card);","map":null,"metadata":{},"sourceType":"module"}