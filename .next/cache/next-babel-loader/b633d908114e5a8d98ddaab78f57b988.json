{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bonaf\\\\Desktop\\\\Projects\\\\Ecommerce\\\\Malinka\\\\frontend\\\\malinka\\\\components\\\\Chat\\\\chat.component.jsx\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Fragment } from 'react';\nimport AreaInput from '../AreaInput/area-input.component';\nimport { sendMessage } from '../../firebase/firebase.utils';\nimport { connect } from 'react-redux';\nimport { setMessages } from '../../src/redux/chat/chat.actions';\n\nclass Chat extends React.Component {\n  constructor() {\n    super();\n\n    _defineProperty(this, \"unsubscribe\", channel => {\n      if (!firebase.apps.length) {\n        firebase.initializeApp({\n          apiKey: \"AIzaSyABugTRykVjU3cO3nkANbnArtyZ_TPix1Q\",\n          authDomain: \"raspberry-dacc1.firebaseapp.com\",\n          databaseURL: \"https://raspberry-dacc1.firebaseio.com\",\n          projectId: \"raspberry-dacc1\",\n          storageBucket: \"raspberry-dacc1.appspot.com\",\n          messagingSenderId: \"435336134829\",\n          appId: \"1:435336134829:web:36258d0b8bdb9bf9810624\",\n          measurementId: \"G-E4XKDDZNWV\"\n        });\n      }\n\n      firebase.firestore().collection('Chat').doc(`${channel}`).collection(`messages`).where('text', '>', '').onSnapshot(docs => {\n        const messages = [];\n        docs.forEach(function (doc) {\n          messages.push(doc.data());\n        });\n        this.props.setMessages(messages);\n      });\n    });\n\n    _defineProperty(this, \"handleSubmit\", async event => {\n      event.preventDefault();\n      const userRef = await sendMessage(this.state.text, this.props.channel);\n      console.log(userRef);\n    });\n\n    _defineProperty(this, \"handleChange\", event => {\n      this.setState({\n        text: event.target.value\n      });\n    });\n\n    this.state = {\n      text: ''\n    };\n  }\n\n  componentDidMount() {\n    const {\n      channel\n    } = this.props;\n    this.unsubscribe(channel);\n  }\n\n  render() {\n    const {\n      messages,\n      channel\n    } = this.props;\n    return __jsx(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }\n    }, __jsx(\"div\", {\n      style: {\n        height: 100,\n        width: 200\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }\n    }, messages ? messages.map(message => __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 40\n      }\n    }, message.text)) : null), __jsx(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }\n    }, __jsx(AreaInput, {\n      name: \"text\",\n      handleChange: this.handleChange,\n      value: this.state.text,\n      label: \"Your Review\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }\n    }), __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }\n    }, __jsx(\"button\", {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 21\n      }\n    }, \"Send\"))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  messages: state.chat.messages,\n  channel: state.chat.channel\n});\n\nconst mapDispatchToProps = dispatch => ({\n  setMessages: messages => dispatch(setMessages(messages))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Chat);","map":{"version":3,"sources":["C:/Users/bonaf/Desktop/Projects/Ecommerce/Malinka/frontend/malinka/components/Chat/chat.component.jsx"],"names":["React","Fragment","AreaInput","sendMessage","connect","setMessages","Chat","Component","constructor","channel","firebase","apps","length","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","collection","doc","where","onSnapshot","docs","messages","forEach","push","data","props","event","preventDefault","userRef","state","text","console","log","setState","target","value","componentDidMount","unsubscribe","render","height","width","map","message","handleSubmit","handleChange","mapStateToProps","chat","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, {Fragment} from 'react'\r\nimport AreaInput from '../AreaInput/area-input.component';\r\nimport {sendMessage} from '../../firebase/firebase.utils';\r\nimport {connect} from 'react-redux'; \r\nimport {setMessages} from '../../src/redux/chat/chat.actions';\r\n\r\nclass  Chat extends React.Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            text:''\r\n        }\r\n    }\r\n\r\n    unsubscribe = (channel) => {\r\n        \r\n            if (!firebase.apps.length) {\r\n                firebase.initializeApp({\r\n                    apiKey: \"AIzaSyABugTRykVjU3cO3nkANbnArtyZ_TPix1Q\",\r\n                    authDomain: \"raspberry-dacc1.firebaseapp.com\",\r\n                    databaseURL: \"https://raspberry-dacc1.firebaseio.com\",\r\n                    projectId: \"raspberry-dacc1\",\r\n                    storageBucket: \"raspberry-dacc1.appspot.com\",\r\n                    messagingSenderId: \"435336134829\",\r\n                    appId: \"1:435336134829:web:36258d0b8bdb9bf9810624\",\r\n                    measurementId: \"G-E4XKDDZNWV\"\r\n                })\r\n            }\r\n                 \r\n            \r\n        \r\n            firebase.firestore().collection('Chat').doc(`${channel}`).collection(`messages`).where('text','>','' )\r\n            .onSnapshot((docs) => {\r\n                const messages=[] \r\n                docs.forEach(function(doc) {\r\n                    messages.push(doc.data());\r\n                });\r\n                this.props.setMessages(messages)    \r\n                       \r\n            })\r\n                        \r\n        \r\n    }\r\n\r\n    componentDidMount() {\r\n        const {channel} = this.props\r\n        this.unsubscribe(channel)\r\n    }\r\n\r\n\r\n    \r\n\r\n    handleSubmit = async event => {\r\n        event.preventDefault();\r\n        const userRef = await sendMessage(this.state.text, this.props.channel);\r\n        console.log(userRef)\r\n    }\r\n\r\n\r\n    handleChange = event => {\r\n\r\n\r\n            this.setState({text:event.target.value})\r\n\r\n    }\r\n    render () {\r\n        const {messages,channel} = this.props\r\n        return (\r\n            <Fragment>\r\n            <div style={{height:100, width: 200}}>\r\n            {   messages ?\r\n                messages.map(message=> <p>{message.text}</p>)\r\n                :null\r\n            }\r\n            </div>\r\n            <form onSubmit={this.handleSubmit}>\r\n\r\n\r\n                <AreaInput \r\n                name='text'\r\n                handleChange={this.handleChange}\r\n                value={this.state.text}\r\n                label='Your Review'\r\n                required\r\n                />       \r\n                <div>\r\n                    <button type='submit'>\r\n                        Send\r\n                    </button>\r\n                </div>\r\n            </form>\r\n            </Fragment>\r\n    )}\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    messages: state.chat.messages,\r\n    channel: state.chat.channel\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    setMessages: messages => dispatch(setMessages(messages))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Chat);"]},"metadata":{},"sourceType":"module"}