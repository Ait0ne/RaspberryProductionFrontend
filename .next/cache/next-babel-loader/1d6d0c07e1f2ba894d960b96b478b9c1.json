{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport logger from 'redux-logger';\nimport persistReducer from './root-reducer';\nvar middlewares = [];\n\nif (true) {\n  middlewares.push(logger);\n}\n\nvar startState = {\n  cart: {\n    cartItems: [],\n    cartHidden: true\n  },\n  filter: {\n    currentFilter: 'Bouquet'\n  },\n  pagination: {\n    activePage: 1,\n    perPage: 10,\n    pageRange: 3\n  },\n  sort: {\n    sorted: 'Newest'\n  },\n  user: {\n    currentUser: null\n  },\n  chat: {\n    channel: '',\n    messages: [],\n    newMessages: false,\n    chatHidden: true\n  }\n}; // const makestore = (initialState, options) => createStore(persistReducer, initialState, applyMiddleware(...middlewares))\n// export default makestore;\n\nexport function makestore() {\n  var initialState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : startState;\n  return createStore(persistReducer, initialState, applyMiddleware.apply(void 0, middlewares));\n}","map":{"version":3,"sources":["C:/Users/bonaf/Desktop/Projects/Ecommerce/Malinka/frontend/malinka/client/src/redux/store.js"],"names":["createStore","applyMiddleware","logger","persistReducer","middlewares","push","startState","cart","cartItems","cartHidden","filter","currentFilter","pagination","activePage","perPage","pageRange","sort","sorted","user","currentUser","chat","channel","messages","newMessages","chatHidden","makestore","initialState"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,cAAP,MAA2B,gBAA3B;AAGA,IAAMC,WAAW,GAAG,EAApB;;AAEA,UAA4C;AAC1CA,EAAAA,WAAW,CAACC,IAAZ,CAAiBH,MAAjB;AACD;;AAED,IAAMI,UAAU,GAAC;AACbC,EAAAA,IAAI,EAAC;AACLC,IAAAA,SAAS,EAAC,EADL;AAELC,IAAAA,UAAU,EAAE;AAFP,GADQ;AAIbC,EAAAA,MAAM,EAAC;AAACC,IAAAA,aAAa,EAAE;AAAhB,GAJM;AAKbC,EAAAA,UAAU,EAAC;AAACC,IAAAA,UAAU,EAAC,CAAZ;AACXC,IAAAA,OAAO,EAAC,EADG;AAEXC,IAAAA,SAAS,EAAC;AAFC,GALE;AAQbC,EAAAA,IAAI,EAAC;AAACC,IAAAA,MAAM,EAAE;AAAT,GARQ;AASbC,EAAAA,IAAI,EAAC;AAACC,IAAAA,WAAW,EAAE;AAAd,GATQ;AAUbC,EAAAA,IAAI,EAAE;AAACC,IAAAA,OAAO,EAAE,EAAV;AACNC,IAAAA,QAAQ,EAAE,EADJ;AACQC,IAAAA,WAAW,EAAC,KADpB;AAC2BC,IAAAA,UAAU,EAAC;AADtC;AAVO,CAAjB,C,CAiBA;AAEA;;AAEA,OAAO,SAASC,SAAT,GAA8C;AAAA,MAA3BC,YAA2B,uEAAZpB,UAAY;AACjD,SAAON,WAAW,CAChBG,cADgB,EAEhBuB,YAFgB,EAGhBzB,eAAe,MAAf,SAAmBG,WAAnB,CAHgB,CAAlB;AAKD","sourcesContent":["import { createStore, applyMiddleware } from 'redux';\r\nimport logger from 'redux-logger';\r\nimport persistReducer from './root-reducer';\r\n\r\n\r\nconst middlewares = [];\r\n\r\nif (process.env.NODE_ENV === 'development') {\r\n  middlewares.push(logger);\r\n}\r\n\r\nconst startState={\r\n    cart:{\r\n    cartItems:[],\r\n    cartHidden: true},\r\n    filter:{currentFilter: 'Bouquet'},\r\n    pagination:{activePage:1,\r\n    perPage:10,\r\n    pageRange:3},\r\n    sort:{sorted: 'Newest'},\r\n    user:{currentUser: null},\r\n    chat: {channel: '',\r\n    messages: [], newMessages:false, chatHidden:true},\r\n    \r\n\r\n}\r\n\r\n\r\n// const makestore = (initialState, options) => createStore(persistReducer, initialState, applyMiddleware(...middlewares))\r\n\r\n// export default makestore;\r\n\r\nexport function makestore(initialState = startState) {\r\n    return createStore(\r\n      persistReducer,\r\n      initialState,\r\n      applyMiddleware(...middlewares)\r\n    )\r\n  }"]},"metadata":{},"sourceType":"module"}