{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nvar __jsx = React.createElement;\nimport FormInput from '../FormInput/formInput.component';\nimport AreaInput from '../AreaInput/area-input.component';\nimport React, { useState } from 'react';\nimport API_URL from '../../routes';\n\nvar ReviewForm = function ReviewForm(_ref) {\n  var item = _ref.item,\n      addComments = _ref.addComments;\n\n  var _useState = useState(''),\n      text = _useState[0],\n      setText = _useState[1];\n\n  var _useState2 = useState(''),\n      name = _useState2[0],\n      setName = _useState2[1];\n\n  var _useState3 = useState(''),\n      email = _useState3[0],\n      setEmail = _useState3[1];\n\n  var handleSubmit = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(event) {\n      var req, response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              event.preventDefault();\n              _context.next = 3;\n              return fetch(\"\".concat(API_URL, \"/comments\"), {\n                method: 'post',\n                headers: {\n                  'Content-type': 'application/json'\n                },\n                body: JSON.stringify({\n                  email: email,\n                  text: text,\n                  name: name,\n                  date: new Date(),\n                  item: item.id\n                })\n              });\n\n            case 3:\n              req = _context.sent;\n              _context.next = 6;\n              return req.json();\n\n            case 6:\n              response = _context.sent;\n              _context.next = 9;\n              return addComments(response);\n\n            case 9:\n              setEmail('');\n              setName('');\n              setText('');\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleSubmit(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var handleChange = function handleChange(event) {\n    var _event$target = event.target,\n        value = _event$target.value,\n        name = _event$target.name;\n\n    if (name === 'text') {\n      setText(value);\n    } else if (name === 'name') {\n      setName(value);\n    } else {\n      setEmail(value);\n    }\n  };\n\n  return __jsx(\"form\", {\n    onSubmit: handleSubmit\n  }, __jsx(AreaInput, {\n    name: \"text\",\n    handleChange: handleChange,\n    value: text,\n    label: \"Your Review\",\n    required: true\n  }), __jsx(FormInput, {\n    name: \"name\",\n    type: \"name\",\n    handleChange: handleChange,\n    value: name,\n    label: \"Name\",\n    required: true\n  }), __jsx(FormInput, {\n    name: \"email\",\n    type: \"email\",\n    label: \"Email\",\n    value: email,\n    handleChange: handleChange,\n    required: true\n  }), __jsx(\"div\", {\n    className: \"buttons\"\n  }, __jsx(\"button\", {\n    className: \"review-button\",\n    type: \"submit\"\n  }, \"Leave a review\")));\n};\n\nexport default ReviewForm;","map":null,"metadata":{},"sourceType":"module"}