{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\bonaf\\\\Desktop\\\\Projects\\\\Ecommerce\\\\Malinka\\\\frontend\\\\malinka\\\\components\\\\Review\\\\review.component.jsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport FormInput from '../FormInput/formInput.component';\nimport AreaInput from '../AreaInput/area-input.component';\nimport React, { useState } from 'react';\nimport API_URL from '../../routes';\n\nvar ReviewForm = function ReviewForm(_ref) {\n  _s();\n\n  var item = _ref.item,\n      addComments = _ref.addComments;\n\n  var _useState = useState(''),\n      text = _useState[0],\n      setText = _useState[1];\n\n  var _useState2 = useState(''),\n      name = _useState2[0],\n      setName = _useState2[1];\n\n  var _useState3 = useState(''),\n      email = _useState3[0],\n      setEmail = _useState3[1];\n\n  var handleSubmit = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(event) {\n      var req, response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              event.preventDefault();\n              _context.next = 3;\n              return fetch(\"\".concat(API_URL, \"/comments\"), {\n                method: 'post',\n                headers: {\n                  'Content-type': 'application/json'\n                },\n                body: JSON.stringify({\n                  email: email,\n                  text: text,\n                  name: name,\n                  date: new Date(),\n                  item: item.id\n                })\n              });\n\n            case 3:\n              req = _context.sent;\n              _context.next = 6;\n              return req.json();\n\n            case 6:\n              response = _context.sent;\n              addComments(response);\n              setEmail('');\n              setName('');\n              setText('');\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleSubmit(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var handleChange = function handleChange(event) {\n    var _event$target = event.target,\n        value = _event$target.value,\n        name = _event$target.name;\n\n    if (name === 'text') {\n      setText(value);\n    } else if (name === 'name') {\n      setName(value);\n    } else {\n      setEmail(value);\n    }\n  };\n\n  return __jsx(\"form\", {\n    onSubmit: handleSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, __jsx(AreaInput, {\n    name: \"text\",\n    handleChange: handleChange,\n    value: text,\n    label: \"Your Review\",\n    required: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }), __jsx(FormInput, {\n    name: \"name\",\n    type: \"name\",\n    handleChange: handleChange,\n    value: name,\n    label: \"Name\",\n    required: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }), __jsx(FormInput, {\n    name: \"email\",\n    type: \"email\",\n    label: \"Email\",\n    value: email,\n    handleChange: handleChange,\n    required: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }), __jsx(\"div\", {\n    className: \"buttons\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, __jsx(\"button\", {\n    className: \"review-button\",\n    type: \"submit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }\n  }, \"Leave a review\")));\n};\n\n_s(ReviewForm, \"btVwqyqREk3AxoYRfhLs9ndx6nc=\");\n\n_c = ReviewForm;\nexport default ReviewForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReviewForm\");","map":{"version":3,"sources":["C:/Users/bonaf/Desktop/Projects/Ecommerce/Malinka/frontend/malinka/components/Review/review.component.jsx"],"names":["FormInput","AreaInput","React","useState","API_URL","ReviewForm","item","addComments","text","setText","name","setName","email","setEmail","handleSubmit","event","preventDefault","fetch","method","headers","body","JSON","stringify","date","Date","id","req","json","response","handleChange","target","value"],"mappings":"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","sourcesContent":["import FormInput from '../FormInput/formInput.component';\r\nimport AreaInput from '../AreaInput/area-input.component';\r\nimport React, { useState} from 'react';\r\nimport API_URL from '../../routes'\r\n\r\nconst ReviewForm = ({item, addComments}) => {\r\n\r\n    const [text, setText] = useState('')\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n\r\n    const handleSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        const  req = await fetch(`${API_URL}/comments`, {\r\n                method: 'post',\r\n                headers: {'Content-type': 'application/json'},\r\n                body: JSON.stringify({\r\n                    email: email,\r\n                    text: text,\r\n                    name: name,\r\n                    date: new Date(),\r\n                    item: item.id\r\n                })\r\n                })\r\n        const response = await req.json()   \r\n        addComments(response)     \r\n        setEmail('');\r\n        setName('');\r\n        setText('')\r\n        \r\n \r\n        \r\n    }\r\n    const handleChange = event => {\r\n        const {value,name} =event.target;\r\n        if (name==='text') {\r\n            setText(value)\r\n        } else if (name==='name') {\r\n            setName(value)\r\n        } else {\r\n            setEmail(value)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <AreaInput \r\n            name='text'\r\n            handleChange={handleChange}\r\n            value={text}\r\n            label='Your Review'\r\n            required\r\n            />       \r\n                        \r\n            <FormInput \r\n            name='name'\r\n            type='name'\r\n            handleChange={handleChange}\r\n            value={name}\r\n            label='Name'\r\n            required\r\n            />\r\n            <FormInput \r\n            name='email'\r\n            type='email'\r\n            label='Email'\r\n            value={email}\r\n            handleChange={handleChange}\r\n            required                   \r\n            />\r\n            <div className='buttons'>\r\n                <button className='review-button' type='submit'>\r\n                    Leave a review\r\n                </button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\n\r\nexport default ReviewForm;"]},"metadata":{},"sourceType":"module"}