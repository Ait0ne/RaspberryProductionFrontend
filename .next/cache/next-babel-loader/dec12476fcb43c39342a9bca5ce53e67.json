{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bonaf\\\\Desktop\\\\Projects\\\\Ecommerce\\\\Malinka\\\\frontend\\\\malinka\\\\components\\\\Review\\\\review.component.jsx\";\nvar __jsx = React.createElement;\nimport FormInput from '../FormInput/formInput.component';\nimport AreaInput from '../AreaInput/area-input.component';\nimport React, { useState } from 'react';\nimport API_URL from '../../routes';\n\nconst ReviewForm = ({\n  item,\n  addComments\n}) => {\n  const {\n    0: text,\n    1: setText\n  } = useState('');\n  const {\n    0: name,\n    1: setName\n  } = useState('');\n  const {\n    0: email,\n    1: setEmail\n  } = useState('');\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const comment = {\n      email: email,\n      text: text,\n      name: name,\n      date: new Date(),\n      item: item.id\n    };\n    const req = await fetch(`${API_URL}/comments`, {\n      method: 'post',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(comment)\n    });\n    const response = await req.json();\n    setEmail('');\n    setName('');\n    setText('');\n    addComments(comment);\n  };\n\n  const handleChange = event => {\n    const {\n      value,\n      name\n    } = event.target;\n\n    if (name === 'text') {\n      setText(value);\n    } else if (name === 'name') {\n      setName(value);\n    } else {\n      setEmail(value);\n    }\n  };\n\n  return __jsx(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, __jsx(AreaInput, {\n    name: \"text\",\n    handleChange: handleChange,\n    value: text,\n    label: \"Your Review\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }), __jsx(FormInput, {\n    name: \"name\",\n    type: \"name\",\n    handleChange: handleChange,\n    value: name,\n    label: \"Name\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }), __jsx(FormInput, {\n    name: \"email\",\n    type: \"email\",\n    label: \"Email\",\n    value: email,\n    handleChange: handleChange,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }), __jsx(\"div\", {\n    className: \"buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, __jsx(\"button\", {\n    className: \"review-button\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  }, \"Leave a review\")));\n};\n\nexport default ReviewForm;","map":{"version":3,"sources":["C:/Users/bonaf/Desktop/Projects/Ecommerce/Malinka/frontend/malinka/components/Review/review.component.jsx"],"names":["FormInput","AreaInput","React","useState","API_URL","ReviewForm","item","addComments","text","setText","name","setName","email","setEmail","handleSubmit","event","preventDefault","comment","date","Date","id","req","fetch","method","headers","body","JSON","stringify","response","json","handleChange","value","target"],"mappings":"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","sourcesContent":["import FormInput from '../FormInput/formInput.component';\r\nimport AreaInput from '../AreaInput/area-input.component';\r\nimport React, { useState} from 'react';\r\nimport API_URL from '../../routes'\r\n\r\nconst ReviewForm = ({item, addComments}) => {\r\n\r\n    const [text, setText] = useState('')\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n\r\n    const handleSubmit = async event => {\r\n        event.preventDefault();\r\n        const comment = {\r\n            email: email,\r\n            text: text,\r\n            name: name,\r\n            date: new Date(),\r\n            item: item.id\r\n        }\r\n        const  req = await fetch(`${API_URL}/comments`, {\r\n                method: 'post',\r\n                headers: {'Content-type': 'application/json'},\r\n                body: JSON.stringify(comment)\r\n                })\r\n        const response = await req.json()        \r\n        setEmail('');\r\n        setName('');\r\n        setText('')\r\n        addComments(comment)\r\n \r\n        \r\n    }\r\n    const handleChange = event => {\r\n        const {value,name} =event.target;\r\n        if (name==='text') {\r\n            setText(value)\r\n        } else if (name==='name') {\r\n            setName(value)\r\n        } else {\r\n            setEmail(value)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <AreaInput \r\n            name='text'\r\n            handleChange={handleChange}\r\n            value={text}\r\n            label='Your Review'\r\n            required\r\n            />       \r\n                        \r\n            <FormInput \r\n            name='name'\r\n            type='name'\r\n            handleChange={handleChange}\r\n            value={name}\r\n            label='Name'\r\n            required\r\n            />\r\n            <FormInput \r\n            name='email'\r\n            type='email'\r\n            label='Email'\r\n            value={email}\r\n            handleChange={handleChange}\r\n            required                   \r\n            />\r\n            <div className='buttons'>\r\n                <button className='review-button' type='submit'>\r\n                    Leave a review\r\n                </button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\n\r\nexport default ReviewForm;"]},"metadata":{},"sourceType":"module"}