{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\bonaf\\\\Desktop\\\\Projects\\\\Ecommerce\\\\Malinka\\\\frontend\\\\malinka\\\\components\\\\Gallery\\\\gallery.component.jsx\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport Card from '../Card/card.component';\nimport API_URL from '../../../routes';\n\nvar Gallery = /*#__PURE__*/function (_React$Component) {\n  _inherits(Gallery, _React$Component);\n\n  var _super = _createSuper(Gallery);\n\n  function Gallery() {\n    _classCallCheck(this, Gallery);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Gallery, [{\n    key: \"render\",\n    // constructor(props){\n    //     super(props)\n    //     this.state = {\n    //         items:[],\n    //         categories:[],\n    //         currentFilter:''\n    //     }\n    // }\n    // componentDidMount() {\n    //     fetch(`${API_URL}/bouquets`)\n    //     .then(res => res.json())\n    //     .then(data => this.setState({items:[...this.state.items,...data]}))\n    //     fetch(`${API_URL}/accessories`)\n    //     .then(res => res.json())\n    //     .then(data => this.setState({items:[...this.state.items,...data]}))\n    //     fetch(`${API_URL}/categories`)\n    //     .then(res => res.json())\n    //     .then(data => this.setState({categories:data}))\n    // }\n    // onSelectChange = (event) => {\n    //     if (event.target.value==='All'){\n    //         this.setState({currentFilter:''})\n    //     } else{\n    //     this.setState({currentFilter:event.target.value})\n    //     }\n    // }\n    value: function render() {\n      return __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }\n      }, console.log(this.props));\n    } // render() {\n    //     const filteredItems = this.state.items.filter(item => {\n    //         return item.categories[0].name.includes(this.state.currentFilter)\n    //     })\n    //     return(\n    //         <div className='gallery-container'>\n    //             <div>\n    //                     {   \n    //                         (this.state.categories[0]) ? \n    //                             <select onChange={this.onSelectChange}>\n    //                                 <option>All</option>\n    //                                 {this.state.categories.map(category => {\n    //                                     return <option key={category.id}>{category.name}</option>\n    //                                 })}\n    //                             </select>\n    //                         : (\n    //                             <option>Loading</option>\n    //                         )\n    //                     }\n    //             </div>\n    //             {console.log(this.props)}\n    //             {\n    //                 !this.state.items[0] ?\n    //                     <h1>Loading</h1>\n    //                 :(\n    //                     <div className='gallery'>\n    //                         {\n    //                         filteredItems.map(({id, name, ...otherProps }) =>{\n    //                                 return <Card key={name} name={name} {...otherProps}/>\n    //                         })}\n    //                     </div>\n    //                 )\n    //             }\n    //         </div>\n    //     )\n    // }\n\n  }], [{\n    key: \"getServerSideProps\",\n    value: function () {\n      var _getServerSideProps = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(ctx) {\n        var res, data;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return fetch(\"\".concat(API_URL, \"/bouquets\"));\n\n              case 2:\n                res = _context.sent;\n                _context.next = 5;\n                return res.json();\n\n              case 5:\n                data = _context.sent;\n                return _context.abrupt(\"return\", {\n                  items: data\n                });\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getServerSideProps(_x) {\n        return _getServerSideProps.apply(this, arguments);\n      }\n\n      return getServerSideProps;\n    }()\n  }]);\n\n  return Gallery;\n}(React.Component);\n\nexport default Gallery;","map":{"version":3,"sources":["C:/Users/bonaf/Desktop/Projects/Ecommerce/Malinka/frontend/malinka/components/Gallery/gallery.component.jsx"],"names":["React","Card","API_URL","Gallery","console","log","props","ctx","fetch","res","json","data","items","Component"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,OAAP,MAAoB,iBAApB;;IAIMC,O;;;;;;;;;;;;;AAOF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;6BACS;AACL,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKC,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAjB,CADL,CADJ;AAKH,K,CAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;0GAhFgCC,G;;;;;;;uBACVC,KAAK,WAAIN,OAAJ,e;;;AAAjBO,gBAAAA,G;;uBACaA,GAAG,CAACC,IAAJ,E;;;AAAbC,gBAAAA,I;iDACC;AAAEC,kBAAAA,KAAK,EAAED;AAAT,iB;;;;;;;;;;;;;;;;;;;EAJOX,KAAK,CAACa,S;;AAqF5B,eAAeV,OAAf","sourcesContent":["import React from 'react';\r\nimport Card from '../Card/card.component';\r\nimport API_URL from '../../../routes';\r\n\r\n\r\n\r\nclass Gallery extends React.Component {\r\n    static async getServerSideProps(ctx) {\r\n        const res = await fetch(`${API_URL}/bouquets`)\r\n        const data = await res.json()\r\n        return { items: data  }\r\n    }\r\n\r\n    // constructor(props){\r\n    //     super(props)\r\n    //     this.state = {\r\n    //         items:[],\r\n    //         categories:[],\r\n    //         currentFilter:''\r\n    //     }\r\n    // }\r\n\r\n\r\n\r\n    // componentDidMount() {\r\n    //     fetch(`${API_URL}/bouquets`)\r\n    //     .then(res => res.json())\r\n    //     .then(data => this.setState({items:[...this.state.items,...data]}))\r\n    //     fetch(`${API_URL}/accessories`)\r\n    //     .then(res => res.json())\r\n    //     .then(data => this.setState({items:[...this.state.items,...data]}))\r\n    //     fetch(`${API_URL}/categories`)\r\n    //     .then(res => res.json())\r\n    //     .then(data => this.setState({categories:data}))\r\n    // }\r\n\r\n    // onSelectChange = (event) => {\r\n    //     if (event.target.value==='All'){\r\n    //         this.setState({currentFilter:''})\r\n    //     } else{\r\n    //     this.setState({currentFilter:event.target.value})\r\n    //     }\r\n    // }\r\n    render() {\r\n        return (\r\n            <div>\r\n                {console.log(this.props)}\r\n            </div>\r\n        )\r\n    }\r\n    \r\n\r\n    // render() {\r\n    //     const filteredItems = this.state.items.filter(item => {\r\n    //         return item.categories[0].name.includes(this.state.currentFilter)\r\n    //     })\r\n    //     return(\r\n    //         <div className='gallery-container'>\r\n    //             <div>\r\n    //                     {   \r\n    //                         (this.state.categories[0]) ? \r\n    //                             <select onChange={this.onSelectChange}>\r\n    //                                 <option>All</option>\r\n    //                                 {this.state.categories.map(category => {\r\n    //                                     return <option key={category.id}>{category.name}</option>\r\n    //                                 })}\r\n    //                             </select>\r\n    //                         : (\r\n    //                             <option>Loading</option>\r\n    //                         )\r\n    //                     }\r\n    //             </div>\r\n    //             {console.log(this.props)}\r\n    //             {\r\n    //                 !this.state.items[0] ?\r\n    //                     <h1>Loading</h1>\r\n    //                 :(\r\n    //                     <div className='gallery'>\r\n    //                         {\r\n    //                         filteredItems.map(({id, name, ...otherProps }) =>{\r\n    //                                 return <Card key={name} name={name} {...otherProps}/>\r\n    //                         })}\r\n    //                     </div>\r\n    //                 )\r\n    //             }\r\n    //         </div>\r\n    //     )\r\n    // }\r\n}\r\n\r\n\r\nexport default Gallery;"]},"metadata":{},"sourceType":"module"}