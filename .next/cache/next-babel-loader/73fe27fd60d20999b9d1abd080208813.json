{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bonaf\\\\Desktop\\\\Projects\\\\Ecommerce\\\\Malinka\\\\frontend\\\\malinka\\\\components\\\\Chat\\\\chat.component.jsx\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Fragment } from 'react';\nimport AreaInput from '../AreaInput/area-input.component';\nimport { sendMessage } from '../../firebase/firebase.utils';\nimport { connect } from 'react-redux';\nimport { setMessages } from '../../src/redux/chat/chat.actions';\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport { motion } from 'framer-motion';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArrowUp } from '@fortawesome/free-solid-svg-icons';\nimport ClickOutside from '../ClickOutside/ClickOutside.component';\nimport ScrollBar from 'react-scrollbars-custom';\n\nclass Chat extends React.Component {\n  constructor() {\n    super();\n\n    _defineProperty(this, \"unsubscribe\", channel => {\n      if (!firebase.apps.length) {\n        firebase.initializeApp({\n          apiKey: \"AIzaSyABugTRykVjU3cO3nkANbnArtyZ_TPix1Q\",\n          authDomain: \"raspberry-dacc1.firebaseapp.com\",\n          databaseURL: \"https://raspberry-dacc1.firebaseio.com\",\n          projectId: \"raspberry-dacc1\",\n          storageBucket: \"raspberry-dacc1.appspot.com\",\n          messagingSenderId: \"435336134829\",\n          appId: \"1:435336134829:web:36258d0b8bdb9bf9810624\",\n          measurementId: \"G-E4XKDDZNWV\"\n        });\n      }\n\n      firebase.firestore().collection('Chat').doc(`${channel}`).collection(`messages`).where('createdAt', '>', 1590246123874).orderBy('createdAt').onSnapshot(docs => {\n        const messages = [];\n        docs.forEach(function (doc) {\n          messages.push(doc.data());\n        });\n        this.props.setMessages(messages);\n      });\n    });\n\n    _defineProperty(this, \"handleSubmit\", async event => {\n      event.preventDefault();\n      const userRef = await sendMessage(this.state.text, this.props.channel);\n      this.setState({\n        text: ''\n      });\n    });\n\n    _defineProperty(this, \"handleChange\", event => {\n      this.setState({\n        text: event.target.value\n      });\n    });\n\n    this.state = {\n      text: ''\n    };\n  }\n\n  componentDidMount() {\n    const {\n      channel\n    } = this.props;\n    this.unsubscribe(channel);\n  }\n\n  render() {\n    const {\n      messages,\n      channel\n    } = this.props;\n    return __jsx(ClickOutside, {\n      onClick: () => this.props.toggle(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }\n    }, __jsx(motion.div, {\n      className: \"chat-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }\n    }, __jsx(\"div\", {\n      className: \"chat-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }\n    }, __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 25\n      }\n    }, \"Company Name\")), __jsx(\"div\", {\n      className: \"messages-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 21\n      }\n    }, messages ? messages.map(message => __jsx(\"div\", {\n      className: `${message.user.id === channel ? 'message-user' : 'message-support'} chat-message`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 48\n      }\n    }, message.text)) : null), __jsx(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }\n    }, __jsx(AreaInput, {\n      className: \"message-box\",\n      name: \"text\",\n      handleChange: this.handleChange,\n      value: this.state.text,\n      placeholder: \"Type your message here...\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 25\n      }\n    }), __jsx(\"button\", {\n      className: \"message-send-button\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 25\n      }\n    }, __jsx(FontAwesomeIcon, {\n      className: \"message-send-button-icon\",\n      icon: faArrowUp,\n      size: \"lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 29\n      }\n    })))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  messages: state.chat.messages,\n  channel: state.chat.channel\n});\n\nconst mapDispatchToProps = dispatch => ({\n  setMessages: messages => dispatch(setMessages(messages))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Chat);","map":{"version":3,"sources":["C:/Users/bonaf/Desktop/Projects/Ecommerce/Malinka/frontend/malinka/components/Chat/chat.component.jsx"],"names":["React","Fragment","AreaInput","sendMessage","connect","setMessages","firebase","motion","FontAwesomeIcon","faArrowUp","ClickOutside","ScrollBar","Chat","Component","constructor","channel","apps","length","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","collection","doc","where","orderBy","onSnapshot","docs","messages","forEach","push","data","props","event","preventDefault","userRef","state","text","setState","target","value","componentDidMount","unsubscribe","render","toggle","map","message","user","id","handleSubmit","handleChange","mapStateToProps","chat","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, {Fragment} from 'react'\r\nimport AreaInput from '../AreaInput/area-input.component';\r\nimport {sendMessage} from '../../firebase/firebase.utils';\r\nimport {connect} from 'react-redux'; \r\nimport {setMessages} from '../../src/redux/chat/chat.actions';\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport {motion} from 'framer-motion';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {faArrowUp} from '@fortawesome/free-solid-svg-icons';\r\nimport ClickOutside from '../ClickOutside/ClickOutside.component'\r\nimport ScrollBar from 'react-scrollbars-custom';\r\n\r\n\r\n\r\nclass  Chat extends React.Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            text:'',\r\n        }\r\n    }\r\n\r\n    unsubscribe = (channel) => {\r\n        \r\n            if (!firebase.apps.length) {\r\n                firebase.initializeApp({\r\n                    apiKey: \"AIzaSyABugTRykVjU3cO3nkANbnArtyZ_TPix1Q\",\r\n                    authDomain: \"raspberry-dacc1.firebaseapp.com\",\r\n                    databaseURL: \"https://raspberry-dacc1.firebaseio.com\",\r\n                    projectId: \"raspberry-dacc1\",\r\n                    storageBucket: \"raspberry-dacc1.appspot.com\",\r\n                    messagingSenderId: \"435336134829\",\r\n                    appId: \"1:435336134829:web:36258d0b8bdb9bf9810624\",\r\n                    measurementId: \"G-E4XKDDZNWV\"\r\n                })\r\n            }\r\n                 \r\n            \r\n        \r\n            firebase.firestore().collection('Chat').doc(`${channel}`).collection(`messages`).where('createdAt','>',1590246123874 ).orderBy('createdAt')\r\n            .onSnapshot((docs) => {\r\n                const messages=[] \r\n                docs.forEach(function(doc) {\r\n                    messages.push(doc.data());\r\n                });\r\n                this.props.setMessages(messages)    \r\n                       \r\n            })\r\n                        \r\n        \r\n    }\r\n\r\n    componentDidMount() {\r\n        const {channel} = this.props\r\n        this.unsubscribe(channel)\r\n    }\r\n\r\n\r\n    \r\n\r\n    handleSubmit = async event => {\r\n        event.preventDefault();\r\n        const userRef = await sendMessage(this.state.text, this.props.channel);\r\n        this.setState({text:''})\r\n    }\r\n\r\n\r\n    handleChange = event => {\r\n\r\n\r\n            this.setState({text:event.target.value})\r\n\r\n    }\r\n    render () {\r\n        const {messages,channel} = this.props\r\n        return (\r\n            <ClickOutside onClick={() => this.props.toggle()}>\r\n                <motion.div className='chat-container'>\r\n                    <div className='chat-title'>\r\n                        <p>Company Name</p>\r\n                    </div>\r\n                    <div className='messages-container' >\r\n                    {/* <ScrollBar style={{width: '100%', height: '100%'}}> */}\r\n                    {   messages ?\r\n                        messages.map(message=> <div className={`${message.user.id===channel ? 'message-user': 'message-support'} chat-message`}>{message.text}</div>)\r\n                        :null\r\n                    }\r\n                    {/* </ScrollBar> */}\r\n                    </div>\r\n                    <form onSubmit={this.handleSubmit}>\r\n\r\n\r\n                        <AreaInput \r\n                        className='message-box'\r\n                        name='text'\r\n                        handleChange={this.handleChange}\r\n                        value={this.state.text}\r\n                        placeholder='Type your message here...'\r\n                        required\r\n                        />       \r\n\r\n                        <button className='message-send-button' type='submit'>\r\n                            <FontAwesomeIcon className='message-send-button-icon' icon={faArrowUp} size='lg'/>\r\n                        </button>\r\n\r\n                    </form>\r\n                </motion.div>\r\n            </ClickOutside>\r\n            \r\n    )}\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    messages: state.chat.messages,\r\n    channel: state.chat.channel\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    setMessages: messages => dispatch(setMessages(messages))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Chat);"]},"metadata":{},"sourceType":"module"}