{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bonaf\\\\Desktop\\\\Projects\\\\Ecommerce\\\\Malinka\\\\frontend\\\\malinka\\\\client\\\\src\\\\with-redux-store.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Component } from 'react';\nimport { makestore } from './redux/store';\nconst isServer = true;\nconst __NEXT_REDUX_STORE__ = '__NEXT_REDUX_STORE__';\n\nfunction getOrCreateStore(initialState) {\n  // Always make a new store if server, otherwise state is shared between requests\n  if (isServer) {\n    return makestore(initialState);\n  } // Create store if unavailable on the client and set it on the window object\n\n\n  if (!window[__NEXT_REDUX_STORE__]) {\n    window[__NEXT_REDUX_STORE__] = makestore(initialState);\n  }\n\n  return window[__NEXT_REDUX_STORE__];\n}\n\nexport default function withReduxStore(App) {\n  return class AppWithRedux extends Component {\n    static async getInitialProps(appContext) {\n      const reduxStore = getOrCreateStore(); // Provide the store to getInitialProps of pages\n\n      appContext.ctx.reduxStore = reduxStore;\n      let appProps = {};\n\n      if (typeof App.getInitialProps === 'function') {\n        appProps = await App.getInitialProps(appContext);\n      }\n\n      return _objectSpread(_objectSpread({}, appProps), {}, {\n        initialReduxState: reduxStore.getState()\n      });\n    }\n\n    constructor(props) {\n      super(props);\n      this.reduxStore = getOrCreateStore(props.initialReduxState);\n    }\n\n    render() {\n      return __jsx(App, _extends({}, this.props, {\n        reduxStore: this.reduxStore,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 14\n        }\n      }));\n    }\n\n  };\n}","map":{"version":3,"sources":["C:/Users/bonaf/Desktop/Projects/Ecommerce/Malinka/frontend/malinka/client/src/with-redux-store.js"],"names":["Component","makestore","isServer","__NEXT_REDUX_STORE__","getOrCreateStore","initialState","window","withReduxStore","App","AppWithRedux","getInitialProps","appContext","reduxStore","ctx","appProps","initialReduxState","getState","constructor","props","render"],"mappings":";;;;;;;;;;;;AACA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAAQC,SAAR,QAAwB,eAAxB;AAEA,MAAMC,QAAQ,OAAd;AACA,MAAMC,oBAAoB,GAAG,sBAA7B;;AAEA,SAASC,gBAAT,CAA0BC,YAA1B,EAAwC;AACtC;AACA,MAAIH,QAAJ,EAAc;AACZ,WAAOD,SAAS,CAACI,YAAD,CAAhB;AACD,GAJqC,CAMtC;;;AACA,MAAI,CAACC,MAAM,CAACH,oBAAD,CAAX,EAAmC;AACjCG,IAAAA,MAAM,CAACH,oBAAD,CAAN,GAA+BF,SAAS,CAACI,YAAD,CAAxC;AACD;;AACD,SAAOC,MAAM,CAACH,oBAAD,CAAb;AACD;;AAED,eAAe,SAASI,cAAT,CAAwBC,GAAxB,EAA6B;AAC1C,SAAO,MAAMC,YAAN,SAA2BT,SAA3B,CAAqC;AAC1C,iBAAaU,eAAb,CAA6BC,UAA7B,EAAyC;AAEvC,YAAMC,UAAU,GAAGR,gBAAgB,EAAnC,CAFuC,CAIvC;;AACAO,MAAAA,UAAU,CAACE,GAAX,CAAeD,UAAf,GAA4BA,UAA5B;AAEA,UAAIE,QAAQ,GAAG,EAAf;;AACA,UAAI,OAAON,GAAG,CAACE,eAAX,KAA+B,UAAnC,EAA+C;AAC7CI,QAAAA,QAAQ,GAAG,MAAMN,GAAG,CAACE,eAAJ,CAAoBC,UAApB,CAAjB;AACD;;AAED,6CACKG,QADL;AAEEC,QAAAA,iBAAiB,EAAEH,UAAU,CAACI,QAAX;AAFrB;AAID;;AAEDC,IAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,YAAMA,KAAN;AACA,WAAKN,UAAL,GAAkBR,gBAAgB,CAACc,KAAK,CAACH,iBAAP,CAAlC;AACD;;AAEDI,IAAAA,MAAM,GAAG;AACP,aAAO,MAAC,GAAD,eAAS,KAAKD,KAAd;AAAqB,QAAA,UAAU,EAAE,KAAKN,UAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAP;AACD;;AA1ByC,GAA5C;AA4BD","sourcesContent":["\r\nimport { Component } from 'react'\r\nimport {makestore} from './redux/store'\r\n\r\nconst isServer = typeof window === 'undefined'\r\nconst __NEXT_REDUX_STORE__ = '__NEXT_REDUX_STORE__'\r\n\r\nfunction getOrCreateStore(initialState) {\r\n  // Always make a new store if server, otherwise state is shared between requests\r\n  if (isServer) {\r\n    return makestore(initialState)\r\n  }\r\n\r\n  // Create store if unavailable on the client and set it on the window object\r\n  if (!window[__NEXT_REDUX_STORE__]) {\r\n    window[__NEXT_REDUX_STORE__] = makestore(initialState)\r\n  }\r\n  return window[__NEXT_REDUX_STORE__]\r\n}\r\n\r\nexport default function withReduxStore(App) {\r\n  return class AppWithRedux extends Component {\r\n    static async getInitialProps(appContext) {\r\n\r\n      const reduxStore = getOrCreateStore()\r\n\r\n      // Provide the store to getInitialProps of pages\r\n      appContext.ctx.reduxStore = reduxStore\r\n\r\n      let appProps = {}\r\n      if (typeof App.getInitialProps === 'function') {\r\n        appProps = await App.getInitialProps(appContext)\r\n      }\r\n\r\n      return {\r\n        ...appProps,\r\n        initialReduxState: reduxStore.getState(),\r\n      }\r\n    }\r\n\r\n    constructor(props) {\r\n      super(props)\r\n      this.reduxStore = getOrCreateStore(props.initialReduxState)\r\n    }\r\n\r\n    render() {\r\n      return <App {...this.props} reduxStore={this.reduxStore} />\r\n    }\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}