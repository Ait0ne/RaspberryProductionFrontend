{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bonaf\\\\Desktop\\\\Projects\\\\Ecommerce\\\\Malinka\\\\frontend\\\\malinka\\\\components\\\\cart-item\\\\cart-item.component.jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { connect } from 'react-redux';\nimport { addItem, removeItem, clearItemFromCart } from '../../src/redux/cart/cart.actions';\nimport API_URL from '../../routes';\nimport Link from 'next/link';\n\nconst CartItem = ({\n  cartItem,\n  addItem,\n  removeItem,\n  clearItemFromCart\n}) => {\n  return __jsx(\"div\", {\n    className: \"cart-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"cart-item-image-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }\n  }, __jsx(\"img\", {\n    className: \"cart-item-image\",\n    alt: \"item-image\",\n    src: `${API_URL}${cartItem.gallery[0].formats.thumbnail.url}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 17\n    }\n  })), __jsx(\"div\", {\n    className: \"cart-item-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }\n  }, __jsx(Link, {\n    href: \"itemgallery/[item]\",\n    as: `itemgallery/${cartItems.id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 17\n    }\n  }, __jsx(\"span\", {\n    className: \"cart-item-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 84\n    }\n  }, cartItem.name)), __jsx(\"div\", {\n    className: \"cart-item-quantity\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 17\n    }\n  }, __jsx(\"div\", {\n    className: \"cart-item-arrow\",\n    onClick: () => removeItem(cartItem),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 21\n    }\n  }, \"\\u276E\"), __jsx(\"span\", {\n    className: \"cart-item-value\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 21\n    }\n  }, cartItem.quantity), __jsx(\"div\", {\n    className: \"cart-item-arrow\",\n    onClick: () => addItem(cartItem),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 21\n    }\n  }, \"\\u276F\"), __jsx(\"span\", {\n    className: \"cart-item-price\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 21\n    }\n  }, \"$\", cartItem.price), __jsx(\"div\", {\n    className: \"cart-item-remove-button\",\n    onClick: () => clearItemFromCart(cartItem),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 21\n    }\n  }, \"\\u2715\"))));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  addItem: item => dispatch(addItem(item)),\n  removeItem: item => dispatch(removeItem(item)),\n  clearItemFromCart: item => dispatch(clearItemFromCart(item))\n});\n\nexport default connect(null, mapDispatchToProps)(CartItem);","map":{"version":3,"sources":["C:/Users/bonaf/Desktop/Projects/Ecommerce/Malinka/frontend/malinka/components/cart-item/cart-item.component.jsx"],"names":["connect","addItem","removeItem","clearItemFromCart","API_URL","Link","CartItem","cartItem","gallery","formats","thumbnail","url","cartItems","id","name","quantity","price","mapDispatchToProps","dispatch","item"],"mappings":";;;AAAA,SAAQA,OAAR,QAAsB,aAAtB;AACA,SAAQC,OAAR,EAAgBC,UAAhB,EAA2BC,iBAA3B,QAAmD,mCAAnD;AACA,OAAOC,OAAP,MAAoB,cAApB;AACA,OAAOC,IAAP,MAAiB,WAAjB;;AAGA,MAAMC,QAAQ,GAAG,CAAC;AAACC,EAAAA,QAAD;AAAWN,EAAAA,OAAX;AAAoBC,EAAAA,UAApB;AAAgCC,EAAAA;AAAhC,CAAD,KAAwD;AACrE,SACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAiC,IAAA,GAAG,EAAC,YAArC;AAAkD,IAAA,GAAG,EAAG,GAAEC,OAAQ,GAAEG,QAAQ,CAACC,OAAT,CAAiB,CAAjB,EAAoBC,OAApB,CAA4BC,SAA5B,CAAsCC,GAAI,EAA9G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ,EAKI;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,oBAAX;AAAgC,IAAA,EAAE,EAAG,eAAcC,SAAS,CAACC,EAAG,EAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmE;AAAM,IAAA,SAAS,EAAC,gBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkCN,QAAQ,CAACO,IAA3C,CAAnE,CADJ,EAEI;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAiC,IAAA,OAAO,EAAE,MAAMZ,UAAU,CAACK,QAAD,CAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAEI;AAAM,IAAA,SAAS,EAAC,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmCA,QAAQ,CAACQ,QAA5C,CAFJ,EAGI;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAiC,IAAA,OAAO,EAAE,MAAMd,OAAO,CAACM,QAAD,CAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,EAII;AAAM,IAAA,SAAS,EAAC,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAoCA,QAAQ,CAACS,KAA7C,CAJJ,EAKI;AAAK,IAAA,SAAS,EAAC,yBAAf;AAAyC,IAAA,OAAO,EAAE,MAAMb,iBAAiB,CAACI,QAAD,CAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ,CAFJ,CALJ,CADJ;AAkBH,CAnBD;;AAsBA,MAAMU,kBAAkB,GAAGC,QAAQ,KAAK;AACpCjB,EAAAA,OAAO,EAAEkB,IAAI,IAAID,QAAQ,CAACjB,OAAO,CAACkB,IAAD,CAAR,CADW;AAEpCjB,EAAAA,UAAU,EAAEiB,IAAI,IAAID,QAAQ,CAAChB,UAAU,CAACiB,IAAD,CAAX,CAFQ;AAGpChB,EAAAA,iBAAiB,EAAEgB,IAAI,IAAID,QAAQ,CAACf,iBAAiB,CAACgB,IAAD,CAAlB;AAHC,CAAL,CAAnC;;AAOA,eAAenB,OAAO,CAAC,IAAD,EAAOiB,kBAAP,CAAP,CAAkCX,QAAlC,CAAf","sourcesContent":["import {connect} from 'react-redux';\r\nimport {addItem,removeItem,clearItemFromCart} from '../../src/redux/cart/cart.actions';\r\nimport API_URL from '../../routes';\r\nimport Link from 'next/link'\r\n\r\n\r\nconst CartItem = ({cartItem, addItem, removeItem, clearItemFromCart}) => {\r\n    return (\r\n        <div className='cart-item'>\r\n            <div className='cart-item-image-container'>\r\n                \r\n                <img className='cart-item-image' alt='item-image' src={`${API_URL}${cartItem.gallery[0].formats.thumbnail.url}`}/>\r\n            </div>\r\n            <div className='cart-item-content'>\r\n                <Link href='itemgallery/[item]' as={`itemgallery/${cartItems.id}`}><span className='cart-item-name'>{cartItem.name}</span></Link>\r\n                <div className='cart-item-quantity'>\r\n                    <div className='cart-item-arrow' onClick={() => removeItem(cartItem)}>&#10094;</div>\r\n                    <span className='cart-item-value'>{cartItem.quantity}</span>\r\n                    <div className='cart-item-arrow' onClick={() => addItem(cartItem)}>&#10095;</div>\r\n                    <span className='cart-item-price'>${cartItem.price}</span>\r\n                    <div className='cart-item-remove-button' onClick={() => clearItemFromCart(cartItem)}>&#10005;</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    addItem: item => dispatch(addItem(item)),\r\n    removeItem: item => dispatch(removeItem(item)),\r\n    clearItemFromCart: item => dispatch(clearItemFromCart(item))\r\n           \r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(CartItem);\r\n\r\n"]},"metadata":{},"sourceType":"module"}