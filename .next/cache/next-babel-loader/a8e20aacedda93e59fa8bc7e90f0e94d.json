{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport logger from 'redux-logger';\nimport persistReducer from './root-reducer';\nconst middlewares = [logger];\nconst startState = {\n  cart: {\n    cartItems: [],\n    cartHidden: true\n  },\n  filter: {\n    currentFilter: 'Bouquet'\n  },\n  pagination: {\n    activePage: 1,\n    perPage: 10,\n    pageRange: 3\n  },\n  sort: {\n    sorted: 'Newest'\n  },\n  user: {\n    currentUser: null\n  },\n  chat: {\n    channel: '',\n    messages: [],\n    newMessages: false,\n    chatHidden: true\n  }\n}; // const makestore = (initialState, options) => createStore(persistReducer, initialState, applyMiddleware(...middlewares))\n// export default makestore;\n\nexport function makestore(initialState = startState) {\n  return createStore(persistReducer, initialState, applyMiddleware(...middlewares));\n}","map":null,"metadata":{},"sourceType":"module"}