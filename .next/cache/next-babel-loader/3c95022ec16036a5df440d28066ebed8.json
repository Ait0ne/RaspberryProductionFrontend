{"ast":null,"code":"var __jsx = React.createElement;\nimport FormInput from '../FormInput/formInput.component';\nimport AreaInput from '../AreaInput/area-input.component';\nimport React, { useState } from 'react';\nimport API_URL from '../../routes';\n\nconst ReviewForm = ({\n  item,\n  addComments\n}) => {\n  const {\n    0: text,\n    1: setText\n  } = useState('');\n  const {\n    0: name,\n    1: setName\n  } = useState('');\n  const {\n    0: email,\n    1: setEmail\n  } = useState('');\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const req = await fetch(`${API_URL}/comments`, {\n      method: 'post',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify({\n        email: email,\n        text: text,\n        name: name,\n        date: new Date(),\n        item: item.id\n      })\n    });\n    const response = await req.json();\n    await addComments(response);\n    setEmail('');\n    setName('');\n    setText('');\n  };\n\n  const handleChange = event => {\n    const {\n      value,\n      name\n    } = event.target;\n\n    if (name === 'text') {\n      setText(value);\n    } else if (name === 'name') {\n      setName(value);\n    } else {\n      setEmail(value);\n    }\n  };\n\n  return __jsx(\"form\", {\n    onSubmit: handleSubmit\n  }, __jsx(AreaInput, {\n    name: \"text\",\n    handleChange: handleChange,\n    value: text,\n    label: \"Your Review\",\n    required: true\n  }), __jsx(FormInput, {\n    name: \"name\",\n    type: \"name\",\n    handleChange: handleChange,\n    value: name,\n    label: \"Name\",\n    required: true\n  }), __jsx(FormInput, {\n    name: \"email\",\n    type: \"email\",\n    label: \"Email\",\n    value: email,\n    handleChange: handleChange,\n    required: true\n  }), __jsx(\"div\", {\n    className: \"buttons\"\n  }, __jsx(\"button\", {\n    className: \"review-button\",\n    type: \"submit\"\n  }, \"Leave a review\")));\n};\n\nexport default ReviewForm;","map":null,"metadata":{},"sourceType":"module"}