{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bonaf\\\\Desktop\\\\Projects\\\\Ecommerce\\\\Malinka\\\\frontend\\\\malinka\\\\components\\\\cart-dropdown\\\\cart-dropdown.component.jsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Router from 'next/router';\nimport { connect } from 'react-redux';\nimport { toggleCartHidden } from '../../src/redux/cart/cart.actions';\nimport ScrollBar from 'react-scrollbars-custom';\nimport CartItem from '../cart-item/cart-item.component';\n\nconst CartDropdown = ({\n  cartItems,\n  toggleCartHidden,\n  total\n}) => {\n  return __jsx(\"div\", {\n    className: \"cart-dropdown\",\n    onBlur: () => toggleCartHidden(),\n    tabIndex: \"0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }\n  }, __jsx(ScrollBar, {\n    style: {\n      height: '280px',\n      width: '240px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"cart-items\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 17\n    }\n  }, cartItems.length ? cartItems.map(cartItem => __jsx(CartItem, {\n    key: cartItem.id,\n    cartItem: cartItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 51\n    }\n  })) : __jsx(\"span\", {\n    className: \"empty-message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 25\n    }\n  }, \"Your cart is empty\"))), __jsx(\"span\", {\n    className: \"cart-dropdown-total\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 17\n    }\n  }, \"Total: $\", total), __jsx(\"button\", {\n    className: \"checkout-button\",\n    type: \"button\",\n    onClick: () => {\n      Router.push('/checkout');\n      toggleCartHidden();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }\n  }, \"GO TO CHECKOUT\"));\n};\n\nconst mapStateToProps = state => ({\n  cartItems: state.cart.cartItems,\n  total: state.cart.cartItems.reduce((sum, cartItem) => sum + cartItem.price * cartItem.quantity, 0)\n});\n\nconst mapDispatchToProps = dispatch => ({\n  toggleCartHidden: () => dispatch(toggleCartHidden())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CartDropdown);","map":{"version":3,"sources":["C:/Users/bonaf/Desktop/Projects/Ecommerce/Malinka/frontend/malinka/components/cart-dropdown/cart-dropdown.component.jsx"],"names":["React","Router","connect","toggleCartHidden","ScrollBar","CartItem","CartDropdown","cartItems","total","height","width","length","map","cartItem","id","push","mapStateToProps","state","cart","reduce","sum","price","quantity","mapDispatchToProps","dispatch"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,gBAAR,QAAgC,mCAAhC;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,QAAP,MAAqB,kCAArB;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAACC,EAAAA,SAAD;AAAWJ,EAAAA,gBAAX;AAA6BK,EAAAA;AAA7B,CAAD,KAAyC;AAC1D,SACI;AAAK,IAAA,SAAS,EAAC,eAAf;AAA+B,IAAA,MAAM,EAAE,MAAKL,gBAAgB,EAA5D;AAAiE,IAAA,QAAQ,EAAC,GAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,SAAD;AAAY,IAAA,KAAK,EAAE;AAACM,MAAAA,MAAM,EAAC,OAAR;AAAiBC,MAAAA,KAAK,EAAE;AAAxB,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACQH,SAAS,CAACI,MAAV,GACAJ,SAAS,CAACK,GAAV,CAAcC,QAAQ,IAAI,MAAC,QAAD;AAAU,IAAA,GAAG,EAAEA,QAAQ,CAACC,EAAxB;AAA4B,IAAA,QAAQ,EAAED,QAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA1B,CADA,GAGA;AAAM,IAAA,SAAS,EAAC,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAJR,CADJ,CADJ,EAUQ;AAAM,IAAA,SAAS,EAAC,qBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAA+CL,KAA/C,CAVR,EAWI;AACA,IAAA,SAAS,EAAC,iBADV;AAEA,IAAA,IAAI,EAAC,QAFL;AAGA,IAAA,OAAO,EAAE,MAAM;AACXP,MAAAA,MAAM,CAACc,IAAP,CAAY,WAAZ;AACAZ,MAAAA,gBAAgB;AACnB,KAND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAXJ,CADJ;AAyBH,CA1BD;;AA4BA,MAAMa,eAAe,GAAGC,KAAK,KAAK;AAC9BV,EAAAA,SAAS,EAAEU,KAAK,CAACC,IAAN,CAAWX,SADQ;AAE9BC,EAAAA,KAAK,EAAES,KAAK,CAACC,IAAN,CAAWX,SAAX,CAAqBY,MAArB,CAA4B,CAACC,GAAD,EAAMP,QAAN,KACnCO,GAAG,GAAGP,QAAQ,CAACQ,KAAT,GAAeR,QAAQ,CAACS,QADvB,EACiC,CADjC;AAFuB,CAAL,CAA7B;;AAOA,MAAMC,kBAAkB,GAAGC,QAAQ,KAAK;AACpCrB,EAAAA,gBAAgB,EAAE,MAAMqB,QAAQ,CAACrB,gBAAgB,EAAjB;AADI,CAAL,CAAnC;;AAKA,eAAeD,OAAO,CAACc,eAAD,EAAiBO,kBAAjB,CAAP,CAA4CjB,YAA5C,CAAf","sourcesContent":["import React from 'react';\r\nimport Router from 'next/router';\r\nimport {connect} from 'react-redux';\r\nimport {toggleCartHidden}  from '../../src/redux/cart/cart.actions';\r\nimport ScrollBar from 'react-scrollbars-custom';\r\nimport CartItem from '../cart-item/cart-item.component';\r\n\r\nconst CartDropdown = ({cartItems,toggleCartHidden, total}) => {\r\n    return (\r\n        <div className='cart-dropdown' onBlur={()=> toggleCartHidden()}  tabIndex='0'>\r\n            <ScrollBar  style={{height:'280px', width: '240px'}}>\r\n                <div className='cart-items' >\r\n                    {   cartItems.length ?\r\n                        cartItems.map(cartItem => <CartItem key={cartItem.id} cartItem={cartItem}/>)\r\n                        : \r\n                        <span className='empty-message'>Your cart is empty</span>\r\n                    }\r\n                </div>\r\n            </ScrollBar>\r\n                <span className='cart-dropdown-total'>Total: ${total}</span>\r\n            <button \r\n            className='checkout-button' \r\n            type='button'\r\n            onClick={() => {\r\n                Router.push('/checkout')\r\n                toggleCartHidden()\r\n            }}\r\n            >\r\n                GO TO CHECKOUT\r\n            </button> \r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    cartItems: state.cart.cartItems,\r\n    total: state.cart.cartItems.reduce((sum, cartItem) => \r\n    sum + cartItem.price*cartItem.quantity, 0\r\n    )\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    toggleCartHidden: () => dispatch(toggleCartHidden())\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(CartDropdown);"]},"metadata":{},"sourceType":"module"}