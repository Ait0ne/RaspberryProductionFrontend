{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bonaf\\\\Desktop\\\\Projects\\\\Ecommerce\\\\Malinka\\\\frontend\\\\malinka\\\\components\\\\Gallery\\\\gallery.component.jsx\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport Card from '../Card/card.component';\nimport API_URL from '../../../routes';\n\nclass Gallery extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"onSelectChange\", event => {\n      if (event.target.value === 'All') {\n        this.setState({\n          currentFilter: ''\n        });\n      } else {\n        this.setState({\n          currentFilter: event.target.value\n        });\n      }\n    });\n  }\n\n  static async getServerSideProps(ctx) {\n    const res = await fetch(`${API_URL}/bouquets`);\n    const data = await res.json();\n    return {\n      items: data\n    };\n  } // constructor(props){\n  //     super(props)\n  //     this.state = {\n  //         items:[],\n  //         categories:[],\n  //         currentFilter:''\n  //     }\n  // }\n\n\n  componentDidMount() {\n    fetch(`${API_URL}/bouquets`).then(res => res.json()).then(data => this.setState({\n      items: [...this.state.items, ...data]\n    }));\n    fetch(`${API_URL}/accessories`).then(res => res.json()).then(data => this.setState({\n      items: [...this.state.items, ...data]\n    }));\n    fetch(`${API_URL}/categories`).then(res => res.json()).then(data => this.setState({\n      categories: data\n    }));\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }\n    }, console.log(this.props));\n  } // render() {\n  //     const filteredItems = this.state.items.filter(item => {\n  //         return item.categories[0].name.includes(this.state.currentFilter)\n  //     })\n  //     return(\n  //         <div className='gallery-container'>\n  //             <div>\n  //                     {   \n  //                         (this.state.categories[0]) ? \n  //                             <select onChange={this.onSelectChange}>\n  //                                 <option>All</option>\n  //                                 {this.state.categories.map(category => {\n  //                                     return <option key={category.id}>{category.name}</option>\n  //                                 })}\n  //                             </select>\n  //                         : (\n  //                             <option>Loading</option>\n  //                         )\n  //                     }\n  //             </div>\n  //             {console.log(this.props)}\n  //             {\n  //                 !this.state.items[0] ?\n  //                     <h1>Loading</h1>\n  //                 :(\n  //                     <div className='gallery'>\n  //                         {\n  //                         filteredItems.map(({id, name, ...otherProps }) =>{\n  //                                 return <Card key={name} name={name} {...otherProps}/>\n  //                         })}\n  //                     </div>\n  //                 )\n  //             }\n  //         </div>\n  //     )\n  // }\n\n\n}\n\nexport default Gallery;","map":{"version":3,"sources":["C:/Users/bonaf/Desktop/Projects/Ecommerce/Malinka/frontend/malinka/components/Gallery/gallery.component.jsx"],"names":["React","Card","API_URL","Gallery","Component","event","target","value","setState","currentFilter","getServerSideProps","ctx","res","fetch","data","json","items","componentDidMount","then","state","categories","render","console","log","props"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,OAAP,MAAoB,iBAApB;;AAIA,MAAMC,OAAN,SAAsBH,KAAK,CAACI,SAA5B,CAAsC;AAAA;AAAA;;AAAA,4CA8BhBC,KAAD,IAAW;AACxB,UAAIA,KAAK,CAACC,MAAN,CAAaC,KAAb,KAAqB,KAAzB,EAA+B;AAC3B,aAAKC,QAAL,CAAc;AAACC,UAAAA,aAAa,EAAC;AAAf,SAAd;AACH,OAFD,MAEM;AACN,aAAKD,QAAL,CAAc;AAACC,UAAAA,aAAa,EAACJ,KAAK,CAACC,MAAN,CAAaC;AAA5B,SAAd;AACC;AACJ,KApCiC;AAAA;;AAClC,eAAaG,kBAAb,CAAgCC,GAAhC,EAAqC;AACjC,UAAMC,GAAG,GAAG,MAAMC,KAAK,CAAE,GAAEX,OAAQ,WAAZ,CAAvB;AACA,UAAMY,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;AACA,WAAO;AAAEC,MAAAA,KAAK,EAAEF;AAAT,KAAP;AACH,GALiC,CAOlC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAIAG,EAAAA,iBAAiB,GAAG;AAChBJ,IAAAA,KAAK,CAAE,GAAEX,OAAQ,WAAZ,CAAL,CACCgB,IADD,CACMN,GAAG,IAAIA,GAAG,CAACG,IAAJ,EADb,EAECG,IAFD,CAEMJ,IAAI,IAAI,KAAKN,QAAL,CAAc;AAACQ,MAAAA,KAAK,EAAC,CAAC,GAAG,KAAKG,KAAL,CAAWH,KAAf,EAAqB,GAAGF,IAAxB;AAAP,KAAd,CAFd;AAGAD,IAAAA,KAAK,CAAE,GAAEX,OAAQ,cAAZ,CAAL,CACCgB,IADD,CACMN,GAAG,IAAIA,GAAG,CAACG,IAAJ,EADb,EAECG,IAFD,CAEMJ,IAAI,IAAI,KAAKN,QAAL,CAAc;AAACQ,MAAAA,KAAK,EAAC,CAAC,GAAG,KAAKG,KAAL,CAAWH,KAAf,EAAqB,GAAGF,IAAxB;AAAP,KAAd,CAFd;AAGAD,IAAAA,KAAK,CAAE,GAAEX,OAAQ,aAAZ,CAAL,CACCgB,IADD,CACMN,GAAG,IAAIA,GAAG,CAACG,IAAJ,EADb,EAECG,IAFD,CAEMJ,IAAI,IAAI,KAAKN,QAAL,CAAc;AAACY,MAAAA,UAAU,EAACN;AAAZ,KAAd,CAFd;AAGH;;AASDO,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKC,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAjB,CADL,CADJ;AAKH,GA3CiC,CA8ClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAjFkC;;AAqFtC,eAAerB,OAAf","sourcesContent":["import React from 'react';\r\nimport Card from '../Card/card.component';\r\nimport API_URL from '../../../routes';\r\n\r\n\r\n\r\nclass Gallery extends React.Component {\r\n    static async getServerSideProps(ctx) {\r\n        const res = await fetch(`${API_URL}/bouquets`)\r\n        const data = await res.json()\r\n        return { items: data  }\r\n    }\r\n\r\n    // constructor(props){\r\n    //     super(props)\r\n    //     this.state = {\r\n    //         items:[],\r\n    //         categories:[],\r\n    //         currentFilter:''\r\n    //     }\r\n    // }\r\n\r\n\r\n\r\n    componentDidMount() {\r\n        fetch(`${API_URL}/bouquets`)\r\n        .then(res => res.json())\r\n        .then(data => this.setState({items:[...this.state.items,...data]}))\r\n        fetch(`${API_URL}/accessories`)\r\n        .then(res => res.json())\r\n        .then(data => this.setState({items:[...this.state.items,...data]}))\r\n        fetch(`${API_URL}/categories`)\r\n        .then(res => res.json())\r\n        .then(data => this.setState({categories:data}))\r\n    }\r\n\r\n    onSelectChange = (event) => {\r\n        if (event.target.value==='All'){\r\n            this.setState({currentFilter:''})\r\n        } else{\r\n        this.setState({currentFilter:event.target.value})\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                {console.log(this.props)}\r\n            </div>\r\n        )\r\n    }\r\n    \r\n\r\n    // render() {\r\n    //     const filteredItems = this.state.items.filter(item => {\r\n    //         return item.categories[0].name.includes(this.state.currentFilter)\r\n    //     })\r\n    //     return(\r\n    //         <div className='gallery-container'>\r\n    //             <div>\r\n    //                     {   \r\n    //                         (this.state.categories[0]) ? \r\n    //                             <select onChange={this.onSelectChange}>\r\n    //                                 <option>All</option>\r\n    //                                 {this.state.categories.map(category => {\r\n    //                                     return <option key={category.id}>{category.name}</option>\r\n    //                                 })}\r\n    //                             </select>\r\n    //                         : (\r\n    //                             <option>Loading</option>\r\n    //                         )\r\n    //                     }\r\n    //             </div>\r\n    //             {console.log(this.props)}\r\n    //             {\r\n    //                 !this.state.items[0] ?\r\n    //                     <h1>Loading</h1>\r\n    //                 :(\r\n    //                     <div className='gallery'>\r\n    //                         {\r\n    //                         filteredItems.map(({id, name, ...otherProps }) =>{\r\n    //                                 return <Card key={name} name={name} {...otherProps}/>\r\n    //                         })}\r\n    //                     </div>\r\n    //                 )\r\n    //             }\r\n    //         </div>\r\n    //     )\r\n    // }\r\n}\r\n\r\n\r\nexport default Gallery;"]},"metadata":{},"sourceType":"module"}