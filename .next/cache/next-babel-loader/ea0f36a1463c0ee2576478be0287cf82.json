{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bonaf\\\\Desktop\\\\Projects\\\\Ecommerce\\\\Malinka\\\\frontend\\\\malinka\\\\pages\\\\payment.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState, Fragment } from 'react';\nimport Router, { withRouter } from 'next/router';\nimport { connect } from 'react-redux';\nimport CartItem from '../components/cart-item/cart-item.component';\nimport StripeButton from '../components/stripe-button/stripe-button.component';\nimport Footer from '../components/Footer/footer.component';\n\nconst PaymentPage = ({\n  currentUser,\n  cartItems,\n  total\n}) => {\n  const {\n    0: payMethod,\n    1: setPayMethod\n  } = useState('');\n  const {\n    0: deliveryMethod,\n    1: setDeliveryMethod\n  } = useState(''); // useEffect(()=>{\n  //     if (!currentUser) {\n  //         Router.back()\n  //     }\n  // })\n\n  const onMethodFormChange = event => {\n    setPayMethod(event.target.value);\n  };\n\n  const onDeliveryFormChange = event => {\n    setDeliveryMethod(event.target.value);\n  };\n\n  return __jsx(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, console.log(deliveryMethod), __jsx(\"div\", {\n    className: \"payment-page-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"payment-page-main-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"total\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }\n  }, __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 21\n    }\n  }, \"Total: $\", total)), __jsx(\"div\", {\n    className: \"payment-method-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }\n  }, __jsx(\"p\", {\n    className: \"payment-method-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 21\n    }\n  }, \"Choose payment method\"), __jsx(\"form\", {\n    className: \"payment-method-form\",\n    onChange: onMethodFormChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 21\n    }\n  }, __jsx(\"input\", {\n    type: \"radio\",\n    value: \"cash\",\n    name: \"payment-method\",\n    className: \"payment-method-radio\",\n    id: \"payment-method-cash\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 25\n    }\n  }), __jsx(\"label\", {\n    for: \"payment-method-cash\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 25\n    }\n  }, \"Pay with Cash\"), __jsx(\"input\", {\n    type: \"radio\",\n    value: \"card\",\n    name: \"payment-method\",\n    className: \"payment-method-radio\",\n    id: \"payment-method-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 25\n    }\n  }), __jsx(\"label\", {\n    for: \"payment-method-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 25\n    }\n  }, \"Pay online using card\"))), __jsx(\"div\", {\n    className: \"delivery-method-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }, __jsx(\"p\", {\n    className: \"delivery-method-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 21\n    }\n  }, \"Choose delivery method\"), __jsx(\"form\", {\n    className: \"delivery-method-form\",\n    onChange: onDeliveryFormChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 21\n    }\n  }, __jsx(\"input\", {\n    type: \"radio\",\n    value: \"delivery\",\n    name: \"delivery-method\",\n    className: \"delivery-method-radio\",\n    id: \"delivery-method-delivery\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 25\n    }\n  }), __jsx(\"label\", {\n    for: \"delivery-method-delivery\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 25\n    }\n  }, \"Delivery\"), __jsx(\"input\", {\n    type: \"radio\",\n    value: \"pick-up\",\n    name: \"delivery-method\",\n    className: \"delivery-method-radio\",\n    id: \"delivery-method-pickup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 25\n    }\n  }), __jsx(\"label\", {\n    for: \"delivery-method-pickup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 25\n    }\n  }, \"Pickup\"))), __jsx(StripeButton, {\n    currentUser: currentUser,\n    price: total,\n    cartItems: cartItems,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  })), __jsx(\"div\", {\n    className: \"payment-page-cart-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, cartItems.length ? cartItems.map(cartItem => __jsx(CartItem, {\n    key: cartItem.id,\n    cartItem: cartItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 47\n    }\n  })) : __jsx(\"span\", {\n    className: \"empty-message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 21\n    }\n  }, \"Your cart is empty\"))), __jsx(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }));\n};\n\nconst mapStateToProps = state => ({\n  cartItems: state.cart.cartItems,\n  currentUser: state.user.currentUser,\n  total: state.cart.cartItems.reduce((sum, cartItem) => sum + cartItem.price * cartItem.quantity, 0)\n});\n\nexport default withRouter(connect(mapStateToProps)(PaymentPage));","map":{"version":3,"sources":["C:/Users/bonaf/Desktop/Projects/Ecommerce/Malinka/frontend/malinka/pages/payment.js"],"names":["React","useEffect","useState","Fragment","Router","withRouter","connect","CartItem","StripeButton","Footer","PaymentPage","currentUser","cartItems","total","payMethod","setPayMethod","deliveryMethod","setDeliveryMethod","onMethodFormChange","event","target","value","onDeliveryFormChange","console","log","length","map","cartItem","id","mapStateToProps","state","cart","user","reduce","sum","price","quantity"],"mappings":"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","sourcesContent":["import React, {useEffect, useState, Fragment} from 'react'\r\nimport Router, {withRouter} from 'next/router';\r\nimport {connect} from 'react-redux';\r\nimport CartItem from '../components/cart-item/cart-item.component'\r\nimport StripeButton from '../components/stripe-button/stripe-button.component'\r\nimport Footer from '../components/Footer/footer.component'\r\nconst PaymentPage =({currentUser, cartItems, total}) => {\r\n    const [payMethod, setPayMethod] = useState('')\r\n    const [deliveryMethod, setDeliveryMethod] = useState('')\r\n    // useEffect(()=>{\r\n    //     if (!currentUser) {\r\n    //         Router.back()\r\n    //     }\r\n    // })\r\n\r\n    const onMethodFormChange = (event) => {\r\n        setPayMethod(event.target.value)\r\n    }\r\n    const onDeliveryFormChange = (event) => {\r\n        setDeliveryMethod(event.target.value)\r\n    }\r\n    return (\r\n        \r\n        <Fragment>\r\n        {console.log(deliveryMethod)}\r\n        <div className='payment-page-container'>\r\n            <div className='payment-page-main-content'>\r\n                <div className='total'>\r\n                    <span>Total: ${total}</span>\r\n                </div>\r\n                <div className='payment-method-container'>  \r\n                    <p className='payment-method-title'>Choose payment method</p>\r\n                    <form className='payment-method-form' onChange={onMethodFormChange}>\r\n                        <input type='radio' value='cash' name='payment-method' className='payment-method-radio' id = 'payment-method-cash'/>\r\n                        <label for='payment-method-cash'>Pay with Cash</label>\r\n                        <input type='radio' value='card' name='payment-method' className='payment-method-radio' id = 'payment-method-card'/>\r\n                        <label for='payment-method-card'>Pay online using card</label>\r\n                    </form>\r\n                </div>\r\n                <div className='delivery-method-container'>  \r\n                    <p className='delivery-method-title'>Choose delivery method</p>\r\n                    <form className='delivery-method-form' onChange={onDeliveryFormChange}>\r\n                        <input type='radio' value='delivery' name='delivery-method' className='delivery-method-radio' id = 'delivery-method-delivery'/>\r\n                        <label for='delivery-method-delivery'>Delivery</label>\r\n                        <input type='radio' value='pick-up' name='delivery-method' className='delivery-method-radio' id = 'delivery-method-pickup'/>\r\n                        <label for='delivery-method-pickup'>Pickup</label>\r\n                    </form>\r\n                </div>\r\n                <StripeButton currentUser={currentUser} price={total} cartItems={cartItems}/>\r\n            </div>\r\n            <div className='payment-page-cart-container'>\r\n                {\r\n                    cartItems.length ?\r\n                    cartItems.map(cartItem => <CartItem key={cartItem.id} cartItem={cartItem}/>)\r\n                    : \r\n                    <span className='empty-message'>Your cart is empty</span>\r\n                \r\n                }\r\n            </div>\r\n        </div>\r\n        <Footer/>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    cartItems: state.cart.cartItems,\r\n    currentUser: state.user.currentUser,\r\n    total: state.cart.cartItems.reduce((sum, cartItem) => \r\n    sum + cartItem.price*cartItem.quantity, 0\r\n    )\r\n})\r\n\r\nexport default withRouter(connect(mapStateToProps)(PaymentPage));"]},"metadata":{},"sourceType":"module"}