{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bonaf\\\\Desktop\\\\Projects\\\\Ecommerce\\\\Malinka\\\\frontend\\\\malinka\\\\pages\\\\payment.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useState, Fragment } from 'react';\nimport Router, { withRouter } from 'next/router';\nimport { connect } from 'react-redux';\nimport CartItem from '../components/cart-item/cart-item.component';\nimport StripeButton from '../components/stripe-button/stripe-button.component';\nimport Footer from '../components/Footer/footer.component';\n\nconst PaymentPage = ({\n  currentUser,\n  cartItems,\n  total\n}) => {\n  const {\n    0: payMethod,\n    1: setPayMethod\n  } = useState('');\n  const {\n    0: deliveryMethod,\n    1: setDeliveryMethod\n  } = useState('');\n  const {\n    0: deliveryAddress,\n    1: setDeliveryAddress\n  } = useState({\n    city: '',\n    address: ''\n  });\n  const {\n    0: address,\n    1: setAddress\n  } = useState('');\n  const {\n    0: hiddenAddressForm,\n    1: setHiddenAddressForm\n  } = useState(true); // useEffect(()=>{\n  //     if (!currentUser) {\n  //         Router.back()\n  //     }\n  // })\n\n  const onMethodFormChange = event => {\n    setPayMethod(event.target.value);\n  };\n\n  const onDeliveryFormChange = event => {\n    setDeliveryMethod(event.target.value);\n  };\n\n  const onDeliveryAddressChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setDeliveryAddress(_objectSpread(_objectSpread({}, deliveryAddress), {}, {\n      [name]: value\n    }));\n  };\n\n  const onAddressSubmit = event => {\n    event.preventDefault();\n    setAddress({\n      city: deliveryAddress.city,\n      address: deliveryAddress.address\n    });\n    setHiddenAddressForm(true);\n  };\n\n  const onCreateOrder = () => {\n    const order = `${cartItems.map(cartItem => `${cartItem.name}: ${cartItem.quantity}\\n`)}\n         \\nTotal:${total}\\n Delivery Method: ${deliveryMethod} \\n ${deliveryMethod === 'delivery' ? `Delivery Address: ${address.city}, ${address.address}` : ''}`;\n    fetch(`${API_URL}/orders`, {\n      method: 'post',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify({\n        Status: \"Pending\",\n        name: currentUser.email,\n        createdAt: new Date(),\n        OrderDetails: order\n      })\n    }).then(response => {\n      if (response.ok) {\n        clearCart();\n        alert('Order successfully created');\n      } else {\n        alert('There was an issue creating order, please contact Customer Support');\n      }\n    }).catch(error => {\n      alert('There was an issue creating order, please contact Customer Support');\n    });\n  };\n\n  return __jsx(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"payment-page-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"payment-page-main-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"payment-method-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }, __jsx(\"p\", {\n    className: \"payment-method-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 21\n    }\n  }, \"Choose payment method\"), __jsx(\"form\", {\n    className: \"payment-method-form\",\n    onChange: onMethodFormChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 21\n    }\n  }, __jsx(\"input\", {\n    type: \"radio\",\n    value: \"cash\",\n    name: \"payment-method\",\n    className: \"payment-method-radio\",\n    id: \"payment-method-cash\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 25\n    }\n  }), __jsx(\"label\", {\n    for: \"payment-method-cash\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 25\n    }\n  }, \"Pay with Cash\"), __jsx(\"input\", {\n    type: \"radio\",\n    value: \"card\",\n    name: \"payment-method\",\n    className: \"payment-method-radio\",\n    id: \"payment-method-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 25\n    }\n  }), __jsx(\"label\", {\n    for: \"payment-method-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 25\n    }\n  }, \"Pay online using card\"))), __jsx(\"div\", {\n    className: \"delivery-method-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }\n  }, __jsx(\"p\", {\n    className: \"delivery-method-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 21\n    }\n  }, \"Choose delivery method\"), __jsx(\"form\", {\n    className: \"delivery-method-form\",\n    onChange: onDeliveryFormChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 21\n    }\n  }, __jsx(\"input\", {\n    type: \"radio\",\n    value: \"delivery\",\n    name: \"delivery-method\",\n    className: \"delivery-method-radio\",\n    id: \"delivery-method-delivery\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 25\n    }\n  }), __jsx(\"label\", {\n    for: \"delivery-method-delivery\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 25\n    }\n  }, \"Delivery\"), __jsx(\"input\", {\n    type: \"radio\",\n    value: \"pickup\",\n    name: \"delivery-method\",\n    className: \"delivery-method-radio\",\n    id: \"delivery-method-pickup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 25\n    }\n  }), __jsx(\"label\", {\n    for: \"delivery-method-pickup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 25\n    }\n  }, \"Pickup\")), deliveryMethod !== 'delivery' ? null : __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 21\n    }\n  }, address === '' ? __jsx(\"button\", {\n    type: \"button\",\n    onClick: () => setHiddenAddressForm(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 21\n    }\n  }, \"Add Delivery Address\") : __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 21\n    }\n  }, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 25\n    }\n  }, \"Delivery Address\"), __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 25\n    }\n  }, \"City: \", address.city), __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 25\n    }\n  }, \"Address: \", address.address), __jsx(\"button\", {\n    type: \"button\",\n    onClick: () => setHiddenAddressForm(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 25\n    }\n  }, \"Change\")), hiddenAddressForm ? null : __jsx(\"form\", {\n    className: \"delivery-address-form\",\n    onSubmit: onAddressSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 25\n    }\n  }, __jsx(\"input\", {\n    type: \"text\",\n    value: deliveryAddress.city,\n    name: \"city\",\n    className: \"delivery-address-city\",\n    id: \"delivery-address-city\",\n    onChange: onDeliveryAddressChange,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 29\n    }\n  }), __jsx(\"label\", {\n    for: \"delivery-address-city\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 29\n    }\n  }, \"City\"), __jsx(\"input\", {\n    type: \"text\",\n    value: deliveryAddress.address,\n    name: \"address\",\n    className: \"delivery-address-address\",\n    id: \"delivery-address-address\",\n    onChange: onDeliveryAddressChange,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 29\n    }\n  }), __jsx(\"label\", {\n    for: \"delivery-address-address\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 29\n    }\n  }, \"Address\"), __jsx(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 29\n    }\n  }, \"Save Address\")))), payMethod === 'card' && deliveryMethod === 'pickup' || payMethod === 'card' && deliveryMethod === 'delivery' && address !== '' ? __jsx(StripeButton, {\n    currentUser: currentUser,\n    price: total,\n    cartItems: cartItems,\n    deliveryMethod: deliveryMethod,\n    deliveryAddress: address,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 21\n    }\n  }) : null, payMethod === 'cash' && deliveryMethod === 'pickup' || payMethod === 'cash' && deliveryMethod === 'delivery' && address !== '' ? __jsx(\"button\", {\n    type: \"button\",\n    onClick: onCreateOrder,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 21\n    }\n  }, \"Create order\") : null), __jsx(\"div\", {\n    className: \"payment-page-cart-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }\n  }, __jsx(\"p\", {\n    className: \"payment-page-cart-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 17\n    }\n  }, \"Your cart\"), cartItems.length ? cartItems.map(cartItem => __jsx(CartItem, {\n    key: cartItem.id,\n    cartItem: cartItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 47\n    }\n  })) : __jsx(\"span\", {\n    className: \"empty-message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 21\n    }\n  }, \"Your cart is empty\"), __jsx(\"div\", {\n    className: \"payment-page-cart-total\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 17\n    }\n  }, __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 21\n    }\n  }, \"Total: $\", total)))), __jsx(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }\n  }));\n};\n\nconst mapStateToProps = state => ({\n  cartItems: state.cart.cartItems,\n  currentUser: state.user.currentUser,\n  total: state.cart.cartItems.reduce((sum, cartItem) => sum + cartItem.price * cartItem.quantity, 0)\n});\n\nexport default withRouter(connect(mapStateToProps)(PaymentPage));","map":{"version":3,"sources":["C:/Users/bonaf/Desktop/Projects/Ecommerce/Malinka/frontend/malinka/pages/payment.js"],"names":["React","useEffect","useState","Fragment","Router","withRouter","connect","CartItem","StripeButton","Footer","PaymentPage","currentUser","cartItems","total","payMethod","setPayMethod","deliveryMethod","setDeliveryMethod","deliveryAddress","setDeliveryAddress","city","address","setAddress","hiddenAddressForm","setHiddenAddressForm","onMethodFormChange","event","target","value","onDeliveryFormChange","onDeliveryAddressChange","name","onAddressSubmit","preventDefault","onCreateOrder","order","map","cartItem","quantity","fetch","API_URL","method","headers","body","JSON","stringify","Status","email","createdAt","Date","OrderDetails","then","response","ok","clearCart","alert","catch","error","length","id","mapStateToProps","state","cart","user","reduce","sum","price"],"mappings":"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","sourcesContent":["import React, {useEffect, useState, Fragment} from 'react'\r\nimport Router, {withRouter} from 'next/router';\r\nimport {connect} from 'react-redux';\r\nimport CartItem from '../components/cart-item/cart-item.component'\r\nimport StripeButton from '../components/stripe-button/stripe-button.component'\r\nimport Footer from '../components/Footer/footer.component'\r\nconst PaymentPage =({currentUser, cartItems, total}) => {\r\n    const [payMethod, setPayMethod] = useState('')\r\n    const [deliveryMethod, setDeliveryMethod] = useState('')\r\n    const [deliveryAddress, setDeliveryAddress] = useState({city:'', address:''})\r\n    const [address, setAddress] = useState('')\r\n    const [hiddenAddressForm, setHiddenAddressForm] = useState(true)\r\n    // useEffect(()=>{\r\n    //     if (!currentUser) {\r\n    //         Router.back()\r\n    //     }\r\n    // })\r\n\r\n    const onMethodFormChange = (event) => {\r\n        setPayMethod(event.target.value)\r\n    }\r\n    const onDeliveryFormChange = (event) => {\r\n        setDeliveryMethod(event.target.value)\r\n    }\r\n    const onDeliveryAddressChange = (event) => {\r\n        const {name, value} = event.target\r\n        setDeliveryAddress({...deliveryAddress,[name]:value})\r\n    }\r\n    const onAddressSubmit = (event) => {\r\n        event.preventDefault()\r\n        setAddress({city:deliveryAddress.city,address:deliveryAddress.address})\r\n        setHiddenAddressForm(true)\r\n    }\r\n    const onCreateOrder = () => {\r\n        const order = `${cartItems.map(cartItem=>`${cartItem.name}: ${cartItem.quantity}\\n`)}\r\n         \\nTotal:${total}\\n Delivery Method: ${deliveryMethod} \\n ${deliveryMethod==='delivery'?`Delivery Address: ${address.city}, ${address.address}`:''}`\r\n        fetch(`${API_URL}/orders`,{\r\n            method: 'post',\r\n            headers: {'Content-type': 'application/json'},\r\n            body: JSON.stringify({\r\n                Status: \"Pending\",\r\n                name: currentUser.email,\r\n                createdAt: new Date(),\r\n                OrderDetails: order,\r\n            })            \r\n    }).then(response => {\r\n        if(response.ok){\r\n            clearCart()\r\n            alert('Order successfully created')   \r\n        }\r\n            else {\r\n                alert('There was an issue creating order, please contact Customer Support')\r\n            }\r\n        }).catch(error => {\r\n            alert('There was an issue creating order, please contact Customer Support')\r\n        })\r\n    }\r\n\r\n\r\n    return (\r\n        \r\n        <Fragment>\r\n        <div className='payment-page-container'>\r\n            <div className='payment-page-main-content'>\r\n\r\n                <div className='payment-method-container'>  \r\n                    <p className='payment-method-title'>Choose payment method</p>\r\n                    <form className='payment-method-form' onChange={onMethodFormChange}>\r\n                        <input type='radio' value='cash' name='payment-method' className='payment-method-radio' id = 'payment-method-cash'/>\r\n                        <label for='payment-method-cash'>Pay with Cash</label>\r\n                        <input type='radio' value='card' name='payment-method' className='payment-method-radio' id = 'payment-method-card'/>\r\n                        <label for='payment-method-card'>Pay online using card</label>\r\n                    </form>\r\n                </div>\r\n                <div className='delivery-method-container'>  \r\n                    <p className='delivery-method-title'>Choose delivery method</p>\r\n                    <form className='delivery-method-form' onChange={onDeliveryFormChange}>\r\n                        <input type='radio' value='delivery' name='delivery-method' className='delivery-method-radio' id = 'delivery-method-delivery'/>\r\n                        <label for='delivery-method-delivery'>Delivery</label>\r\n                        <input type='radio' value='pickup' name='delivery-method' className='delivery-method-radio' id = 'delivery-method-pickup'/>\r\n                        <label for='delivery-method-pickup'>Pickup</label>\r\n                    </form>\r\n                    {\r\n                    deliveryMethod!=='delivery'?\r\n                    null:\r\n                    <div>\r\n                    {address===''?\r\n                    <button type='button' onClick={()=>setHiddenAddressForm(false)}>Add Delivery Address</button>\r\n                    :\r\n                    <div>\r\n                        <p>Delivery Address</p>\r\n                        <span>City: {address.city}</span>\r\n                        <span>Address: {address.address}</span>\r\n                        <button type='button' onClick={()=>setHiddenAddressForm(false)}>Change</button>\r\n                    </div>}\r\n                        { hiddenAddressForm?null\r\n                        :\r\n                        <form className='delivery-address-form' onSubmit={onAddressSubmit}>\r\n                            <input type='text' value={deliveryAddress.city} name='city' className='delivery-address-city' id='delivery-address-city' onChange={onDeliveryAddressChange} required/>\r\n                            <label for='delivery-address-city'>City</label>\r\n                            <input type='text' value={deliveryAddress.address} name='address' className='delivery-address-address' id='delivery-address-address' onChange={onDeliveryAddressChange} required/>\r\n                            <label for='delivery-address-address'>Address</label>\r\n                            <button type='submit'>Save Address</button>\r\n                        </form>}\r\n                    </div>\r\n                }\r\n                </div>\r\n                {\r\n                    payMethod==='card'&&deliveryMethod==='pickup' || payMethod==='card'&&deliveryMethod==='delivery'&&address!==''?\r\n                    <StripeButton currentUser={currentUser} price={total} cartItems={cartItems} deliveryMethod={deliveryMethod} deliveryAddress={address}/>\r\n                    :null\r\n                }\r\n                {\r\n                    payMethod==='cash'&&deliveryMethod==='pickup' || payMethod==='cash'&&deliveryMethod==='delivery'&&address!==''?\r\n                    <button type='button' onClick={onCreateOrder}>Create order</button>\r\n                    :null\r\n                }\r\n            </div>\r\n            <div className='payment-page-cart-container'>\r\n                <p className='payment-page-cart-title'>Your cart</p>\r\n                {\r\n                    cartItems.length ?\r\n                    cartItems.map(cartItem => <CartItem key={cartItem.id} cartItem={cartItem}/>)\r\n                    : \r\n                    <span className='empty-message'>Your cart is empty</span>\r\n                \r\n                }\r\n                <div className='payment-page-cart-total'>\r\n                    <span>Total: ${total}</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <Footer/>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    cartItems: state.cart.cartItems,\r\n    currentUser: state.user.currentUser,\r\n    total: state.cart.cartItems.reduce((sum, cartItem) => \r\n    sum + cartItem.price*cartItem.quantity, 0\r\n    )\r\n})\r\n\r\nexport default withRouter(connect(mapStateToProps)(PaymentPage));"]},"metadata":{},"sourceType":"module"}