{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bonaf\\\\Desktop\\\\Projects\\\\Ecommerce\\\\Malinka\\\\frontend\\\\malinka\\\\components\\\\Chat\\\\chat.component.jsx\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Fragment } from 'react';\nimport AreaInput from '../AreaInput/area-input.component';\nimport { sendMessage } from '../../firebase/firebase.utils';\nimport { connect } from 'react-redux';\nimport { setMessages, setNewMessages, toggleChatHidden } from '../../src/redux/chat/chat.actions';\nimport { setToken } from '../../src/redux/user/user.action';\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport { motion } from 'framer-motion';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArrowUp } from '@fortawesome/free-solid-svg-icons';\nimport ClickOutside from '../ClickOutside/ClickOutside.component';\n\nclass Chat extends React.Component {\n  constructor() {\n    super();\n\n    _defineProperty(this, \"unsubscribe\", channel => {\n      if (!firebase.apps.length) {\n        firebase.initializeApp({\n          apiKey: \"AIzaSyABugTRykVjU3cO3nkANbnArtyZ_TPix1Q\",\n          authDomain: \"raspberry-dacc1.firebaseapp.com\",\n          databaseURL: \"https://raspberry-dacc1.firebaseio.com\",\n          projectId: \"raspberry-dacc1\",\n          storageBucket: \"raspberry-dacc1.appspot.com\",\n          messagingSenderId: \"435336134829\",\n          appId: \"1:435336134829:web:36258d0b8bdb9bf9810624\",\n          measurementId: \"G-E4XKDDZNWV\"\n        });\n      }\n\n      firebase.firestore().collection('Chat').doc(`${channel}`).collection(`messages`).where('createdAt', '>', 1590246123874).orderBy('createdAt', 'desc').onSnapshot(docs => {\n        const messages = [];\n        docs.forEach(function (doc) {\n          messages.push(doc.data());\n        });\n        this.props.setMessages(messages);\n        this.props.setNewMessages(true);\n      });\n    });\n\n    _defineProperty(this, \"listener\", async event => {\n      if (event.code === \"Enter\" || event.code === \"NumpadEnter\") {\n        const userRef = await sendMessage(this.state.text, this.props.channel);\n        this.setState({\n          text: ''\n        });\n      }\n    });\n\n    _defineProperty(this, \"adminToken\", '');\n\n    _defineProperty(this, \"handleSubmit\", async event => {\n      event.preventDefault();\n      const userRef = await sendMessage(this.state.text, this.props.channel);\n      this.setState({\n        text: ''\n      });\n    });\n\n    _defineProperty(this, \"handleChange\", event => {\n      this.setState({\n        text: event.target.value\n      });\n    });\n\n    this.state = {\n      text: '',\n      deviceWidth: 0\n    };\n    this.updateDeviceWidth = this.updateDeviceWidth.bind(this);\n  }\n\n  componentDidMount() {\n    const {\n      channel\n    } = this.props;\n    this.unsubscribe(channel);\n    document.addEventListener(\"keydown\", this.listener);\n    this.updateDeviceWidth();\n    window.addEventListener('resize', this.updateDeviceWidth);\n    firebase.firestore().collection('users').where('tokens', '>', []).get().then(docs => {\n      console.log(docs);\n      docs.forEach(doc => {\n        console.log(doc.data);\n      });\n    });\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\"keydown\", this.listener);\n    window.removeEventListener('resize', this.updateDeviceWidth);\n  }\n\n  updateDeviceWidth() {\n    this.setState({\n      deviceWidth: window.innerWidth\n    });\n  }\n\n  render() {\n    const {\n      messages,\n      channel,\n      toggleChatHidden,\n      setNewMessages\n    } = this.props;\n    const {\n      deviceWidth\n    } = this.state;\n    return __jsx(motion.div, {\n      initial: \"initial\",\n      animate: \"animate\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }\n    }, __jsx(ClickOutside, {\n      onClick: () => {\n        toggleChatHidden();\n        setNewMessages(false);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }\n    }, __jsx(motion.div, {\n      initial: {\n        width: '0px',\n        opacity: 0\n      },\n      animate: {\n        width: `${deviceWidth > 768 ? '336px' : `${deviceWidth}px`}`,\n        opacity: 1,\n        transition: {\n          duration: 0.3,\n          staggerChildren: 0.09\n        }\n      },\n      className: \"chat-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }\n    }, __jsx(\"div\", {\n      className: \"chat-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 21\n      }\n    }, __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 25\n      }\n    }, \"Company Name\"), deviceWidth < 769 ? __jsx(\"div\", {\n      className: \"close-chat-small-device\",\n      onClick: () => {\n        toggleChatHidden();\n        setNewMessages(false);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 25\n      }\n    }, \"\\u2715\") : null), __jsx(\"div\", {\n      className: \"messages-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 21\n      }\n    }, messages ? messages.map(message => __jsx(motion.div, {\n      initial: {\n        opacity: 0\n      },\n      animate: {\n        opacity: 1,\n        transition: {\n          delay: 0.1,\n          duration: 0.8\n        }\n      },\n      className: `${message.user.id === channel ? 'message-user' : 'message-support'} chat-message`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 48\n      }\n    }, message.text)) : null), __jsx(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 21\n      }\n    }, __jsx(AreaInput, {\n      className: \"message-box\",\n      name: \"text\",\n      handleChange: this.handleChange,\n      value: this.state.text,\n      placeholder: \"Type your message here...\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 25\n      }\n    }), __jsx(\"button\", {\n      className: \"message-send-button\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 25\n      }\n    }, __jsx(FontAwesomeIcon, {\n      className: \"message-send-button-icon\",\n      icon: faArrowUp,\n      size: \"lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 29\n      }\n    }))))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  messages: state.chat.messages,\n  channel: state.chat.channel,\n  chatHidden: state.chat.chatHidden\n});\n\nconst mapDispatchToProps = dispatch => ({\n  setMessages: messages => dispatch(setMessages(messages)),\n  setNewMessages: bool => dispatch(setNewMessages(bool)),\n  toggleChatHidden: () => dispatch(toggleChatHidden())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Chat);","map":{"version":3,"sources":["C:/Users/bonaf/Desktop/Projects/Ecommerce/Malinka/frontend/malinka/components/Chat/chat.component.jsx"],"names":["React","Fragment","AreaInput","sendMessage","connect","setMessages","setNewMessages","toggleChatHidden","setToken","firebase","motion","FontAwesomeIcon","faArrowUp","ClickOutside","Chat","Component","constructor","channel","apps","length","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","collection","doc","where","orderBy","onSnapshot","docs","messages","forEach","push","data","props","event","code","userRef","state","text","setState","preventDefault","target","value","deviceWidth","updateDeviceWidth","bind","componentDidMount","unsubscribe","document","addEventListener","listener","window","get","then","console","log","componentWillUnmount","removeEventListener","innerWidth","render","width","opacity","transition","duration","staggerChildren","map","message","delay","user","id","handleSubmit","handleChange","mapStateToProps","chat","chatHidden","mapDispatchToProps","dispatch","bool"],"mappings":"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","sourcesContent":["import React, {Fragment} from 'react'\r\nimport AreaInput from '../AreaInput/area-input.component';\r\nimport {sendMessage} from '../../firebase/firebase.utils';\r\nimport {connect} from 'react-redux'; \r\nimport {setMessages, setNewMessages, toggleChatHidden} from '../../src/redux/chat/chat.actions';\r\nimport {setToken} from '../../src/redux/user/user.action';\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport {motion} from 'framer-motion';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {faArrowUp} from '@fortawesome/free-solid-svg-icons';\r\nimport ClickOutside from '../ClickOutside/ClickOutside.component'\r\n\r\n\r\n\r\n\r\nclass  Chat extends React.Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            text:'',\r\n            deviceWidth: 0,\r\n        }\r\n        this.updateDeviceWidth= this.updateDeviceWidth.bind(this);\r\n    }\r\n\r\n    unsubscribe = (channel) => {\r\n        \r\n            if (!firebase.apps.length) {\r\n                firebase.initializeApp({\r\n                    apiKey: \"AIzaSyABugTRykVjU3cO3nkANbnArtyZ_TPix1Q\",\r\n                    authDomain: \"raspberry-dacc1.firebaseapp.com\",\r\n                    databaseURL: \"https://raspberry-dacc1.firebaseio.com\",\r\n                    projectId: \"raspberry-dacc1\",\r\n                    storageBucket: \"raspberry-dacc1.appspot.com\",\r\n                    messagingSenderId: \"435336134829\",\r\n                    appId: \"1:435336134829:web:36258d0b8bdb9bf9810624\",\r\n                    measurementId: \"G-E4XKDDZNWV\"\r\n                })\r\n            }\r\n                 \r\n            \r\n        \r\n            firebase.firestore().collection('Chat').doc(`${channel}`).collection(`messages`).where('createdAt','>',1590246123874 ).orderBy('createdAt','desc')\r\n            .onSnapshot((docs) => {\r\n                const messages=[] \r\n                docs.forEach(function(doc) {\r\n                    messages.push(doc.data());\r\n                });\r\n                this.props.setMessages(messages)    \r\n                this.props.setNewMessages(true)\r\n            })\r\n                        \r\n        \r\n    }\r\n    listener = async event => {\r\n        if (event.code === \"Enter\" || event.code === \"NumpadEnter\") {\r\n          const userRef = await sendMessage(this.state.text, this.props.channel);\r\n          this.setState({text:''})\r\n        }\r\n      };\r\n    \r\n    adminToken = ''  \r\n    componentDidMount() {\r\n        const {channel} = this.props\r\n        this.unsubscribe(channel)\r\n        document.addEventListener(\"keydown\", this.listener);\r\n        this.updateDeviceWidth();\r\n        window.addEventListener('resize', this.updateDeviceWidth)\r\n        firebase.firestore().collection('users').where('tokens', '>', []).get().then(docs => {\r\n            console.log(docs)\r\n            docs.forEach(doc => {\r\n                console.log(doc.data)\r\n            })\r\n        })\r\n    }\r\n\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener(\"keydown\", this.listener);\r\n        window.removeEventListener('resize', this.updateDeviceWidth)\r\n    }\r\n\r\n    handleSubmit = async event => {\r\n\r\n        event.preventDefault();\r\n        const userRef = await sendMessage(this.state.text, this.props.channel);\r\n        this.setState({text:''})\r\n    }\r\n\r\n\r\n    handleChange = event => {\r\n            this.setState({text:event.target.value})\r\n    }\r\n\r\n    updateDeviceWidth() {\r\n        this.setState({deviceWidth:window.innerWidth})\r\n    }\r\n\r\n    render () {\r\n        const {messages,channel, toggleChatHidden, setNewMessages} = this.props\r\n        const {deviceWidth} = this.state\r\n        return (\r\n            <motion.div initial='initial' animate='animate'>\r\n            <ClickOutside onClick={() => {\r\n                toggleChatHidden()\r\n                setNewMessages(false)\r\n                }}>\r\n                <motion.div \r\n                initial={{width:'0px', opacity:0}}\r\n                animate={{width:`${deviceWidth>768 ? '336px': `${deviceWidth}px`}`,opacity:1,  transition:{duration:0.3, staggerChildren: 0.09}}}\r\n                \r\n                className='chat-container'\r\n                \r\n                >\r\n                    <div className='chat-title'>\r\n                        <p>Company Name</p>\r\n                        {deviceWidth<769?\r\n                        <div className='close-chat-small-device' onClick={()=> \r\n                            {\r\n                            toggleChatHidden();\r\n                            setNewMessages(false);\r\n                            }\r\n                        }>&#10005;</div>\r\n                        : null    \r\n                        }\r\n                    </div>\r\n                    <div className='messages-container' >\r\n                    {   messages ?\r\n                        messages.map(message=> <motion.div\r\n                            initial={{opacity:0}}\r\n                            animate={{ opacity:1, transition:{delay:0.1, duration:0.8}}}\r\n                            className={`${message.user.id===channel ? 'message-user': 'message-support'} chat-message`}>{message.text}</motion.div>)\r\n                        :null\r\n                    }\r\n                    </div>\r\n                    <form onSubmit={this.handleSubmit}>\r\n\r\n\r\n                        <AreaInput \r\n                        className='message-box'\r\n                        name='text'\r\n                        handleChange={this.handleChange}\r\n                        value={this.state.text}\r\n                        placeholder='Type your message here...'\r\n                        required\r\n                        />       \r\n\r\n                        <button className='message-send-button'  type='submit'>\r\n                            <FontAwesomeIcon className='message-send-button-icon' icon={faArrowUp} size='lg'/>\r\n                        </button>\r\n\r\n                    </form>\r\n                </motion.div>\r\n            </ClickOutside>\r\n            </motion.div>\r\n    )}\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    messages: state.chat.messages,\r\n    channel: state.chat.channel,\r\n    chatHidden: state.chat.chatHidden,\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    setMessages: messages => dispatch(setMessages(messages)),\r\n    setNewMessages:bool => dispatch(setNewMessages(bool)),\r\n    toggleChatHidden: () => dispatch(toggleChatHidden()),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Chat);"]},"metadata":{},"sourceType":"module"}