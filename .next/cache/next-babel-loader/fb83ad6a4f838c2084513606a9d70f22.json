{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport logger from 'redux-logger';\nimport persistReducer from './root-reducer';\nimport { createWrapper } from 'next-redux-wrapper';\nimport { persistStore } from 'redux-persist';\nconst middlewares = [logger]; // const makeConfiguredStore = (reducer) =>\n//     createStore(reducer, applyMiddleware(logger));\n// const makestore = (context) => {\n//         const store = makeConfiguredStore(persistReducer);\n//         store.__persistor = persistStore(store); \n//         return store;\n// };\n//next redux wrapper 6\n// const makestore = context => createStore(persistReducer, applyMiddleware(logger));\n// const wrapper = createWrapper(makestore, {storeKey:'cccc',debug: true});\n// export default wrapper;\n\nconst makestore = (initialState, options) => createStore(persistReducer, initialState, applyMiddleware(...middlewares));\n\nexport default makestore;","map":{"version":3,"sources":["C:/Users/bonaf/Desktop/Projects/Ecommerce/Malinka/frontend/malinka/src/redux/store.js"],"names":["createStore","applyMiddleware","logger","persistReducer","createWrapper","persistStore","middlewares","makestore","initialState","options"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,cAAP,MAA2B,gBAA3B;AACA,SAAQC,aAAR,QAA4B,oBAA5B;AACA,SAAQC,YAAR,QAA2B,eAA3B;AAEA,MAAMC,WAAW,GAAG,CAACJ,MAAD,CAApB,C,CAIA;AACA;AAEA;AAGA;AAEA;AAEA;AAEA;AAGA;AACA;AAIA;AAEA;;AAEA,MAAMK,SAAS,GAAG,CAACC,YAAD,EAAeC,OAAf,KAA2BT,WAAW,CAACG,cAAD,EAAiBK,YAAjB,EAA+BP,eAAe,CAAC,GAAGK,WAAJ,CAA9C,CAAxD;;AAEA,eAAeC,SAAf","sourcesContent":["import { createStore, applyMiddleware } from 'redux';\r\nimport logger from 'redux-logger';\r\nimport persistReducer from './root-reducer';\r\nimport {createWrapper} from 'next-redux-wrapper';\r\nimport {persistStore} from 'redux-persist';\r\n\r\nconst middlewares = [logger];\r\n\r\n\r\n\r\n// const makeConfiguredStore = (reducer) =>\r\n//     createStore(reducer, applyMiddleware(logger));\r\n\r\n// const makestore = (context) => {\r\n\r\n\r\n//         const store = makeConfiguredStore(persistReducer);\r\n\r\n//         store.__persistor = persistStore(store); \r\n\r\n//         return store;\r\n\r\n// };\r\n\r\n\r\n//next redux wrapper 6\r\n// const makestore = context => createStore(persistReducer, applyMiddleware(logger));\r\n\r\n\r\n\r\n// const wrapper = createWrapper(makestore, {storeKey:'cccc',debug: true});\r\n\r\n// export default wrapper;\r\n\r\nconst makestore = (initialState, options) => createStore(persistReducer, initialState, applyMiddleware(...middlewares))\r\n\r\nexport default makestore;"]},"metadata":{},"sourceType":"module"}