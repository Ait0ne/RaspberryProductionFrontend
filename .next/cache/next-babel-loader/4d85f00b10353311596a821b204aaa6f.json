{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\bonaf\\\\Desktop\\\\Projects\\\\Ecommerce\\\\Malinka\\\\frontend\\\\malinka\\\\components\\\\Chat\\\\chat.component.jsx\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Fragment } from 'react';\nimport AreaInput from '../AreaInput/area-input.component';\nimport { sendMessage } from '../../firebase/firebase.utils';\nimport { connect } from 'react-redux';\nimport { setMessages as _setMessages, setNewMessages as _setNewMessages, toggleChatHidden as _toggleChatHidden } from '../../src/redux/chat/chat.actions';\nimport { setToken as _setToken } from '../../src/redux/user/user.action';\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport { motion } from 'framer-motion';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArrowUp } from '@fortawesome/free-solid-svg-icons';\nimport ClickOutside from '../ClickOutside/ClickOutside.component';\n\nvar Chat = /*#__PURE__*/function (_React$Component) {\n  _inherits(Chat, _React$Component);\n\n  var _super = _createSuper(Chat);\n\n  function Chat() {\n    var _this;\n\n    _classCallCheck(this, Chat);\n\n    _this = _super.call(this);\n\n    _defineProperty(_assertThisInitialized(_this), \"unsubscribe\", function (channel) {\n      if (!firebase.apps.length) {\n        firebase.initializeApp({\n          apiKey: \"AIzaSyABugTRykVjU3cO3nkANbnArtyZ_TPix1Q\",\n          authDomain: \"raspberry-dacc1.firebaseapp.com\",\n          databaseURL: \"https://raspberry-dacc1.firebaseio.com\",\n          projectId: \"raspberry-dacc1\",\n          storageBucket: \"raspberry-dacc1.appspot.com\",\n          messagingSenderId: \"435336134829\",\n          appId: \"1:435336134829:web:36258d0b8bdb9bf9810624\",\n          measurementId: \"G-E4XKDDZNWV\"\n        });\n      }\n\n      firebase.firestore().collection('Chat').doc(\"\".concat(channel)).collection(\"messages\").where('createdAt', '>', 1590246123874).orderBy('createdAt', 'desc').onSnapshot(function (docs) {\n        var messages = [];\n        docs.forEach(function (doc) {\n          messages.push(doc.data());\n        });\n\n        _this.props.setMessages(messages);\n\n        _this.props.setNewMessages(true);\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"listener\", /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(event) {\n        var userRef;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!(event.code === \"Enter\" || event.code === \"NumpadEnter\")) {\n                  _context.next = 5;\n                  break;\n                }\n\n                _context.next = 3;\n                return sendMessage(_this.state.text, _this.props.channel);\n\n              case 3:\n                userRef = _context.sent;\n\n                _this.setState({\n                  text: ''\n                });\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSubmit\", /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(event) {\n        var userRef;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                event.preventDefault();\n                _context2.next = 3;\n                return sendMessage(_this.state.text, _this.props.channel);\n\n              case 3:\n                userRef = _context2.sent;\n\n                _this.setState({\n                  text: ''\n                });\n\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_this), \"handleChange\", function (event) {\n      _this.setState({\n        text: event.target.value\n      });\n    });\n\n    _this.state = {\n      text: '',\n      deviceWidth: 0\n    };\n    _this.updateDeviceWidth = _this.updateDeviceWidth.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Chat, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props = this.props,\n          channel = _this$props.channel,\n          token = _this$props.token;\n      this.unsubscribe(channel);\n      document.addEventListener(\"keydown\", this.listener);\n      this.updateDeviceWidth();\n      window.addEventListener('resize', this.updateDeviceWidth);\n\n      if (!token) {\n        var messaging = firebase.messaging();\n        messaging.usePublicVapidKey('BL94j_oj5MtfGi_mQraCQ410XFCRPz0gD9oaXAzDoQ_MRXRLJBpe4rAChMEEAut7P6YiRk4jzteDSAHhYVqRX9c');\n        messaging.getToken().then(function (currentToken) {\n          if (currentToken) {\n            _setToken(currentToken);\n          } else {\n            window.Notification.requestPermission().then(function (result) {\n              if (result === \"granted\") {\n                console.log(currentToken);\n              }\n            });\n          }\n        })[\"catch\"](function (err) {\n          console.log('An error occurred while retrieving token. ', err);\n        });\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      document.removeEventListener(\"keydown\", this.listener);\n      window.removeEventListener('resize', this.updateDeviceWidth);\n    }\n  }, {\n    key: \"updateDeviceWidth\",\n    value: function updateDeviceWidth() {\n      this.setState({\n        deviceWidth: window.innerWidth\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props2 = this.props,\n          messages = _this$props2.messages,\n          channel = _this$props2.channel,\n          toggleChatHidden = _this$props2.toggleChatHidden,\n          setNewMessages = _this$props2.setNewMessages;\n      var deviceWidth = this.state.deviceWidth;\n      return __jsx(motion.div, {\n        initial: \"initial\",\n        animate: \"animate\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }\n      }, __jsx(ClickOutside, {\n        onClick: function onClick() {\n          toggleChatHidden();\n          setNewMessages(false);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }\n      }, __jsx(motion.div, {\n        initial: {\n          width: '0px',\n          opacity: 0\n        },\n        animate: {\n          width: \"\".concat(deviceWidth > 768 ? '336px' : \"\".concat(deviceWidth, \"px\")),\n          opacity: 1,\n          transition: {\n            duration: 0.3,\n            staggerChildren: 0.09\n          }\n        },\n        className: \"chat-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 17\n        }\n      }, __jsx(\"div\", {\n        className: \"chat-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 21\n        }\n      }, __jsx(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 25\n        }\n      }, \"Company Name\"), deviceWidth < 769 ? __jsx(\"div\", {\n        className: \"close-chat-small-device\",\n        onClick: function onClick() {\n          toggleChatHidden();\n          setNewMessages(false);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 25\n        }\n      }, \"\\u2715\") : null), __jsx(\"div\", {\n        className: \"messages-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 21\n        }\n      }, messages ? messages.map(function (message) {\n        return __jsx(motion.div, {\n          initial: {\n            opacity: 0\n          },\n          animate: {\n            opacity: 1,\n            transition: {\n              delay: 0.1,\n              duration: 0.8\n            }\n          },\n          className: \"\".concat(message.user.id === channel ? 'message-user' : 'message-support', \" chat-message\"),\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 48\n          }\n        }, message.text);\n      }) : null), __jsx(\"form\", {\n        onSubmit: this.handleSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 21\n        }\n      }, __jsx(AreaInput, {\n        className: \"message-box\",\n        name: \"text\",\n        handleChange: this.handleChange,\n        value: this.state.text,\n        placeholder: \"Type your message here...\",\n        required: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 25\n        }\n      }), __jsx(\"button\", {\n        className: \"message-send-button\",\n        type: \"submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 25\n        }\n      }, __jsx(FontAwesomeIcon, {\n        className: \"message-send-button-icon\",\n        icon: faArrowUp,\n        size: \"lg\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 29\n        }\n      }))))));\n    }\n  }]);\n\n  return Chat;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    messages: state.chat.messages,\n    channel: state.chat.channel,\n    chatHidden: state.chat.chatHidden,\n    token: state.user.token\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    setMessages: function setMessages(messages) {\n      return dispatch(_setMessages(messages));\n    },\n    setNewMessages: function setNewMessages(bool) {\n      return dispatch(_setNewMessages(bool));\n    },\n    toggleChatHidden: function toggleChatHidden() {\n      return dispatch(_toggleChatHidden());\n    },\n    setToken: function setToken(token) {\n      return dispatch(_setToken(token));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Chat);","map":{"version":3,"sources":["C:/Users/bonaf/Desktop/Projects/Ecommerce/Malinka/frontend/malinka/components/Chat/chat.component.jsx"],"names":["React","Fragment","AreaInput","sendMessage","connect","setMessages","setNewMessages","toggleChatHidden","setToken","firebase","motion","FontAwesomeIcon","faArrowUp","ClickOutside","Chat","channel","apps","length","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","collection","doc","where","orderBy","onSnapshot","docs","messages","forEach","push","data","props","event","code","state","text","userRef","setState","preventDefault","target","value","deviceWidth","updateDeviceWidth","bind","token","unsubscribe","document","addEventListener","listener","window","messaging","usePublicVapidKey","getToken","then","currentToken","Notification","requestPermission","result","console","log","err","removeEventListener","innerWidth","width","opacity","transition","duration","staggerChildren","map","message","delay","user","id","handleSubmit","handleChange","Component","mapStateToProps","chat","chatHidden","mapDispatchToProps","dispatch","bool"],"mappings":"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","sourcesContent":["import React, {Fragment} from 'react'\r\nimport AreaInput from '../AreaInput/area-input.component';\r\nimport {sendMessage} from '../../firebase/firebase.utils';\r\nimport {connect} from 'react-redux'; \r\nimport {setMessages, setNewMessages, toggleChatHidden} from '../../src/redux/chat/chat.actions';\r\nimport {setToken} from '../../src/redux/user/user.action';\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport {motion} from 'framer-motion';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {faArrowUp} from '@fortawesome/free-solid-svg-icons';\r\nimport ClickOutside from '../ClickOutside/ClickOutside.component'\r\n\r\n\r\n\r\n\r\nclass  Chat extends React.Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            text:'',\r\n            deviceWidth: 0,\r\n        }\r\n        this.updateDeviceWidth= this.updateDeviceWidth.bind(this);\r\n    }\r\n\r\n    unsubscribe = (channel) => {\r\n        \r\n            if (!firebase.apps.length) {\r\n                firebase.initializeApp({\r\n                    apiKey: \"AIzaSyABugTRykVjU3cO3nkANbnArtyZ_TPix1Q\",\r\n                    authDomain: \"raspberry-dacc1.firebaseapp.com\",\r\n                    databaseURL: \"https://raspberry-dacc1.firebaseio.com\",\r\n                    projectId: \"raspberry-dacc1\",\r\n                    storageBucket: \"raspberry-dacc1.appspot.com\",\r\n                    messagingSenderId: \"435336134829\",\r\n                    appId: \"1:435336134829:web:36258d0b8bdb9bf9810624\",\r\n                    measurementId: \"G-E4XKDDZNWV\"\r\n                })\r\n            }\r\n                 \r\n            \r\n        \r\n            firebase.firestore().collection('Chat').doc(`${channel}`).collection(`messages`).where('createdAt','>',1590246123874 ).orderBy('createdAt','desc')\r\n            .onSnapshot((docs) => {\r\n                const messages=[] \r\n                docs.forEach(function(doc) {\r\n                    messages.push(doc.data());\r\n                });\r\n                this.props.setMessages(messages)    \r\n                this.props.setNewMessages(true)\r\n            })\r\n                        \r\n        \r\n    }\r\n    listener = async event => {\r\n        if (event.code === \"Enter\" || event.code === \"NumpadEnter\") {\r\n          const userRef = await sendMessage(this.state.text, this.props.channel);\r\n          this.setState({text:''})\r\n        }\r\n      };\r\n\r\n    componentDidMount() {\r\n        const {channel, token} = this.props\r\n        this.unsubscribe(channel)\r\n        document.addEventListener(\"keydown\", this.listener);\r\n        this.updateDeviceWidth();\r\n        window.addEventListener('resize', this.updateDeviceWidth)\r\n        if (!token){\r\n            const messaging = firebase.messaging()\r\n            messaging.usePublicVapidKey('BL94j_oj5MtfGi_mQraCQ410XFCRPz0gD9oaXAzDoQ_MRXRLJBpe4rAChMEEAut7P6YiRk4jzteDSAHhYVqRX9c')\r\n            messaging.getToken().then((currentToken) => {\r\n                if (currentToken) {\r\n                    setToken(currentToken)\r\n                } else {\r\n                    window.Notification.requestPermission()\r\n                    .then((result) => {\r\n                        if (result===\"granted\") {\r\n                            console.log(currentToken)\r\n                        } \r\n                    })\r\n                }\r\n                }\r\n            ).catch((err) => {\r\n                console.log('An error occurred while retrieving token. ', err);\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener(\"keydown\", this.listener);\r\n        window.removeEventListener('resize', this.updateDeviceWidth)\r\n    }\r\n\r\n    handleSubmit = async event => {\r\n        event.preventDefault();\r\n        const userRef = await sendMessage(this.state.text, this.props.channel);\r\n        this.setState({text:''})\r\n    }\r\n\r\n\r\n    handleChange = event => {\r\n            this.setState({text:event.target.value})\r\n    }\r\n\r\n    updateDeviceWidth() {\r\n        this.setState({deviceWidth:window.innerWidth})\r\n    }\r\n\r\n    render () {\r\n        const {messages,channel, toggleChatHidden, setNewMessages} = this.props\r\n        const {deviceWidth} = this.state\r\n        return (\r\n            <motion.div initial='initial' animate='animate'>\r\n            <ClickOutside onClick={() => {\r\n                toggleChatHidden()\r\n                setNewMessages(false)\r\n                }}>\r\n                <motion.div \r\n                initial={{width:'0px', opacity:0}}\r\n                animate={{width:`${deviceWidth>768 ? '336px': `${deviceWidth}px`}`,opacity:1,  transition:{duration:0.3, staggerChildren: 0.09}}}\r\n                \r\n                className='chat-container'\r\n                \r\n                >\r\n                    <div className='chat-title'>\r\n                        <p>Company Name</p>\r\n                        {deviceWidth<769?\r\n                        <div className='close-chat-small-device' onClick={()=> \r\n                            {\r\n                            toggleChatHidden();\r\n                            setNewMessages(false);\r\n                            }\r\n                        }>&#10005;</div>\r\n                        : null    \r\n                        }\r\n                    </div>\r\n                    <div className='messages-container' >\r\n                    {   messages ?\r\n                        messages.map(message=> <motion.div\r\n                            initial={{opacity:0}}\r\n                            animate={{ opacity:1, transition:{delay:0.1, duration:0.8}}}\r\n                            className={`${message.user.id===channel ? 'message-user': 'message-support'} chat-message`}>{message.text}</motion.div>)\r\n                        :null\r\n                    }\r\n                    </div>\r\n                    <form onSubmit={this.handleSubmit}>\r\n\r\n\r\n                        <AreaInput \r\n                        className='message-box'\r\n                        name='text'\r\n                        handleChange={this.handleChange}\r\n                        value={this.state.text}\r\n                        placeholder='Type your message here...'\r\n                        required\r\n                        />       \r\n\r\n                        <button className='message-send-button'  type='submit'>\r\n                            <FontAwesomeIcon className='message-send-button-icon' icon={faArrowUp} size='lg'/>\r\n                        </button>\r\n\r\n                    </form>\r\n                </motion.div>\r\n            </ClickOutside>\r\n            </motion.div>\r\n    )}\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    messages: state.chat.messages,\r\n    channel: state.chat.channel,\r\n    chatHidden: state.chat.chatHidden,\r\n    token: state.user.token\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    setMessages: messages => dispatch(setMessages(messages)),\r\n    setNewMessages:bool => dispatch(setNewMessages(bool)),\r\n    toggleChatHidden: () => dispatch(toggleChatHidden()),\r\n    setToken: (token) => dispatch(setToken(token))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Chat);"]},"metadata":{},"sourceType":"module"}